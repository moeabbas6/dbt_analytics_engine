version: 2

models:
  - name: int_order_lvl_joined
    description: >
      This intermediate model combines data from orders, shipping, returns, and Net Promoter Score (NPS) 
      feedback to provide a unified view of each order's lifecycle. It includes key information on order 
      details, shipping transactions, product categories, returns, and customer feedback. This model is 
      designed to support comprehensive analysis across multiple dimensions, such as order fulfillment 
      performance, product costs, and customer satisfaction. It ensures data consistency by aggregating 
      and validating financial, logistic, and customer experience data.
    data_tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('stg_raw__orders')
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          name: int_order_lvl_joined_unequal_agg_shipping_amount
          expression: sum(shipping_amount)
          compare_model: ref("stg_raw__shipping")
          compare_expression: sum(shipping_amount)
    columns:
      - name: product_category_id
        data_type: int64
        description: '{{ doc("product_category_id") }}'
        data_tests:
          - not_null

      - name: product_id
        data_type: int64
        description: '{{ doc("product_id") }}'
        data_tests:
          - not_null

      - name: order_id
        data_type: string
        description: '{{ doc("order_id") }}'
        data_tests:
          - unique
          - not_null
          - relationships:
              to: ref('stg_raw__orders')
              field: order_id

      - name: customer_id
        data_type: string
        description: '{{ doc("customer_id") }}'
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_raw__customers')
              field: customer_id

      - name: first_order_date
        data_type: date
        description: '{{ doc("first_order_date") }}'

      - name: customer_order_nb
        data_type: int64
        description: '{{ doc("customer_order_nb") }}'

      - name: order_status
        data_type: string
        description: '{{ doc("orders_status") }}'
        data_tests:
          - not_null

      - name: order_date
        data_type: datetime
        description: '{{ doc("order_date") }}'
        data_tests:
          - not_null

      - name: shipping_id
        data_type: string
        description: '{{ doc("shipping_id") }}'
        data_tests:
          - unique
          - relationships:
              to: ref('stg_raw__shipping')
              field: shipping_id

      - name: is_shipped
        data_type: boolean
        description: '{{ doc("is_shipped") }}'
        data_tests:
          - not_null
          - accepted_values:
              name: int_order_lvl_joined_unexpected_is_shipped_bool
              values: [TRUE, FALSE]
              quote: false

      - name: shipping_date
        description: '{{ doc("shipping_date") }}'
        data_type: datetime

      - name: shipping_amount
        description: '{{ doc("shipping_amount") }}'
        data_type: float64

      - name: return_id
        data_type: string
        description: '{{ doc("return_id") }}'
        data_tests:
          - unique

      - name: is_returned
        data_type: boolean
        description: '{{ doc("is_returned") }}'
        data_tests:
          - not_null
          - accepted_values:
              name: int_order_lvl_joined_unexpected_is_returned_bool
              values: [TRUE, FALSE]
              quote: false

      - name: return_date
        data_type: datetime
        description: '{{ doc("return_date") }}'

      - name: return_reason
        data_type: string
        description: '{{ doc("return_reason") }}'

      - name: is_nps
        data_type: boolean
        description: '{{ doc("is_nps") }}'
        data_tests:
          - not_null
          - accepted_values:
              name: int_order_lvl_joined_unexpected_is_nps_bool
              values: [TRUE, FALSE]
              quote: false

      - name: nps_score
        data_type: int64
        description: '{{ doc("nps_score") }}'

      - name: nps_date
        data_type: datetime
        description: '{{ doc("nps_date") }}'

      - name: product_category
        data_type: string
        description: '{{ doc("product_category") }}'
        data_tests:
          - not_null

      - name: product_name
        data_type: string
        description: '{{ doc("product_name") }}'
        data_tests:
          - not_null

      - name: inbound_shipping_cost
        data_type: float64
        description: '{{ doc("inbound_shipping_cost") }}'
        data_tests:
          - not_null

      - name: product_cost
        data_type: float64
        description: '{{ doc("product_cost") }}'
        data_tests:
          - not_null



  - name: int_customers_orders_products_joined
    description: >
      This intermediate model combines customer, order, and product data to provide a unified 
      view of customer purchase behavior. It links customers with their order history, product 
      categories, and associated costs, enabling detailed analysis of customer lifetime value, 
      product performance, and purchase patterns. This model is essential for understanding the 
      relationships between customers, the products they buy, and the frequency of their orders.
    columns:
      - name: order_id
        data_type: string
        description: '{{ doc("order_id") }}'

      - name: order_status
        data_type: string
        description: '{{ doc("orders_status") }}'

      - name: order_date
        data_type: datetime
        description: '{{ doc("order_date") }}'

      - name: customer_id
        data_type: string
        description: '{{ doc("customer_id") }}'

      - name: first_order_date
        data_type: date
        description: '{{ doc("first_order_date") }}'

      - name: customer_order_nb
        data_type: int64
        description: '{{ doc("customer_order_nb") }}'

      - name: product_category_id
        data_type: int64
        description: '{{ doc("product_category_id") }}'

      - name: product_category
        data_type: string
        description: '{{ doc("product_category") }}'

      - name: product_id
        data_type: int64
        description: '{{ doc("product_id") }}'

      - name: product_name
        data_type: string
        description: '{{ doc("product_name") }}'

      - name: inbound_shipping_cost
        data_type: float64
        description: '{{ doc("inbound_shipping_cost") }}'

      - name: product_cost
        data_type: float64
        description: '{{ doc("product_cost") }}'




  - name: int_orders_payments_joined
    description: >
      This intermediate model joins data from customer orders, payments, shipping, and 
      returns to provide a comprehensive view of each transaction. It combines key details 
      such as order and payment information, product categories, shipping details, returns, 
      and Net Promoter Score (NPS) feedback. This model serves as the foundation for 
      advanced reporting and analysis, including customer order behavior, payment trends, 
      product performance, and overall financial metrics like gross revenue and payment fees. 
      The model also supports customer experience analysis through NPS and return data.
    columns:
      - name: country_id
        data_type: int64
        description: '{{ doc("country_id") }}'

      - name: country
        data_type: string
        description: '{{ doc("country") }}'

      - name: order_id
        data_type: string
        description: '{{ doc("order_id") }}'

      - name: customer_id
        data_type: string
        description: '{{ doc("customer_id") }}'

      - name: first_order_date
        data_type: date
        description: '{{ doc("first_order_date") }}'

      - name: customer_order_nb
        data_type: int64
        description: '{{ doc("customer_order_nb") }}'

      - name: order_status
        data_type: string
        description: '{{ doc("orders_status") }}'

      - name: order_date
        data_type: datetime
        description: '{{ doc("order_date") }}'

      - name: shipping_id
        data_type: string
        description: '{{ doc("shipping_id") }}'

      - name: is_shipped
        data_type: boolean
        description: '{{ doc("is_shipped") }}'

      - name: shipping_date
        data_type: datetime
        description: '{{ doc("shipping_date") }}'

      - name: shipping_amount
        data_type: float64
        description: '{{ doc("shipping_amount") }}'

      - name: return_id
        data_type: string
        description: '{{ doc("return_id") }}'

      - name: is_returned
        data_type: boolean
        description: '{{ doc("is_returned") }}'

      - name: return_date
        data_type: datetime
        description: '{{ doc("return_date") }}'

      - name: return_reason
        data_type: string
        description: '{{ doc("return_reason") }}'

      - name: is_nps
        data_type: boolean
        description: '{{ doc("is_nps") }}'

      - name: nps_score
        data_type: int64
        description: '{{ doc("nps_score") }}'

      - name: nps_date
        data_type: datetime
        description: '{{ doc("nps_date") }}'

      - name: product_category_id
        data_type: int64
        description: '{{ doc("product_category_id") }}'

      - name: product_category
        data_type: string
        description: '{{ doc("product_category") }}'

      - name: product_id
        data_type: int64
        description: '{{ doc("product_id") }}'

      - name: product_name
        data_type: string
        description: '{{ doc("product_name") }}'

      - name: inbound_shipping_cost
        data_type: float64
        description: '{{ doc("inbound_shipping_cost") }}'

      - name: product_cost
        data_type: float64
        description: '{{ doc("product_cost") }}'

      - name: nb_payments
        data_type: int64
        description: '{{ doc("nb_payments") }}'

      - name: payment_method
        data_type: string
        description: '{{ doc("payment_method") }}'

      - name: gross_revenue
        data_type: float64
        description: '{{ doc("gross_revenue") }}'

      - name: tax_rate
        data_type: float64
        description: '{{ doc("tax_rate") }}'

      - name: payment_fee
        data_type: float64
        description: '{{ doc("payment_fee") }}'



  - name: int_nps_returns_shipping_joined
    description: >
      This intermediate model joins data from shipping, returns, and Net Promoter Score (NPS) feedback 
      to provide a complete view of the post-order lifecycle. It captures key details about the 
      shipping status and amounts, returns and their reasons, and customer satisfaction through NPS 
      scores. This model is essential for analyzing order fulfillment efficiency, return rates, and 
      customer feedback, providing insights into both logistical performance and customer sentiment.
    columns:
      - name: order_id
        data_type: string
        description: '{{ doc("order_id") }}'

      - name: shipping_id
        data_type: string
        description: '{{ doc("shipping_id") }}'

      - name: is_shipped
        data_type: boolean
        description: '{{ doc("is_shipped") }}'

      - name: shipping_date
        data_type: datetime
        description: '{{ doc("shipping_date") }}'

      - name: shipping_amount
        data_type: float64
        description: '{{ doc("shipping_amount") }}'

      - name: return_id
        data_type: string
        description: '{{ doc("return_id") }}'

      - name: is_returned
        data_type: boolean
        description: '{{ doc("is_returned") }}'

      - name: return_date
        data_type: datetime
        description: '{{ doc("return_date") }}' 

      - name: return_reason
        data_type: string
        description: '{{ doc("return_reason") }}'

      - name: is_nps
        data_type: boolean
        description: '{{ doc("is_nps") }}'

      - name: nps_score
        data_type: int64
        description: '{{ doc("nps_score") }}'

      - name: nps_date
        data_type: datetime
        description: '{{ doc("nps_date") }}'


  - name: int_payments_lvl_joined
    descriptions: >
      This intermediate model combines payment data from various sources, including raw payments 
      and payment fee information, and applies necessary transformations to prepare the data for 
      analysis. It joins payments with relevant details such as payment methods, fees, and tax 
      rates. This model serves as a critical layer for calculating accurate payment processing 
      costs, including gross revenue, percentage fees, and fixed fees, ensuring that all financial 
      details are linked and aggregated correctly for further reporting. Data quality is maintained 
      through row count checks and aggregation tests to ensure consistency with the source tables.
    data_tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('stg_raw__payments')
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          name: int_payments_lvl_joined_unequal_agg_gross_revenue
          expression: sum(gross_revenue)
          compare_model: ref("stg_raw__payments")
          compare_expression: sum(gross_revenue)
    columns:
      - name: order_id
        data_type: string
        description: '{{ doc("order_id") }}'
        data_tests:
          - not_null

      - name: payment_id
        data_type: int64
        description: '{{ doc("payment_id") }}'
        data_tests:
          - not_null

      - name: order_payment_id
        data_type: string
        description: '{{ doc("order_payment_id") }}'
        data-tests:
          - unique
          - not_null
          - relationships:
              to: ref('stg_raw__payments')
              field: order_payment_id

      - name: payment_method
        data_type: string
        description: '{{ doc("payment_method") }}'
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_seed__payment_fees')
              field: payment_method

      - name: payment_status
        data_type: string
        description: '{{ doc("payment_status") }}'
        data_tests:
          - not_null

      - name: country_id
        data_type: int64
        description: '{{ doc("country_id") }}'
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_seed__taxes')
              field: country_id

      - name: country
        data_type: string
        description: '{{ doc("country") }}'
        data_tests:
          - not_null

      - name: created_at
        data_type: datetime
        description: '{{ doc("created_at") }}'
        data_tests:
          - not_null

      - name: gross_revenue
        data_type: float64
        description: '{{ doc("gross_revenue") }}'
        data_tests:
          - not_null

      - name: tax_rate
        data_type: float64
        description: '{{ doc("tax_rate") }}'
        data_tests:
          - not_null

      - name: percentage_fee
        data_type: float64
        description: '{{ doc("percentage_fee") }}'
        data_tests:
          - not_null

      - name: fixed_fee
        data_type: float64
        description: '{{ doc("fixed_fee") }}'
        data_tests:
          - not_null

      - name: payment_fee
        data_type: float64
        description: '{{ doc("payment_fee") }}'
        data_tests:
          - not_null
          - dbt_utils.expression_is_true:
              name: int_payments_lvl_joined_unexpected_payment_fee
              expression: "= ROUND((gross_revenue * (percentage_fee / 100)) + fixed_fee, 2)"