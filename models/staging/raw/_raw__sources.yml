version: 2

sources:
  - name: raw
    database: moes-dbt-layer
    schema: zzz_sources
    tables:
      - name: customers
        columns:
          - name: customer_id
            data_type: string
            description: '{{ doc("customer_id") }}'
            data_tests:
              - unique
              - not_null
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: first_name
            data_type: string
            description: '{{ doc("first_name") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_expectations.expect_column_value_lengths_to_be_between:
                  min_value: 1
                  max_value: 16
                  config: 
                    severity: warn
                    error_if: ">20"
                    warn_if: ">10"


          - name: last_name
            data_type: string
            description: '{{ doc("last_name") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_expectations.expect_column_value_lengths_to_be_between:
                  min_value: 1
                  max_value: 16
                  config: 
                    severity: warn
                    error_if: ">20"
                    warn_if: ">10"


      - name: nps
        freshness: 
          warn_after: {count: 6, period: day}
          error_after: {count: 12, period: day}
        loaded_at_field: _loaded_at
        columns:
          - name: order_id
            data_type: string
            description: '{{ doc("order_id") }}'
            data_tests:
              - unique
              - not_null
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: customer_id
            data_type: string
            description: '{{ doc("customer_id") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: is_nps
            data_type: boolean
            description: '{{ doc("is_nps") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - accepted_values:
                  values: [TRUE, FALSE]
                  quote: false


          - name: nps_score
            data_type: int64
            description: '{{ doc("nps_score") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 10


          - name: nps_date
            data_type: datetime
            description: '{{ doc("nps_date") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant




      - name: orders
        freshness: 
          warn_after: {count: 3, period: day}
          error_after: {count: 6, period: day}
        loaded_at_field: _loaded_at
        columns:
          - name: order_id
            data_type: string
            description: '{{ doc("order_id") }}'
            data_tests:
              - unique
              - not_null
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: customer_id
            data_type: string
            description: '{{ doc("customer_id") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: order_status
            data_type: string
            description: '{{ doc("orders_status") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - accepted_values:
                  values: ['completed', 'failed']


          - name: order_date
            data_type: datetime
            description: '{{ doc("order_date") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant


          - name: product_category_id
            data_type: int64
            description: '{{ doc("product_category_id") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 5


          - name: product_id
            data_type: int64
            description: '{{ doc("product_id") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 5




      - name: payments
        freshness: 
          warn_after: {count: 3, period: day}
          error_after: {count: 6, period: day}
        loaded_at_field: _loaded_at
        columns:
          - name: order_id
            data_type: string
            description: '{{ doc("order_id") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: payment_id
            data_type: int64
            description: '{{ doc("payment_id") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant


          - name: payment_method
            data_type: string
            description: '{{ doc("payment_method") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - accepted_values:
                  values: ['amazon_pay', 'stripe', 'apple_pay', 'bitcoin']


          - name: payment_amount
            data_type: float64
            description: '{{ doc("payment_amount") }}'
            data_tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "> 0"


          - name: payment_country_id
            data_type: string
            description: '{{ doc("country_id") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 10


          - name: payment_status
            data_type: string
            description: '{{ doc("payment_status") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - accepted_values:
                  values: ['successful', 'failed']


          - name: created_at
            data_type: datetime
            description: '{{ doc("created_at") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant




      - name: returns
        freshness: 
          warn_after: {count: 6, period: day}
          error_after: {count: 12, period: day}
        loaded_at_field: _loaded_at
        columns:
          - name: order_id
            data_type: string
            description: '{{ doc("order_id") }}'
            data_tests:
              - unique
              - not_null
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: return_id
            data_type: string
            description: '{{ doc("return_id") }}'
            data_tests:
              - unique
              - not_null
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: is_returned
            data_type: boolean
            description: '{{ doc("is_returned") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - accepted_values:
                  values: [TRUE, FALSE]
                  quote: false


          - name: return_date
            data_type: datetime
            description: '{{ doc("return_date") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant


          - name: return_reason
            data_type: string
            description: '{{ doc("return_reason") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - accepted_values:
                  values: ['Not as Described', 'Compatibility Issues', 'Quality Concerns', 'Technical Difficulties']




      - name: shipping
        freshness: 
          warn_after: {count: 3, period: day}
          error_after: {count: 6, period: day}
        loaded_at_field: _loaded_at
        columns:
          - name: order_id
            data_type: string
            description: '{{ doc("order_id") }}'
            data_tests:
              - unique
              - not_null
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: shipping_id
            data_type: string
            description: '{{ doc("shipping_id") }}'
            data_tests:
              - unique
              - dbt_utils.not_constant
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  value: 36


          - name: is_shipped
            data_type: boolean
            description: '{{ doc("is_shipped") }}'
            data_tests:
              - not_null
              - dbt_utils.not_constant
              - accepted_values:
                  values: [TRUE, FALSE]
                  quote: false


          - name: shipping_date
            data_type: datetime
            description: '{{ doc("shipping_date") }}'
            data_tests:
              - dbt_utils.not_constant


          - name: shipping_amount
            data_type: float64
            description: '{{ doc("shipping_amount") }}'
            data_tests:
              - dbt_utils.not_constant
              - dbt_utils.expression_is_true:
                  expression: "> 0"
                  config:
                    where: "shipping_amount IS NOT NULL"