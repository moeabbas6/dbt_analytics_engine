version: 2

models:
  - name: fct_orders
    latest_version: 2
    versions:
      - v: 1
        config:
          enabled: false
      - v: 2
        columns:
          - include: all
            exclude: [product_id, product_category_id]
    config:
      contract:
        enforced: true
    description: >
       Fact table capturing detailed information about customer orders, including order details, payment methods, 
       shipping, returns, and customer feedback. This table provides a comprehensive view of each order's lifecycle, 
       enabling in-depth analysis of sales performance, customer behavior, and product profitability.
    data_tests:
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(gross_revenue)
          compare_model: ref("int_payments_lvl_joined")
          compare_expression: sum(gross_revenue)
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(cogs)
          compare_model: ref("int_order_lvl_joined")
          compare_expression: 'sum(inbound_shipping_cost) + sum(product_cost)'
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(shipping_amount)
          compare_model: ref("int_order_lvl_joined")
          compare_expression: sum(shipping_amount)


    columns:
      - name: country_id
        data_type: int64
        constraints: 
          - type: not_null
        description: '{{ doc("country_id") }}'
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 22


      - name: country
        data_type: string
        constraints: 
          - type: not_null
        description: '{{ doc("country") }}'


      - name: order_id
        data_type: string
        constraints: 
          - type: not_null
          - type: primary_key
            warn_unenforced: false
        description: '{{ doc("order_id") }}'
        data_tests:
          - unique
          - relationships:
              to: ref('int_order_lvl_joined')
              field: order_id


      - name: order_status
        data_type: string
        constraints: 
          - type: not_null
        description: '{{ doc("orders_status") }}'
        data_tests:
          - accepted_values:
              values: ['completed', 'failed']


      - name: customer_id
        data_type: string
        constraints: 
          - type: not_null
        description: '{{ doc("customer_id") }}'


      - name: nb_payments
        data_type: int64
        constraints: 
          - type: not_null
        description: '{{ doc("nb_payments") }}'
        data_tests:
          - dbt_utils.expression_is_true:
              expression: "> 0"


      - name: is_shipped
        data_type: boolean
        description: '{{ doc("is_shipped") }}'
        data_tests:
          - accepted_values:
              values: [TRUE, FALSE]
              quote: false


      - name: shipping_id
        data_type: string
        description: '{{ doc("shipping_id") }}'
        data_tests:
          - unique


      - name: shipping_amount
        data_type: float64
        description: '{{ doc("shipping_amount") }}'
        data_tests:
          - dbt_utils.expression_is_true:
              expression: "> 0"


      - name: payment_method
        data_type: string
        constraints: 
          - type: not_null
        description: '{{ doc("payment_method") }}'
        data_tests:
          - accepted_values:
              values: ['amazon_pay', 'stripe', 'apple_pay', 'bitcoin']


      - name: gross_revenue
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("gross_revenue") }}'
        data_tests:
          - dbt_utils.expression_is_true:
              expression: "> 0"


      - name: tax_rate
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("tax_rate") }}'
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100
          - dbt_utils.expression_is_true:
              expression: "> 0"              


      - name: tax_amount
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("tax_amount") }}'


      - name: net_revenue_before_tax
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("net_revenue_before_tax") }}'


      - name: net_revenue_after_tax
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("net_revenue_after_tax") }}'


      - name: order_date
        data_type: datetime
        constraints: 
          - type: not_null
        description: '{{ doc("order_date") }}'
        data_tests:
          - dbt_utils.accepted_range:
              max_value: "current_datetime()"


      - name: shipping_date
        data_type: datetime
        description: '{{ doc("shipping_date") }}'
        data_tests:
          - dbt_utils.accepted_range:
              max_value: "current_datetime()"


      - name: is_returned
        data_type: boolean
        description: '{{ doc("is_returned") }}'
        data_tests:
          - accepted_values:
              values: [TRUE, FALSE]
              quote: false


      - name: return_id
        data_type: string
        description: '{{ doc("return_id") }}'
        data_tests:
          - unique


      - name: return_date
        data_type: datetime
        description: '{{ doc("return_date") }}' 
        data_tests:
          - dbt_utils.accepted_range:
              max_value: "current_datetime()"


      - name: return_reason
        data_type: string
        description: '{{ doc("return_reason") }}'
        data_tests:
          - accepted_values:
              values: ['Not as Described', 'Compatibility Issues', 'Quality Concerns', 'Technical Difficulties']


      - name: fulfillment_days
        data_type: int64
        description: '{{ doc("fulfillment_days") }}'


      - name: is_nps
        data_type: boolean
        description: '{{ doc("is_nps") }}'
        data_tests:
          - accepted_values:
              values: [TRUE, FALSE]
              quote: false


      - name: nps_score
        data_type: int64
        description: '{{ doc("nps_score") }}'
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 10


      - name: nps_date
        data_type: datetime
        description: '{{ doc("nps_date") }}'
        data_tests:
          - dbt_utils.accepted_range:
              max_value: "current_datetime()"


      - name: product_category_id
        data_type: int64
        description: '{{ doc("product_category_id") }}'
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 5


      - name: product_category
        data_type: string
        constraints: 
          - type: not_null
        description: '{{ doc("product_category") }}'
        data_tests:
          - accepted_values:
              values: ['Design Templates', 'Fonts & Typography', 'Graphic Assets', 'Stock Photography', 'Video & Animation']


      - name: product_id
        data_type: int64
        description: '{{ doc("product_id") }}'
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 5


      - name: product_name
        data_type: string
        constraints: 
          - type: not_null
        description: '{{ doc("product_name") }}'


      - name: cogs
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("cogs") }}'


      - name: returned_cogs
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("returned_cogs") }}'


      - name: refund_amount
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("refund_amount") }}'


      - name: payment_fee
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("payment_fee") }}'
        data_tests:
          - dbt_utils.expression_is_true:
              expression: "> 0"


      - name: customer_order_nb
        data_type: int64
        constraints: 
          - type: not_null
        description: '{{ doc("customer_order_nb") }}'


      - name: first_order_date
        data_type: date
        constraints: 
          - type: not_null
        description: '{{ doc("first_order_date") }}'


      - name: customer_type
        data_type: string
        constraints: 
          - type: not_null
        description: '{{ doc("customer_type") }}'


      - name: cm
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("cm") }}'


      - name: customer_cumulative_net_revenue
        data_type: float64
        constraints: 
          - type: not_null
        description: '{{ doc("customer_cumulative_net_revenue") }}'


      - name: customer_orders_to_100_net_revenue
        data_type: int64
        description: '{{ doc("customer_orders_to_100_net_revenue") }}'
        data_tests:
          - dbt_utils.expression_is_true:
              expression: "> 0" 
              config:
                where: customer_orders_to_100_net_revenue IS NOT NULL


      - name: customer_orders_to_250_net_revenue
        data_type: int64
        description: '{{ doc("customer_orders_to_250_net_revenue") }}'
        data_tests:
          - dbt_utils.expression_is_true:
              expression: "> 0"
              config:
                where: customer_orders_to_250_net_revenue IS NOT NULL
          


      - name: customer_orders_to_500_net_revenue
        data_type: int64
        description: '{{ doc("customer_orders_to_500_net_revenue") }}'
        data_tests:
          - dbt_utils.expression_is_true:
              expression: "> 0" 
              config:
                where: customer_orders_to_500_net_revenue IS NOT NULL



  - name: ml_sales_arima
    config:
      tags: "forecasting"



  - name: fct_sales_timeseries
    latest_version: 1
    versions:
      - v: 1
    config:
      contract:
        enforced: true
    description: >
      Fact table capturing the daily sales time series data, including the total net revenue after tax (`sales`). 
      The table also includes various Simple Moving Averages (SMA) and Bollinger Bands calculated over different 
      periods (14, 30, 60, 120, and 250 days). This table is essential for analyzing sales trends, understanding 
      market volatility, and smoothing out fluctuations in daily sales data."
    data_tests:
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(sales)
          compare_model: ref("fct_orders")
          compare_expression: sum(net_revenue_after_tax)


    columns:
      - name: date
        data_type: date
        description: '{{ doc("date") }}'
        constraints: 
          - type: not_null
          - type: primary_key
            warn_unenforced: false


      - name: sales
        data_type: float64
        description: '{{ doc("sales") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_wma_7
        data_type: float64
        description: '{{ doc("sales_wma_7") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_7
        data_type: float64
        description: '{{ doc("sales_sma_7") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_14
        data_type: float64
        description: '{{ doc("sales_sma_14") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_30
        data_type: float64
        description: '{{ doc("sales_sma_30") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_60
        data_type: float64
        description: '{{ doc("sales_sma_60") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_120
        data_type: float64
        description: '{{ doc("sales_sma_120") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_upper_7
        data_type: float64
        description: '{{ doc("sales_sma_upper_7") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_lower_7
        data_type: float64
        description: '{{ doc("sales_sma_lower_7") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_upper_14
        data_type: float64
        description: '{{ doc("sales_sma_upper_14") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_lower_14
        data_type: float64
        description: '{{ doc("sales_sma_lower_14") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_upper_30
        data_type: float64
        description: '{{ doc("sales_sma_upper_30") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_lower_30
        data_type: float64
        description: '{{ doc("sales_sma_lower_30") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_upper_60
        data_type: float64
        description: '{{ doc("sales_sma_upper_60") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_lower_60
        data_type: float64
        description: '{{ doc("sales_sma_lower_60") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_upper_120
        data_type: float64
        description: '{{ doc("sales_sma_upper_120") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"


      - name: sales_sma_lower_120
        data_type: float64
        description: '{{ doc("sales_sma_lower_120") }}'
        constraints: 
          - type: not_null
        data_tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"






  - name: fct_sales_forecast
    latest_version: 1
    versions:
      - v: 1
    config:
      contract:
        enforced: true
    description: >
      Fact table capturing the daily sales time series data, including the total net revenue after tax (`sales`). 
      The table also includes various Simple Moving Averages (SMA) and Bollinger Bands calculated over different 
      periods (14, 30, 60, 120, and 250 days). This table is essential for analyzing sales trends, understanding 
      market volatility, and smoothing out fluctuations in daily sales data."
    data_tests:
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(sales)
          compare_model: ref("fct_sales_timeseries")
          compare_expression: sum(sales)
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(sales_wma_7)
          compare_model: ref("fct_sales_timeseries")
          compare_expression: sum(sales_wma_7)
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(sales_sma_7)
          compare_model: ref("fct_sales_timeseries")
          compare_expression: sum(sales_sma_7)
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(sales_sma_14)
          compare_model: ref("fct_sales_timeseries")
          compare_expression: sum(sales_sma_14)
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(sales_sma_30)
          compare_model: ref("fct_sales_timeseries")
          compare_expression: sum(sales_sma_30)
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(sales_sma_60)
          compare_model: ref("fct_sales_timeseries")
          compare_expression: sum(sales_sma_60)
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: sum(sales_sma_120)
          compare_model: ref("fct_sales_timeseries")
          compare_expression: sum(sales_sma_120)


    columns:
      - name: date
        data_type: date
        description: '{{ doc("date") }}'
        constraints: 
          - type: not_null
          - type: primary_key
            warn_unenforced: false


      - name: sales
        data_type: float64
        description: '{{ doc("sales") }}'


      - name: sales_wma_7
        data_type: float64
        description: '{{ doc("sales_wma_7") }}'


      - name: sales_sma_7
        data_type: float64
        description: '{{ doc("sales_sma_7") }}'


      - name: sales_sma_14
        data_type: float64
        description: '{{ doc("sales_sma_14") }}'


      - name: sales_sma_30
        data_type: float64
        description: '{{ doc("sales_sma_30") }}'


      - name: sales_sma_60
        data_type: float64
        description: '{{ doc("sales_sma_60") }}'


      - name: sales_sma_120
        data_type: float64
        description: '{{ doc("sales_sma_120") }}'


      - name: sales_sma_upper_7
        data_type: float64
        description: '{{ doc("sales_sma_upper_7") }}'


      - name: sales_sma_lower_7
        data_type: float64
        description: '{{ doc("sales_sma_lower_7") }}'


      - name: sales_sma_upper_14
        data_type: float64
        description: '{{ doc("sales_sma_upper_14") }}'


      - name: sales_sma_lower_14
        data_type: float64
        description: '{{ doc("sales_sma_lower_14") }}'


      - name: sales_sma_upper_30
        data_type: float64
        description: '{{ doc("sales_sma_upper_30") }}'


      - name: sales_sma_lower_30
        data_type: float64
        description: '{{ doc("sales_sma_lower_30") }}'


      - name: sales_sma_upper_60
        data_type: float64
        description: '{{ doc("sales_sma_upper_60") }}'


      - name: sales_sma_lower_60
        data_type: float64
        description: '{{ doc("sales_sma_lower_60") }}'



      - name: sales_sma_upper_120
        data_type: float64
        description: '{{ doc("sales_sma_upper_120") }}'


      - name: sales_sma_lower_120
        data_type: float64
        description: '{{ doc("sales_sma_lower_120") }}'


      - name: sales_forecast
        data_type: float64
        description: '{{ doc("sales_forecast") }}'