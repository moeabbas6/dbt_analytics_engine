{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.4", "generated_at": "2024-09-13T23:30:14.790852Z", "invocation_id": "002fc40e-4c32-42d0-84f0-bcf04b0fb74c", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.004876Z", "completed_at": "2024-09-13T23:30:13.023658Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.023901Z", "completed_at": "2024-09-13T23:30:13.023909Z"}], "thread_id": "Thread-1", "execution_time": 0.02067399024963379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_customers", "compiled": true, "compiled_code": "WITH\n  stg_customers AS (\n    SELECT customer_id\n          ,first_name\n          ,last_name\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`)\n\n\n  SELECT *\n    FROM stg_customers", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.010534Z", "completed_at": "2024-09-13T23:30:13.024787Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.025323Z", "completed_at": "2024-09-13T23:30:13.025328Z"}], "thread_id": "Thread-2", "execution_time": 0.02147817611694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_nps", "compiled": true, "compiled_code": "WITH\n  stg_nps AS (\n    SELECT order_id\n          ,customer_id\n          ,is_nps\n          ,nps_score\n          ,nps_date\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n      WHERE nps_date <= CURRENT_DATETIME('America/Toronto'))\n\n\n  SELECT *\n    FROM stg_nps", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.014893Z", "completed_at": "2024-09-13T23:30:13.024950Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.025663Z", "completed_at": "2024-09-13T23:30:13.025667Z"}], "thread_id": "Thread-4", "execution_time": 0.021246910095214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_payments", "compiled": true, "compiled_code": "WITH\n  stg_payments AS (\n    SELECT order_id\n          ,payment_id\n          ,to_hex(md5(cast(coalesce(cast(order_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(payment_id as string), '_dbt_utils_surrogate_key_null_') as string))) AS order_payment_id\n          ,payment_method\n          ,payment_amount AS gross_revenue\n          ,payment_country_id AS country_id\n          ,payment_status\n          ,created_at\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n      WHERE created_at <= CURRENT_DATETIME('America/Toronto'))\n\n\n  SELECT *\n    FROM stg_payments", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.012521Z", "completed_at": "2024-09-13T23:30:13.025975Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.028567Z", "completed_at": "2024-09-13T23:30:13.028570Z"}], "thread_id": "Thread-3", "execution_time": 0.02433300018310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_orders", "compiled": true, "compiled_code": "WITH\n  stg_orders AS (\n    SELECT order_id\n          ,customer_id\n          ,order_status\n          ,order_date\n          ,product_category_id\n          ,product_id\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n      WHERE order_date <= CURRENT_DATETIME('America/Toronto'))\n\n\n  SELECT *\n    FROM stg_orders", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.026137Z", "completed_at": "2024-09-13T23:30:13.029573Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.030309Z", "completed_at": "2024-09-13T23:30:13.030312Z"}], "thread_id": "Thread-1", "execution_time": 0.005764961242675781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_returns", "compiled": true, "compiled_code": "WITH\n  stg_returns AS (\n    SELECT order_id\n          ,return_id\n          ,is_returned\n          ,return_date\n          ,return_reason\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n      WHERE return_date <= CURRENT_DATETIME('America/Toronto') \n         OR return_date IS NULL)\n\n\n  SELECT *\n    FROM stg_returns", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_returns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.032904Z", "completed_at": "2024-09-13T23:30:13.034133Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.034750Z", "completed_at": "2024-09-13T23:30:13.034753Z"}], "thread_id": "Thread-4", "execution_time": 0.005658149719238281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_analytics_engine.seed_payment_fees", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.035078Z", "completed_at": "2024-09-13T23:30:13.036284Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.037116Z", "completed_at": "2024-09-13T23:30:13.037119Z"}], "thread_id": "Thread-3", "execution_time": 0.007038116455078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_analytics_engine.seed_products", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.030593Z", "completed_at": "2024-09-13T23:30:13.036950Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.037881Z", "completed_at": "2024-09-13T23:30:13.037884Z"}], "thread_id": "Thread-2", "execution_time": 0.008986949920654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_shipping", "compiled": true, "compiled_code": "WITH\n  stg_shipping AS (\n    SELECT order_id\n          ,shipping_id\n          ,is_shipped\n          ,shipping_date\n          ,shipping_amount\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n      WHERE shipping_date <= CURRENT_DATETIME('America/Toronto')\n         OR shipping_date IS NULL)\n\n\n  SELECT *\n    FROM stg_shipping", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_shipping`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.038420Z", "completed_at": "2024-09-13T23:30:13.039663Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.040608Z", "completed_at": "2024-09-13T23:30:13.040611Z"}], "thread_id": "Thread-1", "execution_time": 0.004190921783447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_analytics_engine.seed_taxes", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.040925Z", "completed_at": "2024-09-13T23:30:13.089280Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.089477Z", "completed_at": "2024-09-13T23:30:13.089481Z"}], "thread_id": "Thread-4", "execution_time": 0.051844120025634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_customers_first_name.1aa711fefa", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct first_name) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\n\n  \n\nhaving count(distinct first_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_customers_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.077937Z", "completed_at": "2024-09-13T23:30:13.089805Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.090265Z", "completed_at": "2024-09-13T23:30:13.090268Z"}], "thread_id": "Thread-3", "execution_time": 0.049909114837646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_customers_last_name.6ffe283ff9", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct last_name) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\n\n  \n\nhaving count(distinct last_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_customers_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.086823Z", "completed_at": "2024-09-13T23:30:13.090579Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.091363Z", "completed_at": "2024-09-13T23:30:13.091367Z"}], "thread_id": "Thread-1", "execution_time": 0.0074269771575927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_nps_is_nps.bcbc991b6e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct is_nps) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n\n  \n\nhaving count(distinct is_nps) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_nps_is_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.084193Z", "completed_at": "2024-09-13T23:30:13.090752Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.091681Z", "completed_at": "2024-09-13T23:30:13.091684Z"}], "thread_id": "Thread-2", "execution_time": 0.015079975128173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_nps_customer_id.1d8ada62fb", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n\n  \n\nhaving count(distinct customer_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_nps_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.092809Z", "completed_at": "2024-09-13T23:30:13.099025Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.103841Z", "completed_at": "2024-09-13T23:30:13.103846Z"}], "thread_id": "Thread-4", "execution_time": 0.012968778610229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_nps_nps_date.5268efe72d", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nps_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n\n  \n\nhaving count(distinct nps_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_nps_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.095684Z", "completed_at": "2024-09-13T23:30:13.104169Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.104633Z", "completed_at": "2024-09-13T23:30:13.104636Z"}], "thread_id": "Thread-3", "execution_time": 0.012512922286987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_nps_nps_score.971c38316b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nps_score) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n\n  \n\nhaving count(distinct nps_score) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_nps_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.101601Z", "completed_at": "2024-09-13T23:30:13.105188Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.105951Z", "completed_at": "2024-09-13T23:30:13.105954Z"}], "thread_id": "Thread-2", "execution_time": 0.01055288314819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_order_date.80ff9d08cd", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n\n  \n\nhaving count(distinct order_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.099247Z", "completed_at": "2024-09-13T23:30:13.105591Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.106462Z", "completed_at": "2024-09-13T23:30:13.106466Z"}], "thread_id": "Thread-1", "execution_time": 0.011260032653808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_customer_id.5c0a7aeec1", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n\n  \n\nhaving count(distinct customer_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.106792Z", "completed_at": "2024-09-13T23:30:13.113488Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.116133Z", "completed_at": "2024-09-13T23:30:13.116136Z"}], "thread_id": "Thread-4", "execution_time": 0.011181116104125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_order_status.7efa1990d7", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_status) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n\n  \n\nhaving count(distinct order_status) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.110105Z", "completed_at": "2024-09-13T23:30:13.116455Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.119147Z", "completed_at": "2024-09-13T23:30:13.119150Z"}], "thread_id": "Thread-3", "execution_time": 0.012933731079101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_product_category_id.a1bffe5382", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_category_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n\n  \n\nhaving count(distinct product_category_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.113875Z", "completed_at": "2024-09-13T23:30:13.119727Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.120332Z", "completed_at": "2024-09-13T23:30:13.120335Z"}], "thread_id": "Thread-2", "execution_time": 0.010481834411621094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_product_id.c3e441e90b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n\n  \n\nhaving count(distinct product_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.116632Z", "completed_at": "2024-09-13T23:30:13.120629Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.124036Z", "completed_at": "2024-09-13T23:30:13.124039Z"}], "thread_id": "Thread-1", "execution_time": 0.01098322868347168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_created_at.f13e871fc3", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct created_at) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n\n  \n\nhaving count(distinct created_at) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_payments_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.121014Z", "completed_at": "2024-09-13T23:30:13.127402Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.127996Z", "completed_at": "2024-09-13T23:30:13.127999Z"}], "thread_id": "Thread-4", "execution_time": 0.008530855178833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_order_id.f225e51aa8", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n\n  \n\nhaving count(distinct order_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_payments_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.125043Z", "completed_at": "2024-09-13T23:30:13.130769Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.133595Z", "completed_at": "2024-09-13T23:30:13.133598Z"}], "thread_id": "Thread-3", "execution_time": 0.012832880020141602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_payment_country_id.11cb76a07e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_country_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n\n  \n\nhaving count(distinct payment_country_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_payments_payment_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.128314Z", "completed_at": "2024-09-13T23:30:13.134146Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.134754Z", "completed_at": "2024-09-13T23:30:13.134757Z"}], "thread_id": "Thread-2", "execution_time": 0.010212898254394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_payment_id.757e26661f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n\n  \n\nhaving count(distinct payment_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_payments_payment_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.131204Z", "completed_at": "2024-09-13T23:30:13.135255Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.138722Z", "completed_at": "2024-09-13T23:30:13.138725Z"}], "thread_id": "Thread-1", "execution_time": 0.011002063751220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_payment_method.5b7ec2ca0a", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_method) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n\n  \n\nhaving count(distinct payment_method) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_payments_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.135435Z", "completed_at": "2024-09-13T23:30:13.141861Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.142459Z", "completed_at": "2024-09-13T23:30:13.142462Z"}], "thread_id": "Thread-4", "execution_time": 0.008584976196289062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_payment_status.bf12f29150", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_status) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n\n  \n\nhaving count(distinct payment_status) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_payments_payment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.139291Z", "completed_at": "2024-09-13T23:30:13.145219Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.145858Z", "completed_at": "2024-09-13T23:30:13.145861Z"}], "thread_id": "Thread-3", "execution_time": 0.01084280014038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_returns_is_returned.cd1f0f7ac5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct is_returned) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n\n  \n\nhaving count(distinct is_returned) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_returns_is_returned`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.142779Z", "completed_at": "2024-09-13T23:30:13.148780Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.149389Z", "completed_at": "2024-09-13T23:30:13.149392Z"}], "thread_id": "Thread-2", "execution_time": 0.01036381721496582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_returns_return_date.b667e51d4b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n\n  \n\nhaving count(distinct return_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_returns_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.146187Z", "completed_at": "2024-09-13T23:30:13.149906Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.153507Z", "completed_at": "2024-09-13T23:30:13.153510Z"}], "thread_id": "Thread-1", "execution_time": 0.011301040649414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_returns_return_reason.8a55d4b196", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_reason) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n\n  \n\nhaving count(distinct return_reason) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_returns_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.150084Z", "completed_at": "2024-09-13T23:30:13.156576Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.157164Z", "completed_at": "2024-09-13T23:30:13.157168Z"}], "thread_id": "Thread-4", "execution_time": 0.008636951446533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_shipping_is_shipped.a565383871", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct is_shipped) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n\n  \n\nhaving count(distinct is_shipped) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_shipping_is_shipped`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.154064Z", "completed_at": "2024-09-13T23:30:13.159952Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.162801Z", "completed_at": "2024-09-13T23:30:13.162804Z"}], "thread_id": "Thread-3", "execution_time": 0.013139963150024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_shipping_shipping_amount.e4a06339ae", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n\n  \n\nhaving count(distinct shipping_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_shipping_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.157490Z", "completed_at": "2024-09-13T23:30:13.163329Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.163950Z", "completed_at": "2024-09-13T23:30:13.163953Z"}], "thread_id": "Thread-2", "execution_time": 0.0101470947265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_shipping_shipping_date.019f309d0c", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n\n  \n\nhaving count(distinct shipping_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_shipping_shipping_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.160406Z", "completed_at": "2024-09-13T23:30:13.164259Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.172778Z", "completed_at": "2024-09-13T23:30:13.172781Z"}], "thread_id": "Thread-1", "execution_time": 0.015864849090576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_shipping_shipping_id.71eae1e42f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n\n  \n\nhaving count(distinct shipping_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_source_not_constant_raw_shipping_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.164637Z", "completed_at": "2024-09-13T23:30:13.179425Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.182524Z", "completed_at": "2024-09-13T23:30:13.182527Z"}], "thread_id": "Thread-4", "execution_time": 0.019449234008789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_customers_unexpected_customer_id_length.fafa7939c9", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        customer_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_customers_unexpected_customer_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.173753Z", "completed_at": "2024-09-13T23:30:13.183033Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.188296Z", "completed_at": "2024-09-13T23:30:13.188300Z"}], "thread_id": "Thread-3", "execution_time": 0.02390599250793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_customers_unexpected_first_name_length.787dbb0899", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        first_name\n    ) >= 1 and length(\n        first_name\n    ) <= 16\n)\n as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_customers_unexpected_first_name_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.179820Z", "completed_at": "2024-09-13T23:30:13.188601Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.189222Z", "completed_at": "2024-09-13T23:30:13.189226Z"}], "thread_id": "Thread-2", "execution_time": 0.015963077545166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_customers_unexpected_last_name_length.01feba77f5", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        last_name\n    ) >= 1 and length(\n        last_name\n    ) <= 16\n)\n as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_customers_unexpected_last_name_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.183474Z", "completed_at": "2024-09-13T23:30:13.189727Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.192589Z", "completed_at": "2024-09-13T23:30:13.192593Z"}], "thread_id": "Thread-1", "execution_time": 0.013045072555541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_customers_customer_id.e869432dbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_customers_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.190319Z", "completed_at": "2024-09-13T23:30:13.196015Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.198694Z", "completed_at": "2024-09-13T23:30:13.198697Z"}], "thread_id": "Thread-4", "execution_time": 0.009958982467651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_customers_first_name.b1fe98db61", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\nwhere first_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_customers_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.193569Z", "completed_at": "2024-09-13T23:30:13.199170Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.202455Z", "completed_at": "2024-09-13T23:30:13.202458Z"}], "thread_id": "Thread-3", "execution_time": 0.012598991394042969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_customers_last_name.ef2fe0f207", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\nwhere last_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_customers_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.196416Z", "completed_at": "2024-09-13T23:30:13.202760Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.203371Z", "completed_at": "2024-09-13T23:30:13.203374Z"}], "thread_id": "Thread-2", "execution_time": 0.010325908660888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_customer_id.5fda13b29c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_nps_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.199586Z", "completed_at": "2024-09-13T23:30:13.204070Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.206874Z", "completed_at": "2024-09-13T23:30:13.206878Z"}], "thread_id": "Thread-1", "execution_time": 0.010729074478149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_is_nps.a69d0af618", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\nwhere is_nps is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_nps_is_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.204451Z", "completed_at": "2024-09-13T23:30:13.209867Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.210471Z", "completed_at": "2024-09-13T23:30:13.210474Z"}], "thread_id": "Thread-4", "execution_time": 0.007579803466796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_nps_date.1abdb6c60a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\nwhere nps_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_nps_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.207405Z", "completed_at": "2024-09-13T23:30:13.213616Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.214246Z", "completed_at": "2024-09-13T23:30:13.214249Z"}], "thread_id": "Thread-3", "execution_time": 0.010420083999633789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_nps_score.7d4a90987a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\nwhere nps_score is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_nps_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.210769Z", "completed_at": "2024-09-13T23:30:13.216971Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.217579Z", "completed_at": "2024-09-13T23:30:13.217582Z"}], "thread_id": "Thread-2", "execution_time": 0.010448217391967773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_order_id.2eccdcf1e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_nps_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.214555Z", "completed_at": "2024-09-13T23:30:13.218071Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.220857Z", "completed_at": "2024-09-13T23:30:13.220860Z"}], "thread_id": "Thread-1", "execution_time": 0.010645866394042969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_customer_id.3962c6ab03", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.218241Z", "completed_at": "2024-09-13T23:30:13.223855Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.224462Z", "completed_at": "2024-09-13T23:30:13.224465Z"}], "thread_id": "Thread-4", "execution_time": 0.007730007171630859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_order_date.4c6c74964f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.221401Z", "completed_at": "2024-09-13T23:30:13.227728Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.230395Z", "completed_at": "2024-09-13T23:30:13.230399Z"}], "thread_id": "Thread-3", "execution_time": 0.0125579833984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_order_id.03a065a98f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.224770Z", "completed_at": "2024-09-13T23:30:13.230905Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.231525Z", "completed_at": "2024-09-13T23:30:13.231528Z"}], "thread_id": "Thread-2", "execution_time": 0.010380029678344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_order_status.0e4e88bed2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\nwhere order_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.228161Z", "completed_at": "2024-09-13T23:30:13.231815Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.234652Z", "completed_at": "2024-09-13T23:30:13.234655Z"}], "thread_id": "Thread-1", "execution_time": 0.01043701171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_product_category_id.5538cf78d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\nwhere product_category_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.232187Z", "completed_at": "2024-09-13T23:30:13.237797Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.238379Z", "completed_at": "2024-09-13T23:30:13.238382Z"}], "thread_id": "Thread-4", "execution_time": 0.007712125778198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_product_id.47f01cfc3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\nwhere product_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.235585Z", "completed_at": "2024-09-13T23:30:13.241863Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.244473Z", "completed_at": "2024-09-13T23:30:13.244476Z"}], "thread_id": "Thread-3", "execution_time": 0.012526750564575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_created_at.710d6129ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\nwhere created_at is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_payments_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.238684Z", "completed_at": "2024-09-13T23:30:13.244768Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.245565Z", "completed_at": "2024-09-13T23:30:13.245568Z"}], "thread_id": "Thread-2", "execution_time": 0.010464906692504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_order_id.def3cb6fc9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_payments_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.242057Z", "completed_at": "2024-09-13T23:30:13.245395Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.248345Z", "completed_at": "2024-09-13T23:30:13.248348Z"}], "thread_id": "Thread-1", "execution_time": 0.010242938995361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_amount.391c03161a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\nwhere payment_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_payments_payment_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.245866Z", "completed_at": "2024-09-13T23:30:13.249485Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.252237Z", "completed_at": "2024-09-13T23:30:13.252241Z"}], "thread_id": "Thread-4", "execution_time": 0.008025884628295898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_country_id.672aaa798a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\nwhere payment_country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_payments_payment_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.249661Z", "completed_at": "2024-09-13T23:30:13.255799Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.258407Z", "completed_at": "2024-09-13T23:30:13.258410Z"}], "thread_id": "Thread-3", "execution_time": 0.010309934616088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_id.a7f5b41ef5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\nwhere payment_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_payments_payment_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.252768Z", "completed_at": "2024-09-13T23:30:13.258914Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.261736Z", "completed_at": "2024-09-13T23:30:13.261739Z"}], "thread_id": "Thread-2", "execution_time": 0.012490034103393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_method.9aca47f72c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\nwhere payment_method is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_payments_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.255975Z", "completed_at": "2024-09-13T23:30:13.261560Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.262269Z", "completed_at": "2024-09-13T23:30:13.262272Z"}], "thread_id": "Thread-1", "execution_time": 0.010496139526367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_status.54558a6ea3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\nwhere payment_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_payments_payment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.259320Z", "completed_at": "2024-09-13T23:30:13.263460Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.266836Z", "completed_at": "2024-09-13T23:30:13.266840Z"}], "thread_id": "Thread-4", "execution_time": 0.008688211441040039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_is_returned.148b12a528", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\nwhere is_returned is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_returns_is_returned`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.263634Z", "completed_at": "2024-09-13T23:30:13.269831Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.272520Z", "completed_at": "2024-09-13T23:30:13.272523Z"}], "thread_id": "Thread-3", "execution_time": 0.010525226593017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_order_id.6d0a5fcbbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_returns_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.267378Z", "completed_at": "2024-09-13T23:30:13.272843Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.273445Z", "completed_at": "2024-09-13T23:30:13.273448Z"}], "thread_id": "Thread-2", "execution_time": 0.010214805603027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_return_date.d74bba5b49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\nwhere return_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_returns_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.270015Z", "completed_at": "2024-09-13T23:30:13.273739Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.276586Z", "completed_at": "2024-09-13T23:30:13.276589Z"}], "thread_id": "Thread-1", "execution_time": 0.010194063186645508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_return_id.18df885383", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\nwhere return_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_returns_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.273913Z", "completed_at": "2024-09-13T23:30:13.277529Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.280982Z", "completed_at": "2024-09-13T23:30:13.280985Z"}], "thread_id": "Thread-4", "execution_time": 0.008727788925170898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_return_reason.005573374b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\nwhere return_reason is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_returns_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.277714Z", "completed_at": "2024-09-13T23:30:13.283910Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.286743Z", "completed_at": "2024-09-13T23:30:13.286746Z"}], "thread_id": "Thread-3", "execution_time": 0.01063394546508789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_shipping_is_shipped.3766118adb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\nwhere is_shipped is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_shipping_is_shipped`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.281319Z", "completed_at": "2024-09-13T23:30:13.287042Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.287667Z", "completed_at": "2024-09-13T23:30:13.287669Z"}], "thread_id": "Thread-2", "execution_time": 0.010596036911010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_shipping_order_id.4459e0b7d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_not_null_raw_shipping_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.284127Z", "completed_at": "2024-09-13T23:30:13.287949Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.292354Z", "completed_at": "2024-09-13T23:30:13.292358Z"}], "thread_id": "Thread-1", "execution_time": 0.011605978012084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_nps_unexpected_customer_id_length.ee58215e3f", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        customer_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_nps_unexpected_customer_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.288114Z", "completed_at": "2024-09-13T23:30:13.293294Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.296609Z", "completed_at": "2024-09-13T23:30:13.296612Z"}], "thread_id": "Thread-4", "execution_time": 0.010109186172485352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_nps_unexpected_is_nps_bool.78259a7eb7", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_nps as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n    group by is_nps\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_nps_unexpected_is_nps_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.293463Z", "completed_at": "2024-09-13T23:30:13.299790Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.302564Z", "completed_at": "2024-09-13T23:30:13.302567Z"}], "thread_id": "Thread-3", "execution_time": 0.010684967041015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_nps_unexpected_nps_score.8a16a09fd2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_score >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_score <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_nps_unexpected_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.296933Z", "completed_at": "2024-09-13T23:30:13.302865Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.303473Z", "completed_at": "2024-09-13T23:30:13.303476Z"}], "thread_id": "Thread-2", "execution_time": 0.010653018951416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_nps_unexpected_order_id_length.d9115f851b", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_nps_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.299988Z", "completed_at": "2024-09-13T23:30:13.303758Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.307260Z", "completed_at": "2024-09-13T23:30:13.307263Z"}], "thread_id": "Thread-1", "execution_time": 0.010894775390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_custoemr_id_length.4e34b069bd", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        customer_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_orders_unexpected_custoemr_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.303923Z", "completed_at": "2024-09-13T23:30:13.308186Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.311513Z", "completed_at": "2024-09-13T23:30:13.311517Z"}], "thread_id": "Thread-4", "execution_time": 0.009198188781738281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_order_id_length.717f86d8cf", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_orders_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.308381Z", "completed_at": "2024-09-13T23:30:13.314503Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.317247Z", "completed_at": "2024-09-13T23:30:13.317250Z"}], "thread_id": "Thread-3", "execution_time": 0.010436058044433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_order_status.6f35c0bf12", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        order_status as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n    group by order_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','failed'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_orders_unexpected_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.311839Z", "completed_at": "2024-09-13T23:30:13.317542Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.318163Z", "completed_at": "2024-09-13T23:30:13.318166Z"}], "thread_id": "Thread-2", "execution_time": 0.010428905487060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_product__id.6d1bf7a4a2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_orders_unexpected_product__id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.314704Z", "completed_at": "2024-09-13T23:30:13.318444Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.323455Z", "completed_at": "2024-09-13T23:30:13.323458Z"}], "thread_id": "Thread-1", "execution_time": 0.012195110321044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_product_category_id.c5b406ac9f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_orders_unexpected_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.318619Z", "completed_at": "2024-09-13T23:30:13.324405Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.327243Z", "completed_at": "2024-09-13T23:30:13.327246Z"}], "thread_id": "Thread-4", "execution_time": 0.01024484634399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_assert_positive_payment_amount.d0159c6dbe", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n\nwhere not(payment_amount > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_payments_assert_positive_payment_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.324579Z", "completed_at": "2024-09-13T23:30:13.330373Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.333909Z", "completed_at": "2024-09-13T23:30:13.333913Z"}], "thread_id": "Thread-3", "execution_time": 0.010915994644165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_unexpected_country_id.e6838f7725", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not payment_country_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not payment_country_id <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_payments_unexpected_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.327574Z", "completed_at": "2024-09-13T23:30:13.334205Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.334827Z", "completed_at": "2024-09-13T23:30:13.334830Z"}], "thread_id": "Thread-2", "execution_time": 0.01090097427368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_unexpected_order_id_length.b7725a5e3e", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_payments_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.330602Z", "completed_at": "2024-09-13T23:30:13.335125Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.338812Z", "completed_at": "2024-09-13T23:30:13.338815Z"}], "thread_id": "Thread-1", "execution_time": 0.011812925338745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_unexpected_payment_method.010f8676de", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'amazon_pay','stripe','apple_pay','bitcoin'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_payments_unexpected_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.335296Z", "completed_at": "2024-09-13T23:30:13.342017Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.342601Z", "completed_at": "2024-09-13T23:30:13.342604Z"}], "thread_id": "Thread-4", "execution_time": 0.008944034576416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_unexpected_payment_status.cdd31bef7c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_status as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`payments`\n    group by payment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'successful','failed'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_payments_unexpected_payment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.339771Z", "completed_at": "2024-09-13T23:30:13.345725Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.348608Z", "completed_at": "2024-09-13T23:30:13.348611Z"}], "thread_id": "Thread-3", "execution_time": 0.010246992111206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_returns_unexpected_is_returned_bool.c8835a46b6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_returned as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n    group by is_returned\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_returns_unexpected_is_returned_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.342911Z", "completed_at": "2024-09-13T23:30:13.348907Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.349520Z", "completed_at": "2024-09-13T23:30:13.349523Z"}], "thread_id": "Thread-2", "execution_time": 0.01023101806640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_returns_unexpected_order_id_length.66bc0666d6", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_returns_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.345927Z", "completed_at": "2024-09-13T23:30:13.349802Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.354128Z", "completed_at": "2024-09-13T23:30:13.354131Z"}], "thread_id": "Thread-1", "execution_time": 0.011795997619628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_returns_unexpected_return_id_length.3da49c526e", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        return_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_returns_unexpected_return_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.349974Z", "completed_at": "2024-09-13T23:30:13.355101Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.358056Z", "completed_at": "2024-09-13T23:30:13.358060Z"}], "thread_id": "Thread-4", "execution_time": 0.00970911979675293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_returns_unexpected_return_reason.bbd49bceac", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        return_reason as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n    group by return_reason\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Not as Described','Compatibility Issues','Quality Concerns','Technical Difficulties'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_returns_unexpected_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.355272Z", "completed_at": "2024-09-13T23:30:13.361003Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.364341Z", "completed_at": "2024-09-13T23:30:13.364344Z"}], "thread_id": "Thread-3", "execution_time": 0.010684967041015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_shipping_assert_positive_shipping_amount.8d0c1a37a8", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom (select * from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping` where shipping_amount IS NOT NULL) dbt_subquery\n\nwhere not(shipping_amount > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_shipping_assert_positive_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.358387Z", "completed_at": "2024-09-13T23:30:13.364639Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.365258Z", "completed_at": "2024-09-13T23:30:13.365261Z"}], "thread_id": "Thread-2", "execution_time": 0.01063084602355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_shipping_unexpected_is_shipped_bool.6a63595654", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_shipped as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n    group by is_shipped\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_shipping_unexpected_is_shipped_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.361229Z", "completed_at": "2024-09-13T23:30:13.365555Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.368647Z", "completed_at": "2024-09-13T23:30:13.368651Z"}], "thread_id": "Thread-1", "execution_time": 0.01082921028137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_shipping_unexpected_order_id_length.2ba4519514", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_shipping_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.365731Z", "completed_at": "2024-09-13T23:30:13.369583Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.373293Z", "completed_at": "2024-09-13T23:30:13.373295Z"}], "thread_id": "Thread-4", "execution_time": 0.009196996688842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_shipping_unexpected_shipping_id_length.3c4d89d925", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        shipping_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_shipping_unexpected_shipping_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.369751Z", "completed_at": "2024-09-13T23:30:13.376202Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.379382Z", "completed_at": "2024-09-13T23:30:13.379385Z"}], "thread_id": "Thread-3", "execution_time": 0.01121830940246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_customers_customer_id.3579d23017", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select customer_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`customers`\n  where customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_unique_raw_customers_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.373591Z", "completed_at": "2024-09-13T23:30:13.379715Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.380454Z", "completed_at": "2024-09-13T23:30:13.380458Z"}], "thread_id": "Thread-2", "execution_time": 0.011332988739013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_nps_order_id.aae4faebb6", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`nps`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_unique_raw_nps_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.376433Z", "completed_at": "2024-09-13T23:30:13.380277Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.383174Z", "completed_at": "2024-09-13T23:30:13.383177Z"}], "thread_id": "Thread-1", "execution_time": 0.01010894775390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_orders_order_id.2e0765462f", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_unique_raw_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.380752Z", "completed_at": "2024-09-13T23:30:13.384301Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.387023Z", "completed_at": "2024-09-13T23:30:13.387027Z"}], "thread_id": "Thread-4", "execution_time": 0.007896661758422852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_returns_order_id.a8aef5caa0", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_unique_raw_returns_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.384478Z", "completed_at": "2024-09-13T23:30:13.389998Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.393154Z", "completed_at": "2024-09-13T23:30:13.393157Z"}], "thread_id": "Thread-3", "execution_time": 0.01022481918334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_returns_return_id.1d09b09e28", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select return_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`returns`\n  where return_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_unique_raw_returns_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.387547Z", "completed_at": "2024-09-13T23:30:13.393481Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.394223Z", "completed_at": "2024-09-13T23:30:13.394226Z"}], "thread_id": "Thread-2", "execution_time": 0.010154962539672852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_shipping_order_id.d5a8aa62ce", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_unique_raw_shipping_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.390171Z", "completed_at": "2024-09-13T23:30:13.394042Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.396889Z", "completed_at": "2024-09-13T23:30:13.396892Z"}], "thread_id": "Thread-1", "execution_time": 0.01027369499206543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_shipping_shipping_id.c6c0e38145", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select shipping_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_sources`.`shipping`\n  where shipping_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`source_unique_raw_shipping_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.394503Z", "completed_at": "2024-09-13T23:30:13.400204Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.400776Z", "completed_at": "2024-09-13T23:30:13.400779Z"}], "thread_id": "Thread-4", "execution_time": 0.007878303527832031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_nps_unexpected_nps_date.8918cb98fd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_nps`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`stg_nps_unexpected_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.398014Z", "completed_at": "2024-09-13T23:30:13.403535Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.406664Z", "completed_at": "2024-09-13T23:30:13.406668Z"}], "thread_id": "Thread-3", "execution_time": 0.010018110275268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_payments_unexpected_created_at.c6758e1cb0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_payments`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not created_at <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`stg_payments_unexpected_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.401272Z", "completed_at": "2024-09-13T23:30:13.407597Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.409694Z", "completed_at": "2024-09-13T23:30:13.409698Z"}], "thread_id": "Thread-2", "execution_time": 0.011932134628295898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_orders_unexpected_order_date.e63e94672f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not order_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`stg_orders_unexpected_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.403935Z", "completed_at": "2024-09-13T23:30:13.409996Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.410584Z", "completed_at": "2024-09-13T23:30:13.410587Z"}], "thread_id": "Thread-1", "execution_time": 0.010251045227050781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_returns_unexpected_return_date.12ec6a0b35", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_returns`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not return_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`stg_returns_unexpected_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.408034Z", "completed_at": "2024-09-13T23:30:13.413543Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.414122Z", "completed_at": "2024-09-13T23:30:13.414126Z"}], "thread_id": "Thread-4", "execution_time": 0.007197141647338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_payment_fees", "compiled": true, "compiled_code": "WITH\n  stg_payment_fees AS (\n    SELECT payment_method_id\n          ,payment_method\n          ,percentage_fee\n          ,fixed_fee\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`)\n\n\n  SELECT *\n    FROM stg_payment_fees", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.410889Z", "completed_at": "2024-09-13T23:30:13.417293Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.419951Z", "completed_at": "2024-09-13T23:30:13.419954Z"}], "thread_id": "Thread-3", "execution_time": 0.012222766876220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_payment_fees_fixed_fee.2e54ee1bd7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\nwhere fixed_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_payment_fees_fixed_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.414417Z", "completed_at": "2024-09-13T23:30:13.420468Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.421056Z", "completed_at": "2024-09-13T23:30:13.421058Z"}], "thread_id": "Thread-2", "execution_time": 0.008002996444702148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_payment_fees_payment_method.c7d24bb82e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\nwhere payment_method is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_payment_fees_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.417730Z", "completed_at": "2024-09-13T23:30:13.423960Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.424572Z", "completed_at": "2024-09-13T23:30:13.424574Z"}], "thread_id": "Thread-1", "execution_time": 0.010705947875976562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_payment_fees_payment_method_id.ed89636986", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\nwhere payment_method_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_payment_fees_payment_method_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.421550Z", "completed_at": "2024-09-13T23:30:13.427357Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.430514Z", "completed_at": "2024-09-13T23:30:13.430518Z"}], "thread_id": "Thread-4", "execution_time": 0.01029515266418457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_payment_fees_percentage_fee.697d087974", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\nwhere percentage_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_payment_fees_percentage_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.424928Z", "completed_at": "2024-09-13T23:30:13.431017Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.431644Z", "completed_at": "2024-09-13T23:30:13.431647Z"}], "thread_id": "Thread-3", "execution_time": 0.010339975357055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_payment_fees_unexpected_fixed_fee.ff8eab6f52", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\n\nwhere not(fixed_fee > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_payment_fees_unexpected_fixed_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.427790Z", "completed_at": "2024-09-13T23:30:13.432141Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.434958Z", "completed_at": "2024-09-13T23:30:13.434961Z"}], "thread_id": "Thread-2", "execution_time": 0.010638236999511719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_payment_fees_unexpected_payment_method.a712880c05", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'amazon_pay','stripe','apple_pay','bitcoin'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_payment_fees_unexpected_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.432318Z", "completed_at": "2024-09-13T23:30:13.438140Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.440747Z", "completed_at": "2024-09-13T23:30:13.440750Z"}], "thread_id": "Thread-1", "execution_time": 0.0099639892578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_payment_fees_unexpected_payment_method_id.c1100364e1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not payment_method_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not payment_method_id <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_payment_fees_unexpected_payment_method_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.435489Z", "completed_at": "2024-09-13T23:30:13.441042Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.441632Z", "completed_at": "2024-09-13T23:30:13.441634Z"}], "thread_id": "Thread-4", "execution_time": 0.009730100631713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_payment_fees_unexpected_percentage_fee.f4ed1ee461", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not percentage_fee >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not percentage_fee <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_payment_fees_unexpected_percentage_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.438552Z", "completed_at": "2024-09-13T23:30:13.444640Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.445257Z", "completed_at": "2024-09-13T23:30:13.445259Z"}], "thread_id": "Thread-3", "execution_time": 0.010019063949584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_payment_fees_payment_method.d1803efcb4", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select payment_method as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\n  where payment_method is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_seed_payment_fees_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.441932Z", "completed_at": "2024-09-13T23:30:13.445927Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.448182Z", "completed_at": "2024-09-13T23:30:13.448185Z"}], "thread_id": "Thread-2", "execution_time": 0.009876012802124023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_payment_fees_payment_method_id.e75aa7b850", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select payment_method_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_payment_fees`\n  where payment_method_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_seed_payment_fees_payment_method_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.446325Z", "completed_at": "2024-09-13T23:30:13.451313Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.453930Z", "completed_at": "2024-09-13T23:30:13.453932Z"}], "thread_id": "Thread-1", "execution_time": 0.009150028228759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_products", "compiled": true, "compiled_code": "WITH\n  stg_products AS (\n    SELECT product_category_id\n          ,product_category\n          ,product_id\n          ,product_name\n          ,inbound_shipping_cost\n          ,product_cost\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`)\n\n\n  SELECT *\n    FROM stg_products", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_products`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.448696Z", "completed_at": "2024-09-13T23:30:13.454406Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.457605Z", "completed_at": "2024-09-13T23:30:13.457608Z"}], "thread_id": "Thread-4", "execution_time": 0.0119171142578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_inbound_shipping_cost.f798cf8f2f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\nwhere inbound_shipping_cost is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_products_inbound_shipping_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.451713Z", "completed_at": "2024-09-13T23:30:13.457906Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.458528Z", "completed_at": "2024-09-13T23:30:13.458530Z"}], "thread_id": "Thread-3", "execution_time": 0.010107278823852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_category.f11e3a13e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\nwhere product_category is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_products_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.454809Z", "completed_at": "2024-09-13T23:30:13.459002Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.461824Z", "completed_at": "2024-09-13T23:30:13.461827Z"}], "thread_id": "Thread-2", "execution_time": 0.010358095169067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_category_id.4022d64939", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\nwhere product_category_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_products_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.459604Z", "completed_at": "2024-09-13T23:30:13.465350Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.468431Z", "completed_at": "2024-09-13T23:30:13.468434Z"}], "thread_id": "Thread-1", "execution_time": 0.010392904281616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_cost.d8f2f71464", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\nwhere product_cost is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_products_product_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.462728Z", "completed_at": "2024-09-13T23:30:13.468726Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.512951Z", "completed_at": "2024-09-13T23:30:13.512955Z"}], "thread_id": "Thread-4", "execution_time": 0.0538327693939209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_id.a4fccf3ddc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\nwhere product_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_products_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.465552Z", "completed_at": "2024-09-13T23:30:13.513478Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.514078Z", "completed_at": "2024-09-13T23:30:13.514082Z"}], "thread_id": "Thread-3", "execution_time": 0.05183005332946777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_name.0b363a2b14", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\nwhere product_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_products_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.468927Z", "completed_at": "2024-09-13T23:30:13.514568Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.517417Z", "completed_at": "2024-09-13T23:30:13.517421Z"}], "thread_id": "Thread-2", "execution_time": 0.05231809616088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products__unexpected_product_category_id.65766e3428", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_products__unexpected_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.514725Z", "completed_at": "2024-09-13T23:30:13.520493Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.521080Z", "completed_at": "2024-09-13T23:30:13.521083Z"}], "thread_id": "Thread-1", "execution_time": 0.007851123809814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products_assert_positive_inbound_shipping_cost.d4c0fd2082", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\n\nwhere not(inbound_shipping_cost > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_products_assert_positive_inbound_shipping_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.517966Z", "completed_at": "2024-09-13T23:30:13.525509Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.528233Z", "completed_at": "2024-09-13T23:30:13.528237Z"}], "thread_id": "Thread-4", "execution_time": 0.013899087905883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products_assert_positive_product_cost.b09ee25c64", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\n\nwhere not(product_cost > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_products_assert_positive_product_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.521389Z", "completed_at": "2024-09-13T23:30:13.528813Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.529407Z", "completed_at": "2024-09-13T23:30:13.529410Z"}], "thread_id": "Thread-3", "execution_time": 0.011698007583618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products_unexpected_product_category.fec78e49d1", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_category as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\n    group by product_category\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Design Templates','Fonts & Typography','Graphic Assets','Stock Photography','Video & Animation'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_products_unexpected_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.525931Z", "completed_at": "2024-09-13T23:30:13.529702Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.532512Z", "completed_at": "2024-09-13T23:30:13.532516Z"}], "thread_id": "Thread-2", "execution_time": 0.011682748794555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products_unexpected_product_id.741bb2630b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_products_unexpected_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.530079Z", "completed_at": "2024-09-13T23:30:13.535704Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.536296Z", "completed_at": "2024-09-13T23:30:13.536300Z"}], "thread_id": "Thread-1", "execution_time": 0.007773160934448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_products_product_name.c6936fa379", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select product_name as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_products`\n  where product_name is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_seed_products_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.533477Z", "completed_at": "2024-09-13T23:30:13.539389Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.542018Z", "completed_at": "2024-09-13T23:30:13.542021Z"}], "thread_id": "Thread-4", "execution_time": 0.012180328369140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_shipping_unexpected_shipping_date.8b549f2bc4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_shipping`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not shipping_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`stg_shipping_unexpected_shipping_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.536607Z", "completed_at": "2024-09-13T23:30:13.542342Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.542932Z", "completed_at": "2024-09-13T23:30:13.542934Z"}], "thread_id": "Thread-3", "execution_time": 0.009925127029418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_taxes", "compiled": true, "compiled_code": "WITH\n  stg_taxes AS (\n    SELECT tax_id AS country_id\n          ,tax_country AS country\n          ,tax_rate\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_taxes`)\n\n\n  SELECT *\n    FROM stg_taxes", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_taxes`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.539587Z", "completed_at": "2024-09-13T23:30:13.543226Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.546023Z", "completed_at": "2024-09-13T23:30:13.546026Z"}], "thread_id": "Thread-2", "execution_time": 0.01001119613647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_taxes_tax_country.0252c9f25c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_taxes`\nwhere tax_country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_taxes_tax_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.543398Z", "completed_at": "2024-09-13T23:30:13.546977Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.549819Z", "completed_at": "2024-09-13T23:30:13.549822Z"}], "thread_id": "Thread-1", "execution_time": 0.008061885833740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_taxes_tax_id.f55a6ff871", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_taxes`\nwhere tax_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_taxes_tax_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.547157Z", "completed_at": "2024-09-13T23:30:13.553375Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.556006Z", "completed_at": "2024-09-13T23:30:13.556009Z"}], "thread_id": "Thread-4", "execution_time": 0.010462045669555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_taxes_tax_rate.9483e90a15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_taxes`\nwhere tax_rate is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_seed_taxes_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.550138Z", "completed_at": "2024-09-13T23:30:13.556348Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.556924Z", "completed_at": "2024-09-13T23:30:13.556927Z"}], "thread_id": "Thread-3", "execution_time": 0.010396957397460938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_taxes_unexpected_tax_id.fad3776053", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_taxes`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_id <= 22\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_taxes_unexpected_tax_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.553598Z", "completed_at": "2024-09-13T23:30:13.557221Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.559965Z", "completed_at": "2024-09-13T23:30:13.559968Z"}], "thread_id": "Thread-2", "execution_time": 0.010386943817138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_taxes_unexpected_tax_rate.f785d7f3ab", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_taxes`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`seed_taxes_unexpected_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.557382Z", "completed_at": "2024-09-13T23:30:13.560899Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.563666Z", "completed_at": "2024-09-13T23:30:13.563670Z"}], "thread_id": "Thread-1", "execution_time": 0.007911920547485352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_taxes_tax_country.af4f5dce37", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select tax_country as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_taxes`\n  where tax_country is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_seed_taxes_tax_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.561084Z", "completed_at": "2024-09-13T23:30:13.567140Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.569296Z", "completed_at": "2024-09-13T23:30:13.569299Z"}], "thread_id": "Thread-4", "execution_time": 0.009798049926757812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_taxes_tax_id.f8c4c43c3b", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select tax_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev_seeds`.`seed_taxes`\n  where tax_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_seed_taxes_tax_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.563995Z", "completed_at": "2024-09-13T23:30:13.569666Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.569847Z", "completed_at": "2024-09-13T23:30:13.569850Z"}], "thread_id": "Thread-3", "execution_time": 0.009395837783813477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.int_orders", "compiled": true, "compiled_code": "WITH\n  stg_orders AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_orders`)\n\n\n  ,stg_customers AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_customers`)\n\n\n  ,stg_shipping AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_shipping`)\n\n\n  ,stg_returns AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_returns`)\n\n\n  ,stg_nps AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_nps`)\n\n\n  ,stg_products AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_products`)\n\n\n  ,final AS (\n    SELECT product_category_id\n          ,product_id\n          ,order_id\n          ,customer_id\n          ,order_status\n          ,order_date\n          ,first_name\n          ,last_name\n          ,shipping_id\n          ,COALESCE(is_shipped, FALSE) AS is_shipped\n          ,shipping_date\n          ,shipping_amount\n          ,return_id\n          ,COALESCE(is_returned, FALSE) AS is_returned\n          ,return_date\n          ,return_reason\n          ,COALESCE(is_nps, FALSE) AS is_nps\n          ,nps_score\n          ,nps_date\n          ,product_category\n          ,product_name\n          ,inbound_shipping_cost\n          ,product_cost\n      FROM stg_orders\n      LEFT JOIN stg_customers USING (customer_id)\n      LEFT JOIN stg_shipping USING (order_id)\n      LEFT JOIN stg_returns USING (order_id)\n      LEFT JOIN stg_nps USING (order_id, customer_id)\n      LEFT JOIN stg_products USING (product_category_id, product_id))\n\n\n  SELECT *\n    FROM final", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.567348Z", "completed_at": "2024-09-13T23:30:13.570859Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.571600Z", "completed_at": "2024-09-13T23:30:13.571603Z"}], "thread_id": "Thread-2", "execution_time": 0.008177757263183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.int_payments", "compiled": true, "compiled_code": "WITH\n  stg_payments AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_payments`)\n\n\n  ,stg_taxes AS (\n    SELECT * \n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_taxes`)\n\n\n  ,stg_payment_fees AS (\n    SELECT * \n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_payment_fees`)\n\n\n  ,final AS (\n    SELECT order_id\n          ,payment_id\n          ,order_payment_id\n          ,payment_method\n          ,payment_status\n          ,country_id\n          ,country\n          ,created_at\n          ,gross_revenue\n          ,tax_rate\n          ,percentage_fee\n          ,fixed_fee\n          ,ROUND((gross_revenue * (percentage_fee / 100)) + fixed_fee, 2) AS payment_fee\n      FROM stg_payments\n      LEFT JOIN stg_taxes USING (country_id)\n      LEFT JOIN stg_payment_fees USING (payment_method))\n\n\n  SELECT *\n    FROM final", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.572714Z", "completed_at": "2024-09-13T23:30:13.585163Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.587793Z", "completed_at": "2024-09-13T23:30:13.587796Z"}], "thread_id": "Thread-1", "execution_time": 0.016815185546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_equal_rowcount_int_orders_ref_stg_orders_.5dc9604002", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_orders`\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_equal_rowcount_int_orders_ref_stg_orders_`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.578892Z", "completed_at": "2024-09-13T23:30:13.587604Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.588312Z", "completed_at": "2024-09-13T23:30:13.588314Z"}], "thread_id": "Thread-4", "execution_time": 0.01699376106262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_orders_unequal_agg_shipping_amount.8085e0b065", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(shipping_amount) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(shipping_amount) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_shipping`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`int_orders_unequal_agg_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.582684Z", "completed_at": "2024-09-13T23:30:13.588127Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.588896Z", "completed_at": "2024-09-13T23:30:13.588899Z"}], "thread_id": "Thread-3", "execution_time": 0.01685810089111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_orders_unexpected_is_nps_bool.89b6608341", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_nps as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    group by is_nps\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`int_orders_unexpected_is_nps_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.585399Z", "completed_at": "2024-09-13T23:30:13.589222Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.590033Z", "completed_at": "2024-09-13T23:30:13.590036Z"}], "thread_id": "Thread-2", "execution_time": 0.007616996765136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_orders_unexpected_is_returned_bool.a3cea4213e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_returned as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    group by is_returned\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`int_orders_unexpected_is_returned_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.591329Z", "completed_at": "2024-09-13T23:30:13.599228Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.601666Z", "completed_at": "2024-09-13T23:30:13.601670Z"}], "thread_id": "Thread-1", "execution_time": 0.01210474967956543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_orders_unexpected_is_shipped_bool.c2b5343dec", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_shipped as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    group by is_shipped\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`int_orders_unexpected_is_shipped_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.593920Z", "completed_at": "2024-09-13T23:30:13.602041Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.602620Z", "completed_at": "2024-09-13T23:30:13.602623Z"}], "thread_id": "Thread-4", "execution_time": 0.012320995330810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_customer_id.e78a71eed3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.596780Z", "completed_at": "2024-09-13T23:30:13.602414Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.603306Z", "completed_at": "2024-09-13T23:30:13.603308Z"}], "thread_id": "Thread-3", "execution_time": 0.012609004974365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_first_name.41e8be1f95", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere first_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.599428Z", "completed_at": "2024-09-13T23:30:13.603133Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.603979Z", "completed_at": "2024-09-13T23:30:13.603982Z"}], "thread_id": "Thread-2", "execution_time": 0.010303020477294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_inbound_shipping_cost.06ccde673e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere inbound_shipping_cost is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_inbound_shipping_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.604677Z", "completed_at": "2024-09-13T23:30:13.614083Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.616580Z", "completed_at": "2024-09-13T23:30:13.616585Z"}], "thread_id": "Thread-1", "execution_time": 0.013699054718017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_is_nps.e463bb19a8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere is_nps is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_is_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.608863Z", "completed_at": "2024-09-13T23:30:13.617205Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.618023Z", "completed_at": "2024-09-13T23:30:13.618026Z"}], "thread_id": "Thread-4", "execution_time": 0.013593912124633789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_is_returned.5428c59e02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere is_returned is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_is_returned`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.611715Z", "completed_at": "2024-09-13T23:30:13.617389Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.618342Z", "completed_at": "2024-09-13T23:30:13.618346Z"}], "thread_id": "Thread-3", "execution_time": 0.010374069213867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_is_shipped.ac59b50b97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere is_shipped is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_is_shipped`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.614290Z", "completed_at": "2024-09-13T23:30:13.617839Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.618866Z", "completed_at": "2024-09-13T23:30:13.618869Z"}], "thread_id": "Thread-2", "execution_time": 0.01045083999633789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_last_name.729e6f5a4c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere last_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.619622Z", "completed_at": "2024-09-13T23:30:13.626289Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.630925Z", "completed_at": "2024-09-13T23:30:13.630928Z"}], "thread_id": "Thread-1", "execution_time": 0.013336181640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_order_date.c8d13500bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.624001Z", "completed_at": "2024-09-13T23:30:13.631520Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.631965Z", "completed_at": "2024-09-13T23:30:13.631968Z"}], "thread_id": "Thread-4", "execution_time": 0.00921010971069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_order_id.383134cc66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.628654Z", "completed_at": "2024-09-13T23:30:13.632276Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.633050Z", "completed_at": "2024-09-13T23:30:13.633054Z"}], "thread_id": "Thread-2", "execution_time": 0.009854316711425781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_category.81718e6804", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere product_category is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.626466Z", "completed_at": "2024-09-13T23:30:13.632462Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.633367Z", "completed_at": "2024-09-13T23:30:13.633370Z"}], "thread_id": "Thread-3", "execution_time": 0.010400056838989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_order_status.c9525f7b76", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere order_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.633663Z", "completed_at": "2024-09-13T23:30:13.640184Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.640761Z", "completed_at": "2024-09-13T23:30:13.640765Z"}], "thread_id": "Thread-1", "execution_time": 0.009054899215698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_category_id.9633448692", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere product_category_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.637879Z", "completed_at": "2024-09-13T23:30:13.645595Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.646060Z", "completed_at": "2024-09-13T23:30:13.646064Z"}], "thread_id": "Thread-4", "execution_time": 0.009511947631835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_cost.b326ad5229", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere product_cost is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_product_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.643329Z", "completed_at": "2024-09-13T23:30:13.646623Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.647361Z", "completed_at": "2024-09-13T23:30:13.647365Z"}], "thread_id": "Thread-3", "execution_time": 0.009742021560668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_name.3b4cb7f6ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere product_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.641084Z", "completed_at": "2024-09-13T23:30:13.647019Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.647871Z", "completed_at": "2024-09-13T23:30:13.647874Z"}], "thread_id": "Thread-2", "execution_time": 0.010458230972290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_id.d2b92956f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\nwhere product_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.648169Z", "completed_at": "2024-09-13T23:30:13.656847Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.657419Z", "completed_at": "2024-09-13T23:30:13.657422Z"}], "thread_id": "Thread-1", "execution_time": 0.011060237884521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_orders_customer_id__customer_id__ref_stg_customers_.9d7e39b587", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_customers`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`relationships_int_orders_d5a17333e13549d0305a0cb7ecf4ce04`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.653868Z", "completed_at": "2024-09-13T23:30:13.663356Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.663822Z", "completed_at": "2024-09-13T23:30:13.663825Z"}], "thread_id": "Thread-4", "execution_time": 0.016202926635742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_orders_order_id__order_id__ref_stg_orders_.ff87b11be6", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_orders`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`relationships_int_orders_order_id__order_id__ref_stg_orders_`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.657740Z", "completed_at": "2024-09-13T23:30:13.664595Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.665310Z", "completed_at": "2024-09-13T23:30:13.665314Z"}], "thread_id": "Thread-3", "execution_time": 0.011703729629516602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_orders_shipping_id__shipping_id__ref_stg_shipping_.598a58922f", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select shipping_id as from_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    where shipping_id is not null\n),\n\nparent as (\n    select shipping_id as to_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_shipping`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`relationships_int_orders_2301cfe9d58aeb2a84c543d4f33dee4f`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.660659Z", "completed_at": "2024-09-13T23:30:13.664762Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.665626Z", "completed_at": "2024-09-13T23:30:13.665629Z"}], "thread_id": "Thread-2", "execution_time": 0.009011030197143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_int_orders_order_id.63cc4f3a7a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_int_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.665932Z", "completed_at": "2024-09-13T23:30:13.671395Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.671953Z", "completed_at": "2024-09-13T23:30:13.671957Z"}], "thread_id": "Thread-1", "execution_time": 0.007898092269897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_int_orders_return_id.402c65096c", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select return_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n  where return_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_int_orders_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.668767Z", "completed_at": "2024-09-13T23:30:13.672300Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.678505Z", "completed_at": "2024-09-13T23:30:13.678509Z"}], "thread_id": "Thread-4", "execution_time": 0.013441085815429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_int_orders_shipping_id.071fd1d880", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select shipping_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n  where shipping_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_int_orders_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.674913Z", "completed_at": "2024-09-13T23:30:13.679506Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.682590Z", "completed_at": "2024-09-13T23:30:13.682594Z"}], "thread_id": "Thread-2", "execution_time": 0.01143193244934082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.fct_payment_methods", "compiled": true, "compiled_code": "\n\n\n\nWITH\n  int_payments AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`)\n\n\n  ,fct_payment_methods AS (\n    SELECT country_id\n           ,country\n           ,order_id\n           ,COUNT(order_payment_id) AS nb_payments\n           ,IF(COUNT(DISTINCT payment_method) > 1, 'multiple', 'single') AS payment_methods\n           ,MAX(created_at) AS order_date\n           ,CASE \n            WHEN SUM(IF(payment_status = 'successful', 1, 0)) <> COUNT(order_payment_id) THEN 'failed'\n            ELSE 'successful' END AS order_status\n           ,SUM(gross_revenue) AS total_gross_revenue\n           ,SUM(payment_fee) AS total_payment_fees\n           ,SUM(CASE WHEN payment_method = 'amazon_pay' THEN payment_fee ELSE 0 END) AS amazon_pay_payment_fees\n           ,SUM(CASE WHEN payment_method = 'apple_pay' THEN payment_fee ELSE 0 END) AS apple_pay_payment_fees\n           ,SUM(CASE WHEN payment_method = 'bitcoin' THEN payment_fee ELSE 0 END) AS bitcoin_payment_fees\n           ,SUM(CASE WHEN payment_method = 'stripe' THEN payment_fee ELSE 0 END) AS stripe_payment_fees\n           ,SUM(CASE WHEN payment_method = 'amazon_pay' THEN gross_revenue ELSE 0 END) AS amazon_pay_amount\n           ,SUM(CASE WHEN payment_method = 'apple_pay' THEN gross_revenue ELSE 0 END) AS apple_pay_amount\n           ,SUM(CASE WHEN payment_method = 'bitcoin' THEN gross_revenue ELSE 0 END) AS bitcoin_amount\n           ,SUM(CASE WHEN payment_method = 'stripe' THEN gross_revenue ELSE 0 END) AS stripe_amount\n           FROM int_payments\n      GROUP BY country_id\n              ,country\n              ,order_id)\n\n\n  SELECT *\n    FROM fct_payment_methods", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.672470Z", "completed_at": "2024-09-13T23:30:13.679878Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.683082Z", "completed_at": "2024-09-13T23:30:13.683085Z"}], "thread_id": "Thread-3", "execution_time": 0.012125968933105469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.fct_orders", "compiled": true, "compiled_code": "\n\n\nWITH\n  int_orders AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`)\n\n\n  ,int_payments AS (\n    SELECT order_id\n          ,COUNT(payment_id) AS nb_payments\n          ,MAX(payment_method) AS payment_method\n          ,MAX(country_id) AS country_id\n          ,MAX(country) AS country\n          ,SUM(gross_revenue) AS gross_revenue\n          ,MAX(tax_rate) AS tax_rate\n          ,SUM(payment_fee) AS payment_fee\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n      GROUP BY order_id)\n\n\n  ,joins AS (\n      SELECT country_id\n            ,country\n            ,order_id\n            ,order_status\n            ,customer_id\n            ,nb_payments\n            ,first_name\n            ,last_name\n            ,shipping_id\n            ,is_shipped\n            ,shipping_amount\n            ,payment_method\n            ,gross_revenue\n            ,tax_rate\n            ,SAFE_MULTIPLY(SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), SAFE_DIVIDE(tax_rate, 100)) AS tax_amount\n            ,SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)) AS net_revenue_before_tax\n            ,SAFE_DIVIDE(SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), (1 + SAFE_DIVIDE(tax_rate, 100))) AS net_revenue_after_tax\n            ,order_date\n            ,shipping_date\n            ,DATE_DIFF(shipping_date, order_date, DAY) AS fulfillment_days\n            ,IF(is_nps IS NULL, FALSE, TRUE) AS is_nps\n            ,nps_score\n            ,nps_date\n            ,product_category_id\n            ,product_category\n            ,product_id\n            ,product_name\n            ,SAFE_ADD(inbound_shipping_cost, product_cost) AS cogs\n            ,return_id\n            ,IF(is_returned IS NULL, FALSE, TRUE) AS is_returned\n            ,return_date\n            ,return_reason\n            ,IF(is_returned IS TRUE, SAFE_ADD(inbound_shipping_cost, product_cost), 0) AS returned_cogs\n            ,IF(is_returned IS TRUE, SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), 0) AS refund_amount\n            ,payment_fee\n        FROM int_orders\n        LEFT JOIN int_payments USING (order_id))\n\n\n    ,contribution_margin AS (\n      SELECT *\n            ,COALESCE(net_revenue_after_tax, 0)\n              - COALESCE(cogs, 0)\n                - COALESCE(refund_amount, 0)\n                  - COALESCE(payment_fee, 0)\n                    + COALESCE(returned_cogs, 0) AS cm\n        FROM joins)\n\n\n    ,customers AS (\n      SELECT customer_id\n            ,order_id\n            ,order_date AS customer_order_date\n            ,ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date) AS customer_order_nb\n        FROM contribution_margin\n        GROUP BY ALL)\n\n\n    ,final AS (\n      SELECT * EXCEPT(customer_order_date)\n            ,IF(customer_order_nb > 1, 'Returning', 'New') AS customer_type\n        FROM contribution_margin\n        LEFT JOIN customers USING (customer_id, order_id))\n\n\n  SELECT *\n    FROM final", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.680039Z", "completed_at": "2024-09-13T23:30:13.688477Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.689106Z", "completed_at": "2024-09-13T23:30:13.689109Z"}], "thread_id": "Thread-1", "execution_time": 0.010265111923217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_equal_rowcount_int_payments_ref_stg_payments_.70f412c4b6", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_payments`\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_equal_rowcount_int_payments_ref_stg_payments_`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.684107Z", "completed_at": "2024-09-13T23:30:13.689406Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.693044Z", "completed_at": "2024-09-13T23:30:13.693047Z"}], "thread_id": "Thread-4", "execution_time": 0.013406991958618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_payments_unequal_agg_gross_revenue.28f31da523", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_payments`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`int_payments_unequal_agg_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.689755Z", "completed_at": "2024-09-13T23:30:13.696221Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.698903Z", "completed_at": "2024-09-13T23:30:13.698907Z"}], "thread_id": "Thread-2", "execution_time": 0.011378049850463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_payments_unexpected_payment_fee.3dbfa94602", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n\nwhere not(payment_fee = ROUND((gross_revenue * (percentage_fee / 100)) + fixed_fee, 2))\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`int_payments_unexpected_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.693354Z", "completed_at": "2024-09-13T23:30:13.699211Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.699795Z", "completed_at": "2024-09-13T23:30:13.699798Z"}], "thread_id": "Thread-3", "execution_time": 0.011134147644042969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_country.18d4938d90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.696615Z", "completed_at": "2024-09-13T23:30:13.703089Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.703703Z", "completed_at": "2024-09-13T23:30:13.703706Z"}], "thread_id": "Thread-1", "execution_time": 0.00816798210144043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_country_id.d477883ad0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.700129Z", "completed_at": "2024-09-13T23:30:13.706442Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.707056Z", "completed_at": "2024-09-13T23:30:13.707060Z"}], "thread_id": "Thread-4", "execution_time": 0.010695934295654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_created_at.da6f256d05", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere created_at is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.704223Z", "completed_at": "2024-09-13T23:30:13.709860Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.710457Z", "completed_at": "2024-09-13T23:30:13.710460Z"}], "thread_id": "Thread-2", "execution_time": 0.007606983184814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_fixed_fee.e735f0304a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere fixed_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_fixed_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.707582Z", "completed_at": "2024-09-13T23:30:13.713399Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.713976Z", "completed_at": "2024-09-13T23:30:13.713979Z"}], "thread_id": "Thread-3", "execution_time": 0.009992122650146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_gross_revenue.3fab8f131f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere gross_revenue is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.710976Z", "completed_at": "2024-09-13T23:30:13.717299Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.719917Z", "completed_at": "2024-09-13T23:30:13.719920Z"}], "thread_id": "Thread-1", "execution_time": 0.012585878372192383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_order_id.557bf2eea0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.714287Z", "completed_at": "2024-09-13T23:30:13.720513Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.721272Z", "completed_at": "2024-09-13T23:30:13.721275Z"}], "thread_id": "Thread-4", "execution_time": 0.01055002212524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_payment_fee.e6ecdd7240", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere payment_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.717719Z", "completed_at": "2024-09-13T23:30:13.721094Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.723965Z", "completed_at": "2024-09-13T23:30:13.723968Z"}], "thread_id": "Thread-2", "execution_time": 0.010233879089355469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_payment_id.02e0f4bd25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere payment_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_payment_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.721762Z", "completed_at": "2024-09-13T23:30:13.727511Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.728087Z", "completed_at": "2024-09-13T23:30:13.728090Z"}], "thread_id": "Thread-3", "execution_time": 0.007901191711425781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_payment_method.a8fd5df74d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere payment_method is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.725072Z", "completed_at": "2024-09-13T23:30:13.731176Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.733765Z", "completed_at": "2024-09-13T23:30:13.733768Z"}], "thread_id": "Thread-1", "execution_time": 0.012240171432495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_payment_status.e9f85fff44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere payment_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_payment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.731351Z", "completed_at": "2024-09-13T23:30:13.734755Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.738225Z", "completed_at": "2024-09-13T23:30:13.738228Z"}], "thread_id": "Thread-2", "execution_time": 0.010949850082397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_tax_rate.da4366e257", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere tax_rate is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.728392Z", "completed_at": "2024-09-13T23:30:13.734921Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.738528Z", "completed_at": "2024-09-13T23:30:13.738531Z"}], "thread_id": "Thread-4", "execution_time": 0.013715267181396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_percentage_fee.cb94ecc835", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\nwhere percentage_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_int_payments_percentage_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.735291Z", "completed_at": "2024-09-13T23:30:13.742493Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.743102Z", "completed_at": "2024-09-13T23:30:13.743105Z"}], "thread_id": "Thread-3", "execution_time": 0.009026050567626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_payments_country_id__country_id__ref_stg_taxes_.df4c4ee979", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select country_id as from_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n    where country_id is not null\n),\n\nparent as (\n    select country_id as to_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_taxes`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`relationships_int_payments_a119759a6fc2755834df1eefbb54b2e7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.739514Z", "completed_at": "2024-09-13T23:30:13.743985Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.749568Z", "completed_at": "2024-09-13T23:30:13.749572Z"}], "thread_id": "Thread-1", "execution_time": 0.014525890350341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_payments_payment_method__payment_method__ref_stg_payment_fees_.1e68484b11", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select payment_method as from_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n    where payment_method is not null\n),\n\nparent as (\n    select payment_method as to_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`stg_payment_fees`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`relationships_int_payments_4000ff034d1fca11ad4fdbeaa6b1b3fb`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.744163Z", "completed_at": "2024-09-13T23:30:13.752890Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.753440Z", "completed_at": "2024-09-13T23:30:13.753443Z"}], "thread_id": "Thread-2", "execution_time": 0.010810136795043945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_amazon_pay_amount.7d9e9abbfd", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct amazon_pay_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct amazon_pay_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_amazon_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.747004Z", "completed_at": "2024-09-13T23:30:13.753249Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.756794Z", "completed_at": "2024-09-13T23:30:13.756798Z"}], "thread_id": "Thread-4", "execution_time": 0.013963937759399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_amazon_pay_payment_fees.5ca4935050", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct amazon_pay_payment_fees) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct amazon_pay_payment_fees) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_pay_e8311164492a85011b25a15a86e84a09`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.750371Z", "completed_at": "2024-09-13T23:30:13.756615Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.757382Z", "completed_at": "2024-09-13T23:30:13.757385Z"}], "thread_id": "Thread-3", "execution_time": 0.008064985275268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_apple_pay_amount.269ff4d35e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct apple_pay_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct apple_pay_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_apple_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.753754Z", "completed_at": "2024-09-13T23:30:13.758112Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.758881Z", "completed_at": "2024-09-13T23:30:13.758884Z"}], "thread_id": "Thread-1", "execution_time": 0.006295919418334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_apple_pay_payment_fees.e0ab54115b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct apple_pay_payment_fees) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct apple_pay_payment_fees) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_pay_813a2b537ee01f456263166ec9a97dbf`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.759567Z", "completed_at": "2024-09-13T23:30:13.766890Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.767474Z", "completed_at": "2024-09-13T23:30:13.767477Z"}], "thread_id": "Thread-2", "execution_time": 0.00959920883178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_bitcoin_amount.15818a9c60", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct bitcoin_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct bitcoin_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_bitcoin_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.762234Z", "completed_at": "2024-09-13T23:30:13.767299Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.770551Z", "completed_at": "2024-09-13T23:30:13.770555Z"}], "thread_id": "Thread-4", "execution_time": 0.012093782424926758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_bitcoin_payment_fees.4cfe95cb5e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct bitcoin_payment_fees) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct bitcoin_payment_fees) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_bitcoin_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.764640Z", "completed_at": "2024-09-13T23:30:13.770857Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.771521Z", "completed_at": "2024-09-13T23:30:13.771523Z"}], "thread_id": "Thread-3", "execution_time": 0.01237797737121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_country.f361beadad", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct country) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.767787Z", "completed_at": "2024-09-13T23:30:13.772029Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.772797Z", "completed_at": "2024-09-13T23:30:13.772800Z"}], "thread_id": "Thread-1", "execution_time": 0.008408069610595703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_country_id.b42ed05717", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct country_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.773471Z", "completed_at": "2024-09-13T23:30:13.780835Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.781402Z", "completed_at": "2024-09-13T23:30:13.781405Z"}], "thread_id": "Thread-2", "execution_time": 0.009611129760742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_order_date.c02b07ac0e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct order_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.775938Z", "completed_at": "2024-09-13T23:30:13.781215Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.784470Z", "completed_at": "2024-09-13T23:30:13.784473Z"}], "thread_id": "Thread-4", "execution_time": 0.012309789657592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_order_id.00cc07e79d", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct order_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.778640Z", "completed_at": "2024-09-13T23:30:13.784989Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.785636Z", "completed_at": "2024-09-13T23:30:13.785638Z"}], "thread_id": "Thread-3", "execution_time": 0.01240682601928711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_stripe_amount.9456b323b5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct stripe_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct stripe_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_stripe_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.781707Z", "completed_at": "2024-09-13T23:30:13.786137Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.786885Z", "completed_at": "2024-09-13T23:30:13.786887Z"}], "thread_id": "Thread-1", "execution_time": 0.008543014526367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_stripe_payment_fees.df8b964557", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct stripe_payment_fees) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\n  \n\nhaving count(distinct stripe_payment_fees) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_payment_methods_stripe_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.787178Z", "completed_at": "2024-09-13T23:30:13.795026Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.799013Z", "completed_at": "2024-09-13T23:30:13.799017Z"}], "thread_id": "Thread-2", "execution_time": 0.013636112213134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_assert_positive_nb_payments.bcb7a7d8c9", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(nb_payments > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_assert_positive_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.789613Z", "completed_at": "2024-09-13T23:30:13.795214Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.799334Z", "completed_at": "2024-09-13T23:30:13.799337Z"}], "thread_id": "Thread-4", "execution_time": 0.013441085815429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_assert_positive_total_gross_revenue.c0d9bfabd1", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(total_gross_revenue > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_assert_positive_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.792584Z", "completed_at": "2024-09-13T23:30:13.799640Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.800278Z", "completed_at": "2024-09-13T23:30:13.800281Z"}], "thread_id": "Thread-3", "execution_time": 0.010920286178588867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_assert_positive_total_payment_fees.e8836651e3", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(total_payment_fees > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_assert_positive_total_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.795399Z", "completed_at": "2024-09-13T23:30:13.800767Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.801556Z", "completed_at": "2024-09-13T23:30:13.801559Z"}], "thread_id": "Thread-1", "execution_time": 0.009213924407958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unequal_agg_gross_revenue.61f110d7e7", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unequal_agg_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.802222Z", "completed_at": "2024-09-13T23:30:13.811475Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.812066Z", "completed_at": "2024-09-13T23:30:13.812070Z"}], "thread_id": "Thread-2", "execution_time": 0.011533260345458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unequal_agg_payment_fees.41bf364193", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_payment_fees) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(payment_fee) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unequal_agg_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.805645Z", "completed_at": "2024-09-13T23:30:13.811882Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.814721Z", "completed_at": "2024-09-13T23:30:13.814725Z"}], "thread_id": "Thread-4", "execution_time": 0.01382303237915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_amazon_pay_amount.d41fa1103d", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(amazon_pay_amount >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_amazon_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.808577Z", "completed_at": "2024-09-13T23:30:13.815036Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.815735Z", "completed_at": "2024-09-13T23:30:13.815738Z"}], "thread_id": "Thread-3", "execution_time": 0.01375579833984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_amazon_pay_payment_fees.ee2028ca88", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(amazon_pay_payment_fees >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_amazon_pay_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.812393Z", "completed_at": "2024-09-13T23:30:13.816465Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.817247Z", "completed_at": "2024-09-13T23:30:13.817251Z"}], "thread_id": "Thread-1", "execution_time": 0.008984804153442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_apple_pay_amount.d0161e7049", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(apple_pay_amount >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_apple_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.820129Z", "completed_at": "2024-09-13T23:30:13.826218Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.828933Z", "completed_at": "2024-09-13T23:30:13.828937Z"}], "thread_id": "Thread-4", "execution_time": 0.012714385986328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_bitcoin_amount.00b3640521", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(bitcoin_amount >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_bitcoin_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.817776Z", "completed_at": "2024-09-13T23:30:13.826400Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.829264Z", "completed_at": "2024-09-13T23:30:13.829267Z"}], "thread_id": "Thread-2", "execution_time": 0.013247013092041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_apple_pay_payment_fees.8d0aed3e47", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(apple_pay_payment_fees >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_apple_pay_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.823120Z", "completed_at": "2024-09-13T23:30:13.829562Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.830211Z", "completed_at": "2024-09-13T23:30:13.830213Z"}], "thread_id": "Thread-3", "execution_time": 0.012687921524047852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_bitcoin_payment_fees.2680568c3c", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(bitcoin_payment_fees >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_bitcoin_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.826603Z", "completed_at": "2024-09-13T23:30:13.830710Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.831465Z", "completed_at": "2024-09-13T23:30:13.831468Z"}], "thread_id": "Thread-1", "execution_time": 0.00859379768371582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_country_id.63b418f2a9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id <= 22\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.834642Z", "completed_at": "2024-09-13T23:30:13.840388Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.842937Z", "completed_at": "2024-09-13T23:30:13.842940Z"}], "thread_id": "Thread-2", "execution_time": 0.012101888656616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_order_status.35a4bb0b99", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        order_status as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n    group by order_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','failed'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.832149Z", "completed_at": "2024-09-13T23:30:13.842755Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.843454Z", "completed_at": "2024-09-13T23:30:13.843457Z"}], "thread_id": "Thread-4", "execution_time": 0.012986183166503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_order_date.01981f60c8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not order_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.837295Z", "completed_at": "2024-09-13T23:30:13.843282Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.843987Z", "completed_at": "2024-09-13T23:30:13.843989Z"}], "thread_id": "Thread-3", "execution_time": 0.012074947357177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_stripe_amount.d0d4124728", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(stripe_amount >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_stripe_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.840563Z", "completed_at": "2024-09-13T23:30:13.844295Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.845106Z", "completed_at": "2024-09-13T23:30:13.845108Z"}], "thread_id": "Thread-1", "execution_time": 0.00808405876159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_stripe_payment_fees.09c5a52271", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n\nwhere not(stripe_payment_fees >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_payment_methods_unexpected_stripe_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.846315Z", "completed_at": "2024-09-13T23:30:13.854206Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.856695Z", "completed_at": "2024-09-13T23:30:13.856698Z"}], "thread_id": "Thread-2", "execution_time": 0.01205301284790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_amazon_pay_amount.470294cec0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere amazon_pay_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_amazon_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.848886Z", "completed_at": "2024-09-13T23:30:13.857054Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.857635Z", "completed_at": "2024-09-13T23:30:13.857638Z"}], "thread_id": "Thread-4", "execution_time": 0.012271881103515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_amazon_pay_payment_fees.8ccf82be46", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere amazon_pay_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_amazon_pay_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.851120Z", "completed_at": "2024-09-13T23:30:13.857468Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.858162Z", "completed_at": "2024-09-13T23:30:13.858165Z"}], "thread_id": "Thread-3", "execution_time": 0.012452840805053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_apple_pay_amount.35570bd1df", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere apple_pay_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_apple_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.854434Z", "completed_at": "2024-09-13T23:30:13.858456Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.859247Z", "completed_at": "2024-09-13T23:30:13.859250Z"}], "thread_id": "Thread-1", "execution_time": 0.010605096817016602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_apple_pay_payment_fees.ca555fc60d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere apple_pay_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_apple_pay_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.859751Z", "completed_at": "2024-09-13T23:30:13.865722Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.909705Z", "completed_at": "2024-09-13T23:30:13.909711Z"}], "thread_id": "Thread-2", "execution_time": 0.051809072494506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_bitcoin_amount.d7592abe44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere bitcoin_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_bitcoin_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.865910Z", "completed_at": "2024-09-13T23:30:13.912660Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.913267Z", "completed_at": "2024-09-13T23:30:13.913271Z"}], "thread_id": "Thread-3", "execution_time": 0.05136990547180176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_country.eb06966f71", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.862968Z", "completed_at": "2024-09-13T23:30:13.913088Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.913949Z", "completed_at": "2024-09-13T23:30:13.913952Z"}], "thread_id": "Thread-4", "execution_time": 0.05444526672363281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_bitcoin_payment_fees.cf4eee780e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere bitcoin_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_bitcoin_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.910073Z", "completed_at": "2024-09-13T23:30:13.913778Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.916807Z", "completed_at": "2024-09-13T23:30:13.916810Z"}], "thread_id": "Thread-1", "execution_time": 0.05408883094787598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_country_id.b66edb05ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.914470Z", "completed_at": "2024-09-13T23:30:13.918197Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.921468Z", "completed_at": "2024-09-13T23:30:13.921473Z"}], "thread_id": "Thread-2", "execution_time": 0.008642911911010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_nb_payments.7a94409e31", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere nb_payments is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.918736Z", "completed_at": "2024-09-13T23:30:13.926889Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.927319Z", "completed_at": "2024-09-13T23:30:13.927322Z"}], "thread_id": "Thread-3", "execution_time": 0.010025978088378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_order_date.21aeb8313c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.924669Z", "completed_at": "2024-09-13T23:30:13.928063Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.930805Z", "completed_at": "2024-09-13T23:30:13.930808Z"}], "thread_id": "Thread-1", "execution_time": 0.012476205825805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_order_status.c48b155ca0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere order_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.921951Z", "completed_at": "2024-09-13T23:30:13.928227Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.931108Z", "completed_at": "2024-09-13T23:30:13.931112Z"}], "thread_id": "Thread-4", "execution_time": 0.013360738754272461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_order_id.ddee004099", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.928395Z", "completed_at": "2024-09-13T23:30:13.932066Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.935509Z", "completed_at": "2024-09-13T23:30:13.935512Z"}], "thread_id": "Thread-2", "execution_time": 0.008472919464111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_payment_methods.b1f93b15ca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere payment_methods is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_payment_methods`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.932230Z", "completed_at": "2024-09-13T23:30:13.940972Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.941411Z", "completed_at": "2024-09-13T23:30:13.941414Z"}], "thread_id": "Thread-3", "execution_time": 0.010849952697753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_stripe_amount.3e4367e046", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere stripe_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_stripe_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.938689Z", "completed_at": "2024-09-13T23:30:13.944400Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.944973Z", "completed_at": "2024-09-13T23:30:13.944976Z"}], "thread_id": "Thread-4", "execution_time": 0.009711742401123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_total_gross_revenue.afe445581b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere total_gross_revenue is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.936406Z", "completed_at": "2024-09-13T23:30:13.944576Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.945292Z", "completed_at": "2024-09-13T23:30:13.945295Z"}], "thread_id": "Thread-1", "execution_time": 0.010230779647827148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_stripe_payment_fees.78f2cdbed9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere stripe_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_stripe_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.942167Z", "completed_at": "2024-09-13T23:30:13.945772Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.949730Z", "completed_at": "2024-09-13T23:30:13.949734Z"}], "thread_id": "Thread-2", "execution_time": 0.008630037307739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_total_payment_fees.7bda1ae723", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\nwhere total_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_payment_methods_total_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.946377Z", "completed_at": "2024-09-13T23:30:13.951035Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.956757Z", "completed_at": "2024-09-13T23:30:13.956761Z"}], "thread_id": "Thread-3", "execution_time": 0.012053966522216797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_fct_payment_methods_order_id__order_id__ref_int_payments_.05d9a1bed3", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`relationships_fct_payment_meth_0683abd124324eb777cc740e1f6a852b`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.953594Z", "completed_at": "2024-09-13T23:30:13.961102Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.961650Z", "completed_at": "2024-09-13T23:30:13.961653Z"}], "thread_id": "Thread-1", "execution_time": 0.011449098587036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.dim_products", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH\n  dim_products AS (\n    SELECT DATE(order_date) AS date\n          ,country_id\n          ,country\n          ,product_category\n          ,product_name\n          ,COUNT(order_id) AS nb_order_id\n          ,COUNT(shipping_id) AS nb_shipping_id\n          ,COUNT(return_id) AS nb_return_id\n          ,ROUND(AVG(fulfillment_days), 2) AS avg_fulfillment_days\n          ,ROUND(AVG(nps_score), 2) AS avg_nps_score\n          ,ROUND(SUM(gross_revenue), 2) AS total_gross_revenue\n          ,ROUND(SUM(tax_amount), 2) AS total_tax_amount\n          ,ROUND(SUM(net_revenue_before_tax), 2) AS total_net_revenue_before_tax\n          ,ROUND(SUM(net_revenue_after_tax), 2) AS total_net_revenue_after_tax\n          ,ROUND(SUM(cogs), 2) AS total_cogs\n          ,ROUND(SUM(returned_cogs), 2) AS total_returned_cogs\n          ,ROUND(SUM(refund_amount), 2) AS total_refund_amount\n          ,ROUND(SUM(payment_fee), 2) AS total_payment_fee\n          ,ROUND(SUM(cm), 2) AS total_cm\n          FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n      GROUP BY date\n              ,country_id\n              ,country\n              ,product_category\n              ,product_name)\n\n  SELECT *\n    FROM dim_products", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.951405Z", "completed_at": "2024-09-13T23:30:13.961291Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.961953Z", "completed_at": "2024-09-13T23:30:13.961956Z"}], "thread_id": "Thread-4", "execution_time": 0.011951208114624023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_fct_payment_methods_order_id.acc4722fd2", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_payment_methods`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_fct_payment_methods_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.957528Z", "completed_at": "2024-09-13T23:30:13.962250Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.965700Z", "completed_at": "2024-09-13T23:30:13.965703Z"}], "thread_id": "Thread-2", "execution_time": 0.014533758163452148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.fct_orders_timeseries_sma", "compiled": true, "compiled_code": "\n\n\n\nWITH\n  fct_orders_timeseries_sma AS (\n    SELECT DATE(order_date) AS date\n          ,SUM(net_revenue_after_tax) AS sales\n      FROM `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n      GROUP BY date)\n\n\n  ,simple_moving_averages AS (\n    SELECT date\n          ,sales\n          ,AVG(sales) OVER (ORDER BY date \n             ROWS BETWEEN 14 PRECEDING \n                  AND CURRENT ROW) AS sales_sma_14\n          ,AVG(sales) OVER (ORDER BY date \n             ROWS BETWEEN 30 PRECEDING \n                  AND CURRENT ROW) AS sales_sma_30\n          ,AVG(sales) OVER (ORDER BY date \n             ROWS BETWEEN 60 PRECEDING \n                  AND CURRENT ROW) AS sales_sma_60\n          ,AVG(sales) OVER (ORDER BY date \n             ROWS BETWEEN 120 PRECEDING \n                  AND CURRENT ROW) AS sales_sma_120\n          ,AVG(sales) OVER (ORDER BY date \n             ROWS BETWEEN 250 PRECEDING \n                  AND CURRENT ROW) AS sales_sma_250\n      FROM fct_orders_timeseries_sma)\n\n\n  ,standard_deviations AS (\n    SELECT *\n           ,STDDEV(sales) OVER (ORDER BY date \n              ROWS BETWEEN 14 PRECEDING \n                   AND CURRENT ROW) AS sales_stddev_14\n           ,STDDEV(sales) OVER (ORDER BY date \n              ROWS BETWEEN 30 PRECEDING \n                   AND CURRENT ROW) AS sales_stddev_30\n           ,STDDEV(sales) OVER (ORDER BY date \n              ROWS BETWEEN 60 PRECEDING \n                   AND CURRENT ROW) AS sales_stddev_60\n           ,STDDEV(sales) OVER (ORDER BY date \n              ROWS BETWEEN 120 PRECEDING \n                   AND CURRENT ROW) AS sales_stddev_120\n           ,STDDEV(sales) OVER (ORDER BY date \n              ROWS BETWEEN 250 PRECEDING \n                   AND CURRENT ROW) AS sales_stddev_250\n      FROM simple_moving_averages)\n\n\n  ,bollinger_bands AS (\n    SELECT *\n           ,sales_sma_14 \n            + (2 * sales_stddev_14) AS sales_sma_upper_14\n           ,sales_sma_14 \n            - (2 * sales_stddev_14) AS sales_sma_lower_14\n           ,sales_sma_30 \n            + (2 * sales_stddev_30) AS sales_sma_upper_30\n           ,sales_sma_30 \n            - (2 * sales_stddev_30) AS sales_sma_lower_30\n           ,sales_sma_60 \n            + (2 * sales_stddev_60) AS sales_sma_upper_60\n           ,sales_sma_60 \n            - (2 * sales_stddev_60) AS sales_sma_lower_60\n           ,sales_sma_120 \n            + (2 * sales_stddev_120) AS sales_sma_upper_120\n           ,sales_sma_120 \n            - (2 * sales_stddev_120) AS sales_sma_lower_120\n           ,sales_sma_250 \n            + (2 * sales_stddev_250) AS sales_sma_upper_250\n           ,sales_sma_250 \n            - (2 * sales_stddev_250) AS sales_sma_lower_250\n      FROM standard_deviations)\n\n  SELECT *\n    FROM bollinger_bands\n\n# testing slim ci\n# testing\n# testing again", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.962417Z", "completed_at": "2024-09-13T23:30:13.967516Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.972349Z", "completed_at": "2024-09-13T23:30:13.972352Z"}], "thread_id": "Thread-3", "execution_time": 0.011541366577148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_accepted_range_fct_orders_nps_score__10__0.7918938823", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_score >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_score <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_accepted_range_fct_orders_nps_score__10__0`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.967883Z", "completed_at": "2024-09-13T23:30:13.976382Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.976912Z", "completed_at": "2024-09-13T23:30:13.976915Z"}], "thread_id": "Thread-1", "execution_time": 0.010920047760009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_cm.8fc3956ee5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct cm) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct cm) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.970126Z", "completed_at": "2024-09-13T23:30:13.976552Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.977274Z", "completed_at": "2024-09-13T23:30:13.977277Z"}], "thread_id": "Thread-4", "execution_time": 0.011088848114013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_cogs.68c7e7b990", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct cogs) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct cogs) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.973128Z", "completed_at": "2024-09-13T23:30:13.977569Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.980415Z", "completed_at": "2024-09-13T23:30:13.980418Z"}], "thread_id": "Thread-2", "execution_time": 0.01277303695678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_country.0a27dd05bc", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct country) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.977741Z", "completed_at": "2024-09-13T23:30:13.981561Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.984339Z", "completed_at": "2024-09-13T23:30:13.984341Z"}], "thread_id": "Thread-3", "execution_time": 0.0082550048828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_country_id.7ac8b5f6b7", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct country_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.982112Z", "completed_at": "2024-09-13T23:30:13.990332Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.990904Z", "completed_at": "2024-09-13T23:30:13.990907Z"}], "thread_id": "Thread-1", "execution_time": 0.010202884674072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_customer_id.1e994fbbd6", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct customer_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.984644Z", "completed_at": "2024-09-13T23:30:13.990538Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.991207Z", "completed_at": "2024-09-13T23:30:13.991210Z"}], "thread_id": "Thread-4", "execution_time": 0.010303020477294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_customer_order_nb.b5fec9bc97", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_order_nb) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct customer_order_nb) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_customer_order_nb`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.987871Z", "completed_at": "2024-09-13T23:30:13.991511Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.994364Z", "completed_at": "2024-09-13T23:30:13.994367Z"}], "thread_id": "Thread-2", "execution_time": 0.012502908706665039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_customer_type.5b997d97e0", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_type) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct customer_type) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_customer_type`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.991686Z", "completed_at": "2024-09-13T23:30:13.995343Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:13.996177Z", "completed_at": "2024-09-13T23:30:13.996180Z"}], "thread_id": "Thread-3", "execution_time": 0.006093025207519531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_first_name.0e5bb2183e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct first_name) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct first_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.996493Z", "completed_at": "2024-09-13T23:30:14.005404Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.008052Z", "completed_at": "2024-09-13T23:30:14.008056Z"}], "thread_id": "Thread-1", "execution_time": 0.013395071029663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_fulfillment_days.6ba87ed360", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct fulfillment_days) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct fulfillment_days) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_fulfillment_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:13.999091Z", "completed_at": "2024-09-13T23:30:14.005586Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.008548Z", "completed_at": "2024-09-13T23:30:14.008551Z"}], "thread_id": "Thread-4", "execution_time": 0.01367807388305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_gross_revenue.be21114f63", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct gross_revenue) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct gross_revenue) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.002599Z", "completed_at": "2024-09-13T23:30:14.008378Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.009121Z", "completed_at": "2024-09-13T23:30:14.009125Z"}], "thread_id": "Thread-2", "execution_time": 0.013283729553222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_is_nps.ec1b06649e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct is_nps) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct is_nps) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_is_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.005755Z", "completed_at": "2024-09-13T23:30:14.009890Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.010685Z", "completed_at": "2024-09-13T23:30:14.010689Z"}], "thread_id": "Thread-3", "execution_time": 0.005774259567260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_last_name.1db1f3d23b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct last_name) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct last_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.011360Z", "completed_at": "2024-09-13T23:30:14.019556Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.019965Z", "completed_at": "2024-09-13T23:30:14.019968Z"}], "thread_id": "Thread-1", "execution_time": 0.010311126708984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_nb_payments.bcd85f6c8a", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nb_payments) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct nb_payments) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.014005Z", "completed_at": "2024-09-13T23:30:14.020277Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.023217Z", "completed_at": "2024-09-13T23:30:14.023220Z"}], "thread_id": "Thread-4", "execution_time": 0.012969970703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_net_revenue_after_tax.d5134dd3ec", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct net_revenue_after_tax) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct net_revenue_after_tax) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.017255Z", "completed_at": "2024-09-13T23:30:14.023046Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.023749Z", "completed_at": "2024-09-13T23:30:14.023752Z"}], "thread_id": "Thread-2", "execution_time": 0.012799978256225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_net_revenue_before_tax.1c691828cc", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct net_revenue_before_tax) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct net_revenue_before_tax) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.020456Z", "completed_at": "2024-09-13T23:30:14.024455Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.027416Z", "completed_at": "2024-09-13T23:30:14.027419Z"}], "thread_id": "Thread-3", "execution_time": 0.010421037673950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_nps_date.d14f37bd0e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nps_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct nps_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.025037Z", "completed_at": "2024-09-13T23:30:14.031441Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.034182Z", "completed_at": "2024-09-13T23:30:14.034186Z"}], "thread_id": "Thread-1", "execution_time": 0.010673046112060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_nps_score.4801b7fe57", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nps_score) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct nps_score) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.028519Z", "completed_at": "2024-09-13T23:30:14.034723Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.037346Z", "completed_at": "2024-09-13T23:30:14.037348Z"}], "thread_id": "Thread-4", "execution_time": 0.012549877166748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_order_date.369ca05d4f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct order_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.031813Z", "completed_at": "2024-09-13T23:30:14.037650Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.038294Z", "completed_at": "2024-09-13T23:30:14.038296Z"}], "thread_id": "Thread-2", "execution_time": 0.010634899139404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_order_status.0b6286ed95", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_status) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct order_status) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.035125Z", "completed_at": "2024-09-13T23:30:14.038767Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.042161Z", "completed_at": "2024-09-13T23:30:14.042165Z"}], "thread_id": "Thread-3", "execution_time": 0.010595083236694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_payment_fee.51eecf2763", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_fee) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct payment_fee) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.039360Z", "completed_at": "2024-09-13T23:30:14.045523Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.048161Z", "completed_at": "2024-09-13T23:30:14.048164Z"}], "thread_id": "Thread-1", "execution_time": 0.010376214981079102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_payment_method.e6ed76876e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_method) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct payment_method) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.043078Z", "completed_at": "2024-09-13T23:30:14.048660Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.051371Z", "completed_at": "2024-09-13T23:30:14.051374Z"}], "thread_id": "Thread-4", "execution_time": 0.012475728988647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_product_category.112df2d465", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_category) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct product_category) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.045911Z", "completed_at": "2024-09-13T23:30:14.051674Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.052277Z", "completed_at": "2024-09-13T23:30:14.052280Z"}], "thread_id": "Thread-2", "execution_time": 0.009678125381469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_product_category_id.92b52ba0ee", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_category_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct product_category_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.049089Z", "completed_at": "2024-09-13T23:30:14.052829Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.056302Z", "completed_at": "2024-09-13T23:30:14.056305Z"}], "thread_id": "Thread-3", "execution_time": 0.01065683364868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_product_id.f591e3ef76", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct product_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.053419Z", "completed_at": "2024-09-13T23:30:14.059640Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.062287Z", "completed_at": "2024-09-13T23:30:14.062290Z"}], "thread_id": "Thread-1", "execution_time": 0.010486125946044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_product_name.04af613d46", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_name) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct product_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.057229Z", "completed_at": "2024-09-13T23:30:14.062798Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.065421Z", "completed_at": "2024-09-13T23:30:14.065424Z"}], "thread_id": "Thread-4", "execution_time": 0.01246023178100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_refund_amount.3a865afd77", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct refund_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct refund_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.060034Z", "completed_at": "2024-09-13T23:30:14.065729Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.066339Z", "completed_at": "2024-09-13T23:30:14.066342Z"}], "thread_id": "Thread-2", "execution_time": 0.009606122970581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_return_date.c4a12821ab", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct return_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.063204Z", "completed_at": "2024-09-13T23:30:14.066840Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.070302Z", "completed_at": "2024-09-13T23:30:14.070305Z"}], "thread_id": "Thread-3", "execution_time": 0.010540008544921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_return_id.f0a57fcf42", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct return_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.067425Z", "completed_at": "2024-09-13T23:30:14.073783Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.076379Z", "completed_at": "2024-09-13T23:30:14.076382Z"}], "thread_id": "Thread-1", "execution_time": 0.010528087615966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_return_reason.10f36c5ab1", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_reason) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct return_reason) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.071240Z", "completed_at": "2024-09-13T23:30:14.076871Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.079552Z", "completed_at": "2024-09-13T23:30:14.079555Z"}], "thread_id": "Thread-4", "execution_time": 0.012580156326293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_returned_cogs.ce6d78c725", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct returned_cogs) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct returned_cogs) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.074187Z", "completed_at": "2024-09-13T23:30:14.079857Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.080469Z", "completed_at": "2024-09-13T23:30:14.080472Z"}], "thread_id": "Thread-2", "execution_time": 0.009727001190185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_shipping_date.e1289987ed", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct shipping_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_shipping_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.077300Z", "completed_at": "2024-09-13T23:30:14.080963Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.084452Z", "completed_at": "2024-09-13T23:30:14.084456Z"}], "thread_id": "Thread-3", "execution_time": 0.010540008544921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_shipping_id.1f5b4e61fa", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct shipping_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.081529Z", "completed_at": "2024-09-13T23:30:14.087775Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.090451Z", "completed_at": "2024-09-13T23:30:14.090455Z"}], "thread_id": "Thread-1", "execution_time": 0.010461807250976562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_tax_amount.9d065212d2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct tax_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct tax_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.085391Z", "completed_at": "2024-09-13T23:30:14.090940Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.094151Z", "completed_at": "2024-09-13T23:30:14.094154Z"}], "thread_id": "Thread-4", "execution_time": 0.013067960739135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_tax_rate.c8727ca0c5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct tax_rate) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\n  \n\nhaving count(distinct tax_rate) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.088189Z", "completed_at": "2024-09-13T23:30:14.094663Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.095268Z", "completed_at": "2024-09-13T23:30:14.095271Z"}], "thread_id": "Thread-2", "execution_time": 0.0103759765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_assert_positive_gross_revenue.d0522b6f57", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(gross_revenue > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_assert_positive_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.091356Z", "completed_at": "2024-09-13T23:30:14.095769Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.098649Z", "completed_at": "2024-09-13T23:30:14.098652Z"}], "thread_id": "Thread-3", "execution_time": 0.010740995407104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_assert_positive_payment_fee.3fc91c0b12", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(payment_fee > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_assert_positive_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.095939Z", "completed_at": "2024-09-13T23:30:14.101857Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.105627Z", "completed_at": "2024-09-13T23:30:14.105632Z"}], "thread_id": "Thread-1", "execution_time": 0.011220932006835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_assert_positive_shipping_amount.97b89a1e69", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(shipping_amount > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_assert_positive_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.099189Z", "completed_at": "2024-09-13T23:30:14.105951Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.106546Z", "completed_at": "2024-09-13T23:30:14.106548Z"}], "thread_id": "Thread-4", "execution_time": 0.011025190353393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_assert_positive_tax_rate.3bb0614ec6", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(tax_rate > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_assert_positive_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.102287Z", "completed_at": "2024-09-13T23:30:14.110276Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.110890Z", "completed_at": "2024-09-13T23:30:14.110893Z"}], "thread_id": "Thread-2", "execution_time": 0.01195216178894043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unequal_agg_cogs.39983bc63a", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(cogs) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(inbound_shipping_cost) + sum(product_cost) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unequal_agg_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.106860Z", "completed_at": "2024-09-13T23:30:14.111578Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.114905Z", "completed_at": "2024-09-13T23:30:14.114908Z"}], "thread_id": "Thread-3", "execution_time": 0.01288294792175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unequal_agg_gross_revenue.91ab358fda", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_payments`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unequal_agg_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.111959Z", "completed_at": "2024-09-13T23:30:14.118477Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.121106Z", "completed_at": "2024-09-13T23:30:14.121109Z"}], "thread_id": "Thread-1", "execution_time": 0.01070713996887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unequal_agg_shipping_amount.f398ff09f4", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(shipping_amount) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(shipping_amount) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unequal_agg_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.115454Z", "completed_at": "2024-09-13T23:30:14.121422Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.122032Z", "completed_at": "2024-09-13T23:30:14.122035Z"}], "thread_id": "Thread-4", "execution_time": 0.010689973831176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_cm.8fd4691b5f", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(cm < gross_revenue)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.118869Z", "completed_at": "2024-09-13T23:30:14.125255Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.125879Z", "completed_at": "2024-09-13T23:30:14.125882Z"}], "thread_id": "Thread-2", "execution_time": 0.010699033737182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_cogs.001142e58f", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(cogs > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.122333Z", "completed_at": "2024-09-13T23:30:14.129495Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.130064Z", "completed_at": "2024-09-13T23:30:14.130066Z"}], "thread_id": "Thread-3", "execution_time": 0.011446952819824219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_country_id.f51b3be77c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id <= 22\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.126786Z", "completed_at": "2024-09-13T23:30:14.133280Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.136424Z", "completed_at": "2024-09-13T23:30:14.136427Z"}], "thread_id": "Thread-1", "execution_time": 0.011036872863769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_customer_type.69983a7d22", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        customer_type as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    group by customer_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Returning','New'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_customer_type`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.130364Z", "completed_at": "2024-09-13T23:30:14.136724Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.137333Z", "completed_at": "2024-09-13T23:30:14.137335Z"}], "thread_id": "Thread-4", "execution_time": 0.011007070541381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_fulfillment_days.224a79c537", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(fulfillment_days = DATE_DIFF(shipping_date, order_date, DAY))\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_fulfillment_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.133491Z", "completed_at": "2024-09-13T23:30:14.139907Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.140513Z", "completed_at": "2024-09-13T23:30:14.140516Z"}], "thread_id": "Thread-2", "execution_time": 0.010719060897827148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_is_nps_bool.e8cc54079b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_nps as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    group by is_nps\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_is_nps_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.137636Z", "completed_at": "2024-09-13T23:30:14.141197Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.143926Z", "completed_at": "2024-09-13T23:30:14.143929Z"}], "thread_id": "Thread-3", "execution_time": 0.007748126983642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_is_returned_bool.3e7d7bb86e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_returned as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    group by is_returned\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_is_returned_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.141582Z", "completed_at": "2024-09-13T23:30:14.147071Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.150530Z", "completed_at": "2024-09-13T23:30:14.150533Z"}], "thread_id": "Thread-1", "execution_time": 0.010502099990844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_is_shipped_bool.281259375c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_shipped as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    group by is_shipped\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_is_shipped_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.144438Z", "completed_at": "2024-09-13T23:30:14.150834Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.151460Z", "completed_at": "2024-09-13T23:30:14.151463Z"}], "thread_id": "Thread-4", "execution_time": 0.010499000549316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_nb_payments.fb52011391", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(nb_payments > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.147481Z", "completed_at": "2024-09-13T23:30:14.154516Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.155121Z", "completed_at": "2024-09-13T23:30:14.155124Z"}], "thread_id": "Thread-2", "execution_time": 0.010941028594970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_net_revenue_after_tax.cf4c030292", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(net_revenue_after_tax = SAFE_DIVIDE(SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), (1 + SAFE_DIVIDE(tax_rate, 100))))\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.151770Z", "completed_at": "2024-09-13T23:30:14.155611Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.158468Z", "completed_at": "2024-09-13T23:30:14.158471Z"}], "thread_id": "Thread-3", "execution_time": 0.01123499870300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_net_revenue_before_tax.35c5c243a5", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(net_revenue_before_tax = SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)))\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.155787Z", "completed_at": "2024-09-13T23:30:14.161432Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.162029Z", "completed_at": "2024-09-13T23:30:14.162032Z"}], "thread_id": "Thread-1", "execution_time": 0.0077610015869140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_nps_date.18b8cb456d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.158997Z", "completed_at": "2024-09-13T23:30:14.165227Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.165837Z", "completed_at": "2024-09-13T23:30:14.165840Z"}], "thread_id": "Thread-4", "execution_time": 0.010455846786499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_order_date.4a7d73acb5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not order_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.162339Z", "completed_at": "2024-09-13T23:30:14.168554Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.169149Z", "completed_at": "2024-09-13T23:30:14.169152Z"}], "thread_id": "Thread-2", "execution_time": 0.010397195816040039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_order_status.a694a31b07", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        order_status as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    group by order_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','failed'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.166145Z", "completed_at": "2024-09-13T23:30:14.171898Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.172501Z", "completed_at": "2024-09-13T23:30:14.172505Z"}], "thread_id": "Thread-3", "execution_time": 0.010721921920776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_payment_method.143499598b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'amazon_pay','stripe','apple_pay','bitcoin'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.169654Z", "completed_at": "2024-09-13T23:30:14.175684Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.178892Z", "completed_at": "2024-09-13T23:30:14.178896Z"}], "thread_id": "Thread-1", "execution_time": 0.010579824447631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_product_category.796f7162be", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_category as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    group by product_category\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Design Templates','Fonts & Typography','Graphic Assets','Stock Photography','Video & Animation'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.173001Z", "completed_at": "2024-09-13T23:30:14.179193Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.179781Z", "completed_at": "2024-09-13T23:30:14.179784Z"}], "thread_id": "Thread-4", "execution_time": 0.010370016098022461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_product_category_id.0e1442b69c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.176084Z", "completed_at": "2024-09-13T23:30:14.182714Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.183345Z", "completed_at": "2024-09-13T23:30:14.183348Z"}], "thread_id": "Thread-2", "execution_time": 0.01058197021484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_product_id.03e8fa5b21", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.180112Z", "completed_at": "2024-09-13T23:30:14.184252Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.187033Z", "completed_at": "2024-09-13T23:30:14.187036Z"}], "thread_id": "Thread-3", "execution_time": 0.011191129684448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_refund_amount.79c3344f36", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom (select * from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders` where refund_amount > 0) dbt_subquery\n\nwhere not(refund_amount = (gross_revenue - shipping_amount))\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.184421Z", "completed_at": "2024-09-13T23:30:14.190501Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.193464Z", "completed_at": "2024-09-13T23:30:14.193468Z"}], "thread_id": "Thread-1", "execution_time": 0.010618925094604492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_return_date.faa60b5a52", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not return_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.187360Z", "completed_at": "2024-09-13T23:30:14.193773Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.194373Z", "completed_at": "2024-09-13T23:30:14.194376Z"}], "thread_id": "Thread-4", "execution_time": 0.010576963424682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_return_reason.bf2d1cade2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        return_reason as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    group by return_reason\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Not as Described','Compatibility Issues','Quality Concerns','Technical Difficulties'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.190696Z", "completed_at": "2024-09-13T23:30:14.196907Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.197540Z", "completed_at": "2024-09-13T23:30:14.197543Z"}], "thread_id": "Thread-2", "execution_time": 0.01076197624206543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_returned_cogs.72a465536d", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom (select * from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders` where returned_cogs > 0) dbt_subquery\n\nwhere not(returned_cogs = cogs)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.194684Z", "completed_at": "2024-09-13T23:30:14.198214Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.201232Z", "completed_at": "2024-09-13T23:30:14.201235Z"}], "thread_id": "Thread-3", "execution_time": 0.008018016815185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_shipping_date.2e6bb5ce4f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not shipping_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_shipping_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.198593Z", "completed_at": "2024-09-13T23:30:14.204945Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.207605Z", "completed_at": "2024-09-13T23:30:14.207609Z"}], "thread_id": "Thread-1", "execution_time": 0.010560989379882812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_tax_amount.8d62b11a90", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n\nwhere not(tax_amount = SAFE_MULTIPLY(SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), SAFE_DIVIDE(tax_rate, 100)))\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.201748Z", "completed_at": "2024-09-13T23:30:14.208093Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.210719Z", "completed_at": "2024-09-13T23:30:14.210723Z"}], "thread_id": "Thread-4", "execution_time": 0.012743949890136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_tax_rate.888f839f9c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_unexpected_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.205340Z", "completed_at": "2024-09-13T23:30:14.211226Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.211833Z", "completed_at": "2024-09-13T23:30:14.211836Z"}], "thread_id": "Thread-2", "execution_time": 0.01035308837890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_cm.e44709b283", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere cm is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.208500Z", "completed_at": "2024-09-13T23:30:14.212126Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.214911Z", "completed_at": "2024-09-13T23:30:14.214914Z"}], "thread_id": "Thread-3", "execution_time": 0.009818077087402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_cogs.0b19f968ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere cogs is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.212481Z", "completed_at": "2024-09-13T23:30:14.219091Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.221649Z", "completed_at": "2024-09-13T23:30:14.221652Z"}], "thread_id": "Thread-1", "execution_time": 0.010658979415893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_country.0edcc91e35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.215838Z", "completed_at": "2024-09-13T23:30:14.221946Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.224655Z", "completed_at": "2024-09-13T23:30:14.224658Z"}], "thread_id": "Thread-4", "execution_time": 0.012416839599609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_country_id.dd87008526", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.219279Z", "completed_at": "2024-09-13T23:30:14.224954Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.225550Z", "completed_at": "2024-09-13T23:30:14.225553Z"}], "thread_id": "Thread-2", "execution_time": 0.010166168212890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_customer_id.16fe324f7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.222152Z", "completed_at": "2024-09-13T23:30:14.226043Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.228831Z", "completed_at": "2024-09-13T23:30:14.228835Z"}], "thread_id": "Thread-3", "execution_time": 0.009983062744140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_customer_order_nb.79c7350630", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere customer_order_nb is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_customer_order_nb`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.226631Z", "completed_at": "2024-09-13T23:30:14.233011Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.235577Z", "completed_at": "2024-09-13T23:30:14.235580Z"}], "thread_id": "Thread-1", "execution_time": 0.010462045669555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_customer_type.5d273b0b2b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere customer_type is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_customer_type`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.229757Z", "completed_at": "2024-09-13T23:30:14.235884Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.238505Z", "completed_at": "2024-09-13T23:30:14.238508Z"}], "thread_id": "Thread-4", "execution_time": 0.012341022491455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_first_name.a89a0764e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere first_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.233205Z", "completed_at": "2024-09-13T23:30:14.238829Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.239507Z", "completed_at": "2024-09-13T23:30:14.239510Z"}], "thread_id": "Thread-2", "execution_time": 0.010242938995361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_gross_revenue.e9774c74d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere gross_revenue is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.236081Z", "completed_at": "2024-09-13T23:30:14.239815Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.240575Z", "completed_at": "2024-09-13T23:30:14.240578Z"}], "thread_id": "Thread-3", "execution_time": 0.007801055908203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_last_name.1e39458222", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere last_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.240871Z", "completed_at": "2024-09-13T23:30:14.246876Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.249443Z", "completed_at": "2024-09-13T23:30:14.249446Z"}], "thread_id": "Thread-1", "execution_time": 0.010455131530761719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_nb_payments.3cd88a1cae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere nb_payments is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.244212Z", "completed_at": "2024-09-13T23:30:14.249746Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.252415Z", "completed_at": "2024-09-13T23:30:14.252418Z"}], "thread_id": "Thread-4", "execution_time": 0.012292146682739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_net_revenue_after_tax.e01b375b4e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere net_revenue_after_tax is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.247058Z", "completed_at": "2024-09-13T23:30:14.252727Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.253359Z", "completed_at": "2024-09-13T23:30:14.253361Z"}], "thread_id": "Thread-2", "execution_time": 0.009632110595703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_net_revenue_before_tax.bb8578a9c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere net_revenue_before_tax is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.249952Z", "completed_at": "2024-09-13T23:30:14.253653Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.254376Z", "completed_at": "2024-09-13T23:30:14.254379Z"}], "thread_id": "Thread-3", "execution_time": 0.007765054702758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_order_date.84f0a76362", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.254668Z", "completed_at": "2024-09-13T23:30:14.305366Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.305941Z", "completed_at": "2024-09-13T23:30:14.305944Z"}], "thread_id": "Thread-1", "execution_time": 0.053056955337524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_order_id.4e687af8d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.300273Z", "completed_at": "2024-09-13T23:30:14.305756Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.308672Z", "completed_at": "2024-09-13T23:30:14.308676Z"}], "thread_id": "Thread-4", "execution_time": 0.05474281311035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_order_status.b83f07f66b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere order_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.303185Z", "completed_at": "2024-09-13T23:30:14.308995Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.309645Z", "completed_at": "2024-09-13T23:30:14.309648Z"}], "thread_id": "Thread-2", "execution_time": 0.009910821914672852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_payment_fee.cb62252086", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere payment_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.306269Z", "completed_at": "2024-09-13T23:30:14.310184Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.310941Z", "completed_at": "2024-09-13T23:30:14.310943Z"}], "thread_id": "Thread-3", "execution_time": 0.008058786392211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_payment_method.552e8460b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere payment_method is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.314723Z", "completed_at": "2024-09-13T23:30:14.319899Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.322525Z", "completed_at": "2024-09-13T23:30:14.322529Z"}], "thread_id": "Thread-4", "execution_time": 0.012223243713378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_product_category_id.da74e704f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere product_category_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.311595Z", "completed_at": "2024-09-13T23:30:14.320084Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.322844Z", "completed_at": "2024-09-13T23:30:14.322847Z"}], "thread_id": "Thread-1", "execution_time": 0.012904882431030273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_product_category.1766c71bb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere product_category is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.317469Z", "completed_at": "2024-09-13T23:30:14.323143Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.323789Z", "completed_at": "2024-09-13T23:30:14.323792Z"}], "thread_id": "Thread-2", "execution_time": 0.0124359130859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_product_id.8e73ef4e24", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere product_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.320261Z", "completed_at": "2024-09-13T23:30:14.324291Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.325038Z", "completed_at": "2024-09-13T23:30:14.325041Z"}], "thread_id": "Thread-3", "execution_time": 0.007864713668823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_product_name.a9a0af8e44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere product_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.325773Z", "completed_at": "2024-09-13T23:30:14.336300Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.336678Z", "completed_at": "2024-09-13T23:30:14.336681Z"}], "thread_id": "Thread-4", "execution_time": 0.012624025344848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_refund_amount.f6e3861bf0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere refund_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.328847Z", "completed_at": "2024-09-13T23:30:14.336488Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.337008Z", "completed_at": "2024-09-13T23:30:14.337011Z"}], "thread_id": "Thread-1", "execution_time": 0.012584924697875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_returned_cogs.5259a715e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere returned_cogs is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.331567Z", "completed_at": "2024-09-13T23:30:14.337309Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.338086Z", "completed_at": "2024-09-13T23:30:14.338089Z"}], "thread_id": "Thread-2", "execution_time": 0.012553930282592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_tax_amount.405019f249", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere tax_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.334067Z", "completed_at": "2024-09-13T23:30:14.337472Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.338389Z", "completed_at": "2024-09-13T23:30:14.338392Z"}], "thread_id": "Thread-3", "execution_time": 0.007102012634277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_tax_rate.83abb81011", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\nwhere tax_rate is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.343480Z", "completed_at": "2024-09-13T23:30:14.351038Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.351429Z", "completed_at": "2024-09-13T23:30:14.351432Z"}], "thread_id": "Thread-1", "execution_time": 0.012579202651977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_fct_orders_order_id.523ddb6ce5", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_fct_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.340967Z", "completed_at": "2024-09-13T23:30:14.351210Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.351738Z", "completed_at": "2024-09-13T23:30:14.351741Z"}], "thread_id": "Thread-4", "execution_time": 0.013091087341308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_fct_orders_order_id__order_id__ref_int_orders_.5a03fd2117", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`int_orders`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`relationships_fct_orders_order_id__order_id__ref_int_orders_`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.346060Z", "completed_at": "2024-09-13T23:30:14.352044Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.352833Z", "completed_at": "2024-09-13T23:30:14.352836Z"}], "thread_id": "Thread-2", "execution_time": 0.01300191879272461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_fct_orders_return_id.87582f9770", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select return_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n  where return_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_fct_orders_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.348224Z", "completed_at": "2024-09-13T23:30:14.352426Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.353327Z", "completed_at": "2024-09-13T23:30:14.353330Z"}], "thread_id": "Thread-3", "execution_time": 0.013304948806762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_fct_orders_shipping_id.b0be835405", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select shipping_id as unique_field\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n  where shipping_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`unique_fct_orders_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.354789Z", "completed_at": "2024-09-13T23:30:14.365175Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.365538Z", "completed_at": "2024-09-13T23:30:14.365541Z"}], "thread_id": "Thread-1", "execution_time": 0.012456893920898438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_avg_fulfillment_days.feb31904d2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct avg_fulfillment_days) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct avg_fulfillment_days) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_avg_fulfillment_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.357219Z", "completed_at": "2024-09-13T23:30:14.365359Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.365876Z", "completed_at": "2024-09-13T23:30:14.365879Z"}], "thread_id": "Thread-4", "execution_time": 0.012300968170166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_avg_nps_score.58fba2347f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct avg_nps_score) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct avg_nps_score) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_avg_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.362204Z", "completed_at": "2024-09-13T23:30:14.366409Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.367156Z", "completed_at": "2024-09-13T23:30:14.367159Z"}], "thread_id": "Thread-3", "execution_time": 0.01018214225769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_country_id.ed74d915c2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct country_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.359970Z", "completed_at": "2024-09-13T23:30:14.366569Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.367459Z", "completed_at": "2024-09-13T23:30:14.367461Z"}], "thread_id": "Thread-2", "execution_time": 0.012904882431030273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_country.3c8ed213c7", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct country) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.368739Z", "completed_at": "2024-09-13T23:30:14.374022Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.379278Z", "completed_at": "2024-09-13T23:30:14.379281Z"}], "thread_id": "Thread-1", "execution_time": 0.01236581802368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_date.f4fc713dc9", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.371399Z", "completed_at": "2024-09-13T23:30:14.379581Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.380031Z", "completed_at": "2024-09-13T23:30:14.380034Z"}], "thread_id": "Thread-4", "execution_time": 0.012336015701293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_nb_order_id.72ef84204a", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nb_order_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct nb_order_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_nb_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.376433Z", "completed_at": "2024-09-13T23:30:14.380595Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.381331Z", "completed_at": "2024-09-13T23:30:14.381334Z"}], "thread_id": "Thread-2", "execution_time": 0.010178089141845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_nb_shipping_id.de0c73bde0", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nb_shipping_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct nb_shipping_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_nb_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.374207Z", "completed_at": "2024-09-13T23:30:14.380976Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.381840Z", "completed_at": "2024-09-13T23:30:14.381843Z"}], "thread_id": "Thread-3", "execution_time": 0.010888814926147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_nb_return_id.6fc6712643", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nb_return_id) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct nb_return_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_nb_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.382146Z", "completed_at": "2024-09-13T23:30:14.387635Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.388209Z", "completed_at": "2024-09-13T23:30:14.388212Z"}], "thread_id": "Thread-1", "execution_time": 0.007876157760620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_product_category.4a89a363ad", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_category) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct product_category) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.385217Z", "completed_at": "2024-09-13T23:30:14.390714Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.394475Z", "completed_at": "2024-09-13T23:30:14.394478Z"}], "thread_id": "Thread-4", "execution_time": 0.012889862060546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_product_name.76f63d55df", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_name) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct product_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.390902Z", "completed_at": "2024-09-13T23:30:14.395330Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.396117Z", "completed_at": "2024-09-13T23:30:14.396120Z"}], "thread_id": "Thread-3", "execution_time": 0.00872492790222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_cogs.ec17a924f7", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_cogs) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_cogs) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_total_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.388519Z", "completed_at": "2024-09-13T23:30:14.395682Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.398828Z", "completed_at": "2024-09-13T23:30:14.398831Z"}], "thread_id": "Thread-2", "execution_time": 0.013859987258911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_cm.30608c74a2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_cm) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_cm) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_total_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.396426Z", "completed_at": "2024-09-13T23:30:14.402633Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.403225Z", "completed_at": "2024-09-13T23:30:14.403228Z"}], "thread_id": "Thread-1", "execution_time": 0.008419990539550781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_gross_revenue.372735f062", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_gross_revenue) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_gross_revenue) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.399788Z", "completed_at": "2024-09-13T23:30:14.406519Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.409292Z", "completed_at": "2024-09-13T23:30:14.409295Z"}], "thread_id": "Thread-4", "execution_time": 0.013442039489746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_net_revenue_after_tax.efb6a5d29f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_net_revenue_after_tax) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_net_revenue_after_tax) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_total_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.403528Z", "completed_at": "2024-09-13T23:30:14.409863Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.410639Z", "completed_at": "2024-09-13T23:30:14.410642Z"}], "thread_id": "Thread-3", "execution_time": 0.008463859558105469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_net_revenue_before_tax.d40cce386b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_net_revenue_before_tax) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_net_revenue_before_tax) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_pro_41f89cc05d67c2834c5b1e3abe254e09`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.406706Z", "completed_at": "2024-09-13T23:30:14.410468Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.413528Z", "completed_at": "2024-09-13T23:30:14.413532Z"}], "thread_id": "Thread-2", "execution_time": 0.011140108108520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_payment_fee.b6c559fc4a", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_payment_fee) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_payment_fee) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_total_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.411147Z", "completed_at": "2024-09-13T23:30:14.417061Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.417626Z", "completed_at": "2024-09-13T23:30:14.417630Z"}], "thread_id": "Thread-1", "execution_time": 0.008009910583496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_refund_amount.438fc2fc1b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_refund_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_refund_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_total_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.414713Z", "completed_at": "2024-09-13T23:30:14.421033Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.423681Z", "completed_at": "2024-09-13T23:30:14.423684Z"}], "thread_id": "Thread-4", "execution_time": 0.012784957885742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_returned_cogs.f6c63eb1d6", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_returned_cogs) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_returned_cogs) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_total_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.418127Z", "completed_at": "2024-09-13T23:30:14.424472Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.425199Z", "completed_at": "2024-09-13T23:30:14.425202Z"}], "thread_id": "Thread-3", "execution_time": 0.010756731033325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_tax_amount.4428565fd6", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_tax_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\n  \n\nhaving count(distinct total_tax_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_dim_products_total_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.421432Z", "completed_at": "2024-09-13T23:30:14.425025Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.427961Z", "completed_at": "2024-09-13T23:30:14.427964Z"}], "thread_id": "Thread-2", "execution_time": 0.010760784149169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_avg_fulfillment_days.089c583b64", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\nwhere not(avg_fulfillment_days > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_assert_positive_avg_fulfillment_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.425500Z", "completed_at": "2024-09-13T23:30:14.431267Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.431855Z", "completed_at": "2024-09-13T23:30:14.431857Z"}], "thread_id": "Thread-1", "execution_time": 0.007887840270996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_avg_nps_score.e3d03c7b27", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\nwhere not(avg_nps_score > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_assert_positive_avg_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.428517Z", "completed_at": "2024-09-13T23:30:14.432154Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.435671Z", "completed_at": "2024-09-13T23:30:14.435675Z"}], "thread_id": "Thread-4", "execution_time": 0.010876893997192383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_cogs.4fcaffbba3", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\nwhere not(total_cogs > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_assert_positive_total_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.432555Z", "completed_at": "2024-09-13T23:30:14.438641Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.439226Z", "completed_at": "2024-09-13T23:30:14.439229Z"}], "thread_id": "Thread-3", "execution_time": 0.008203744888305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_gross_revenue.c2247b3969", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\nwhere not(total_gross_revenue > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_assert_positive_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.435970Z", "completed_at": "2024-09-13T23:30:14.439522Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.442364Z", "completed_at": "2024-09-13T23:30:14.442367Z"}], "thread_id": "Thread-2", "execution_time": 0.010940074920654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_net_revenue_after_tax.ba2c6febe9", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\nwhere not(total_net_revenue_after_tax > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_assert_positive_total_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.439691Z", "completed_at": "2024-09-13T23:30:14.445384Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.445961Z", "completed_at": "2024-09-13T23:30:14.445964Z"}], "thread_id": "Thread-1", "execution_time": 0.007828950881958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_net_revenue_before_tax.c43767ddeb", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\nwhere not(total_net_revenue_before_tax > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_assert_positive_total_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.442706Z", "completed_at": "2024-09-13T23:30:14.446253Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.449751Z", "completed_at": "2024-09-13T23:30:14.449755Z"}], "thread_id": "Thread-4", "execution_time": 0.0107879638671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_payment_fee.b1975067f6", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\nwhere not(total_payment_fee > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_assert_positive_total_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.446432Z", "completed_at": "2024-09-13T23:30:14.453786Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.454388Z", "completed_at": "2024-09-13T23:30:14.454391Z"}], "thread_id": "Thread-3", "execution_time": 0.009476184844970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_tax_amount.c699116ec6", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n\nwhere not(total_tax_amount > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_assert_positive_total_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.450100Z", "completed_at": "2024-09-13T23:30:14.454684Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.458255Z", "completed_at": "2024-09-13T23:30:14.458259Z"}], "thread_id": "Thread-2", "execution_time": 0.012539148330688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_cm.5e6ccd2b8c", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_cm) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(cm) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.454870Z", "completed_at": "2024-09-13T23:30:14.462424Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.463038Z", "completed_at": "2024-09-13T23:30:14.463041Z"}], "thread_id": "Thread-1", "execution_time": 0.009703874588012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_cogs.1d3a202822", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_cogs) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(cogs) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.458612Z", "completed_at": "2024-09-13T23:30:14.466289Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.466906Z", "completed_at": "2024-09-13T23:30:14.466909Z"}], "thread_id": "Thread-4", "execution_time": 0.012765884399414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_gross_revenue.c37f597c7f", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.463342Z", "completed_at": "2024-09-13T23:30:14.470473Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.471085Z", "completed_at": "2024-09-13T23:30:14.471088Z"}], "thread_id": "Thread-3", "execution_time": 0.009113788604736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_net_revenue_after_tax.f97dfdf7da", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_net_revenue_after_tax) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(net_revenue_after_tax) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.467226Z", "completed_at": "2024-09-13T23:30:14.471780Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.475306Z", "completed_at": "2024-09-13T23:30:14.475309Z"}], "thread_id": "Thread-2", "execution_time": 0.012525081634521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_net_revenue_before_tax.cf29af6db1", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_net_revenue_before_tax) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(net_revenue_before_tax) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.472176Z", "completed_at": "2024-09-13T23:30:14.480143Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.483780Z", "completed_at": "2024-09-13T23:30:14.483784Z"}], "thread_id": "Thread-1", "execution_time": 0.013178110122680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_payment_fee.83ef9782e7", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_payment_fee) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(payment_fee) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.475841Z", "completed_at": "2024-09-13T23:30:14.484271Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.488009Z", "completed_at": "2024-09-13T23:30:14.488012Z"}], "thread_id": "Thread-4", "execution_time": 0.01646113395690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_refund_amount.9e245aca75", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_refund_amount) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(refund_amount) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.480561Z", "completed_at": "2024-09-13T23:30:14.488312Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.488934Z", "completed_at": "2024-09-13T23:30:14.488937Z"}], "thread_id": "Thread-3", "execution_time": 0.013364076614379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_returned_cogs.7fe2b08a8f", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_returned_cogs) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(returned_cogs) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.484686Z", "completed_at": "2024-09-13T23:30:14.489618Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.492932Z", "completed_at": "2024-09-13T23:30:14.492936Z"}], "thread_id": "Thread-2", "execution_time": 0.01262211799621582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_tax_amount.639980c235", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_tax_amount) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(tax_amount) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unequal_agg_total_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.489998Z", "completed_at": "2024-09-13T23:30:14.496091Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.498693Z", "completed_at": "2024-09-13T23:30:14.498697Z"}], "thread_id": "Thread-1", "execution_time": 0.010255098342895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unexpected_country_id.87d133469b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unexpected_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.493466Z", "completed_at": "2024-09-13T23:30:14.498998Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.499604Z", "completed_at": "2024-09-13T23:30:14.499608Z"}], "thread_id": "Thread-4", "execution_time": 0.010229110717773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unexpected_date.8ba6ea57ff", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unexpected_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.496512Z", "completed_at": "2024-09-13T23:30:14.502319Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.502930Z", "completed_at": "2024-09-13T23:30:14.502933Z"}], "thread_id": "Thread-3", "execution_time": 0.009730100631713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unexpected_product_category.c192a37430", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_category as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\n    group by product_category\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Design Templates','Fonts & Typography','Graphic Assets','Stock Photography','Video & Animation'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dim_products_unexpected_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.499916Z", "completed_at": "2024-09-13T23:30:14.503419Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.506816Z", "completed_at": "2024-09-13T23:30:14.506818Z"}], "thread_id": "Thread-2", "execution_time": 0.010564088821411133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_country.5bb34d1877", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.503586Z", "completed_at": "2024-09-13T23:30:14.509970Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.512623Z", "completed_at": "2024-09-13T23:30:14.512627Z"}], "thread_id": "Thread-1", "execution_time": 0.010554790496826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_country_id.ebbcb8b76e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.507344Z", "completed_at": "2024-09-13T23:30:14.512919Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.513511Z", "completed_at": "2024-09-13T23:30:14.513514Z"}], "thread_id": "Thread-4", "execution_time": 0.01032710075378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_date.574048cf21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.510387Z", "completed_at": "2024-09-13T23:30:14.516034Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.516659Z", "completed_at": "2024-09-13T23:30:14.516662Z"}], "thread_id": "Thread-3", "execution_time": 0.009559154510498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_nb_order_id.3bd5159215", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere nb_order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_nb_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.513844Z", "completed_at": "2024-09-13T23:30:14.517355Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.520736Z", "completed_at": "2024-09-13T23:30:14.520740Z"}], "thread_id": "Thread-2", "execution_time": 0.01059722900390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_nb_return_id.496158f2a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere nb_return_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_nb_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.517743Z", "completed_at": "2024-09-13T23:30:14.523935Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.526550Z", "completed_at": "2024-09-13T23:30:14.526553Z"}], "thread_id": "Thread-1", "execution_time": 0.010387897491455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_nb_shipping_id.6210429e27", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere nb_shipping_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_nb_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.521264Z", "completed_at": "2024-09-13T23:30:14.526860Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.527449Z", "completed_at": "2024-09-13T23:30:14.527451Z"}], "thread_id": "Thread-4", "execution_time": 0.010334014892578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_product_category.069796c541", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere product_category is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.524347Z", "completed_at": "2024-09-13T23:30:14.530711Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.531310Z", "completed_at": "2024-09-13T23:30:14.531313Z"}], "thread_id": "Thread-3", "execution_time": 0.010313987731933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_product_name.991aec73f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere product_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.527754Z", "completed_at": "2024-09-13T23:30:14.534046Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.534635Z", "completed_at": "2024-09-13T23:30:14.534638Z"}], "thread_id": "Thread-2", "execution_time": 0.010545969009399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_cm.1e2bfa8ee1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_cm is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.531809Z", "completed_at": "2024-09-13T23:30:14.537316Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.537910Z", "completed_at": "2024-09-13T23:30:14.537913Z"}], "thread_id": "Thread-1", "execution_time": 0.007435798645019531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_cogs.4764d28c01", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_cogs is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.535142Z", "completed_at": "2024-09-13T23:30:14.540667Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.541255Z", "completed_at": "2024-09-13T23:30:14.541258Z"}], "thread_id": "Thread-4", "execution_time": 0.009691953659057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_gross_revenue.de39c2a3eb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_gross_revenue is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.538433Z", "completed_at": "2024-09-13T23:30:14.544806Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.545402Z", "completed_at": "2024-09-13T23:30:14.545406Z"}], "thread_id": "Thread-3", "execution_time": 0.010500907897949219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_net_revenue_after_tax.f2faaacfd9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_net_revenue_after_tax is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.541767Z", "completed_at": "2024-09-13T23:30:14.547899Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.548491Z", "completed_at": "2024-09-13T23:30:14.548494Z"}], "thread_id": "Thread-2", "execution_time": 0.010320901870727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_net_revenue_before_tax.47c7127675", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_net_revenue_before_tax is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.545710Z", "completed_at": "2024-09-13T23:30:14.551221Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.551817Z", "completed_at": "2024-09-13T23:30:14.551820Z"}], "thread_id": "Thread-1", "execution_time": 0.010303974151611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_payment_fee.31a176c2f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_payment_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.548807Z", "completed_at": "2024-09-13T23:30:14.554561Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.555172Z", "completed_at": "2024-09-13T23:30:14.555175Z"}], "thread_id": "Thread-4", "execution_time": 0.010030746459960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_refund_amount.8811aa6bc7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_refund_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.552330Z", "completed_at": "2024-09-13T23:30:14.558551Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.559158Z", "completed_at": "2024-09-13T23:30:14.559161Z"}], "thread_id": "Thread-3", "execution_time": 0.008188962936401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_returned_cogs.a5ad2fc4e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_returned_cogs is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.555697Z", "completed_at": "2024-09-13T23:30:14.561884Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.562486Z", "completed_at": "2024-09-13T23:30:14.562488Z"}], "thread_id": "Thread-2", "execution_time": 0.010406255722045898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_tax_amount.54c3118144", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`dim_products`\nwhere total_tax_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_dim_products_total_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.559675Z", "completed_at": "2024-09-13T23:30:14.565461Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.566046Z", "completed_at": "2024-09-13T23:30:14.566049Z"}], "thread_id": "Thread-1", "execution_time": 0.010597944259643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_date.ead3fe64c2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct date) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sma_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.562993Z", "completed_at": "2024-09-13T23:30:14.568611Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.569210Z", "completed_at": "2024-09-13T23:30:14.569212Z"}], "thread_id": "Thread-4", "execution_time": 0.009783029556274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales.58b8af4604", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sma_sales`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.566354Z", "completed_at": "2024-09-13T23:30:14.572589Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.573207Z", "completed_at": "2024-09-13T23:30:14.573210Z"}], "thread_id": "Thread-3", "execution_time": 0.010458230972290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_120.afc9bae971", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_120) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_120) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.569515Z", "completed_at": "2024-09-13T23:30:14.573705Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.576548Z", "completed_at": "2024-09-13T23:30:14.576552Z"}], "thread_id": "Thread-2", "execution_time": 0.010746955871582031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_14.709a4347be", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_14) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_14) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.573884Z", "completed_at": "2024-09-13T23:30:14.579542Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.580154Z", "completed_at": "2024-09-13T23:30:14.580157Z"}], "thread_id": "Thread-1", "execution_time": 0.007803916931152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_250.49bd8abee2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_250) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_250) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_250`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.577105Z", "completed_at": "2024-09-13T23:30:14.583268Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.583858Z", "completed_at": "2024-09-13T23:30:14.583862Z"}], "thread_id": "Thread-4", "execution_time": 0.01038813591003418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_30.849fb34bf2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_30) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_30) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.580458Z", "completed_at": "2024-09-13T23:30:14.586711Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.587332Z", "completed_at": "2024-09-13T23:30:14.587335Z"}], "thread_id": "Thread-3", "execution_time": 0.010484933853149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_60.6fc3dc75b8", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_60) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_60) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.584166Z", "completed_at": "2024-09-13T23:30:14.590157Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.590764Z", "completed_at": "2024-09-13T23:30:14.590767Z"}], "thread_id": "Thread-2", "execution_time": 0.010872840881347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_lower_120.3d2213ced4", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_120) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_lower_120) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_795f6aa1ee046f25321c2635d7cb356c`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.587836Z", "completed_at": "2024-09-13T23:30:14.593646Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.594261Z", "completed_at": "2024-09-13T23:30:14.594263Z"}], "thread_id": "Thread-1", "execution_time": 0.007789134979248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_lower_14.484861a84e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_14) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_lower_14) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_ad45de46f8fb7200fcaac42022c6d7b0`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.591278Z", "completed_at": "2024-09-13T23:30:14.597745Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.598347Z", "completed_at": "2024-09-13T23:30:14.598349Z"}], "thread_id": "Thread-4", "execution_time": 0.010750293731689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_lower_250.6f8940f530", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_250) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_lower_250) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_a4d3347e6d6645bdfba4f81bb69bfd00`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.594828Z", "completed_at": "2024-09-13T23:30:14.601211Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.601825Z", "completed_at": "2024-09-13T23:30:14.601827Z"}], "thread_id": "Thread-3", "execution_time": 0.010792970657348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_lower_30.8c23c0accd", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_30) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_lower_30) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_e4a78d8fe07090858f3ca76bd4f82d75`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.598858Z", "completed_at": "2024-09-13T23:30:14.605108Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.607869Z", "completed_at": "2024-09-13T23:30:14.607873Z"}], "thread_id": "Thread-2", "execution_time": 0.013338088989257812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_lower_60.669d910d99", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_60) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_lower_60) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_4e4727837048e02085511ebb6492be2e`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.602336Z", "completed_at": "2024-09-13T23:30:14.608178Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.608772Z", "completed_at": "2024-09-13T23:30:14.608775Z"}], "thread_id": "Thread-1", "execution_time": 0.010155677795410156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_upper_120.0d6017c9ee", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_120) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_upper_120) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_743f2829defbbf1738ffc872c1b096c1`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.605523Z", "completed_at": "2024-09-13T23:30:14.612065Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.612706Z", "completed_at": "2024-09-13T23:30:14.612709Z"}], "thread_id": "Thread-4", "execution_time": 0.010616779327392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_upper_14.d2b180e7d3", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_14) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_upper_14) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_f706fc49ea212b90838487f43b0b3d91`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.609101Z", "completed_at": "2024-09-13T23:30:14.613396Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.616393Z", "completed_at": "2024-09-13T23:30:14.616396Z"}], "thread_id": "Thread-3", "execution_time": 0.011130094528198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_upper_250.c11ad8a798", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_250) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_upper_250) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_f84d1eb35eba3cfcc40d4349bba399f2`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.613788Z", "completed_at": "2024-09-13T23:30:14.619681Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.622570Z", "completed_at": "2024-09-13T23:30:14.622573Z"}], "thread_id": "Thread-2", "execution_time": 0.010368824005126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_upper_30.7edd812f30", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_30) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_upper_30) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_d58e91569b985a9345849e35aa1c8d9d`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.616909Z", "completed_at": "2024-09-13T23:30:14.622396Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.623057Z", "completed_at": "2024-09-13T23:30:14.623060Z"}], "thread_id": "Thread-1", "execution_time": 0.00989985466003418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_sma_upper_60.92afcb3b14", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_60) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_sma_upper_60) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_d0a225e71dc2a317acffbf2075634182`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.620099Z", "completed_at": "2024-09-13T23:30:14.626587Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.627223Z", "completed_at": "2024-09-13T23:30:14.627226Z"}], "thread_id": "Thread-4", "execution_time": 0.010571956634521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_stddev_120.4f2cb282c0", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_stddev_120) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_stddev_120) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_84c988f10df9b19958dab313eba7cefd`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.623613Z", "completed_at": "2024-09-13T23:30:14.628142Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.631007Z", "completed_at": "2024-09-13T23:30:14.631010Z"}], "thread_id": "Thread-3", "execution_time": 0.01116490364074707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_stddev_14.172d14f4a0", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_stddev_14) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_stddev_14) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_a8dc15a64d51b838ba301d33ff5fbbc1`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.628495Z", "completed_at": "2024-09-13T23:30:14.634147Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.637414Z", "completed_at": "2024-09-13T23:30:14.637417Z"}], "thread_id": "Thread-2", "execution_time": 0.010469675064086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_stddev_250.3cbe02f36d", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_stddev_250) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_stddev_250) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_9462257bfeaead879e279ad1e2877448`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.631316Z", "completed_at": "2024-09-13T23:30:14.637717Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.638506Z", "completed_at": "2024-09-13T23:30:14.638509Z"}], "thread_id": "Thread-1", "execution_time": 0.011018037796020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_stddev_30.c31a4454bb", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_stddev_30) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_stddev_30) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_34e22dc4eb1161f86b0fc657aba5613c`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.634336Z", "completed_at": "2024-09-13T23:30:14.638326Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.641357Z", "completed_at": "2024-09-13T23:30:14.641360Z"}], "thread_id": "Thread-4", "execution_time": 0.010593891143798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sma_sales_stddev_60.28285eb4a6", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_stddev_60) as filler_column\n\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\n  \n\nhaving count(distinct sales_stddev_60) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`dbt_utils_not_constant_fct_ord_363bdfc2c2ae70de6979889d0a4eee60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.638811Z", "completed_at": "2024-09-13T23:30:14.642518Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.645284Z", "completed_at": "2024-09-13T23:30:14.645286Z"}], "thread_id": "Thread-3", "execution_time": 0.008114099502563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_sma_assert_positive_sales.198d3bbf9d", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\nwhere not(sales > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_timeseries_sma_assert_positive_sales`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.642683Z", "completed_at": "2024-09-13T23:30:14.648216Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.651525Z", "completed_at": "2024-09-13T23:30:14.651528Z"}], "thread_id": "Thread-2", "execution_time": 0.010416984558105469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_sma_assert_positive_sales_sma_120.2c2a4416a5", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\nwhere not(sales_sma_120 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_timeseries_sma_assert_positive_sales_sma_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.645775Z", "completed_at": "2024-09-13T23:30:14.651867Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.652621Z", "completed_at": "2024-09-13T23:30:14.652624Z"}], "thread_id": "Thread-1", "execution_time": 0.010341882705688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_sma_assert_positive_sales_sma_14.3ae2dd3033", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\nwhere not(sales_sma_14 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_timeseries_sma_assert_positive_sales_sma_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.648401Z", "completed_at": "2024-09-13T23:30:14.652454Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.655300Z", "completed_at": "2024-09-13T23:30:14.655304Z"}], "thread_id": "Thread-4", "execution_time": 0.010417938232421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_sma_assert_positive_sales_sma_250.b40dc14c84", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\nwhere not(sales_sma_250 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_timeseries_sma_assert_positive_sales_sma_250`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.652912Z", "completed_at": "2024-09-13T23:30:14.656459Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.659286Z", "completed_at": "2024-09-13T23:30:14.659289Z"}], "thread_id": "Thread-3", "execution_time": 0.008011102676391602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_sma_assert_positive_sales_sma_30.392bd7ab05", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\nwhere not(sales_sma_30 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_timeseries_sma_assert_positive_sales_sma_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.656629Z", "completed_at": "2024-09-13T23:30:14.662772Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.666057Z", "completed_at": "2024-09-13T23:30:14.666060Z"}], "thread_id": "Thread-2", "execution_time": 0.010982751846313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_sma_assert_positive_sales_sma_60.b5373e8eb0", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n\nwhere not(sales_sma_60 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_timeseries_sma_assert_positive_sales_sma_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.659796Z", "completed_at": "2024-09-13T23:30:14.666568Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.669332Z", "completed_at": "2024-09-13T23:30:14.669335Z"}], "thread_id": "Thread-1", "execution_time": 0.013108015060424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_sma_unequal_agg_sales.36b2dec339", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(sales) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(net_revenue_after_tax) as expression\n    from\n        `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_timeseries_sma_unequal_agg_sales`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.662955Z", "completed_at": "2024-09-13T23:30:14.669164Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.669867Z", "completed_at": "2024-09-13T23:30:14.669870Z"}], "thread_id": "Thread-4", "execution_time": 0.011003971099853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_sma_unexpected_date.2d619508ac", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`fct_orders_timeseries_sma_unexpected_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.666980Z", "completed_at": "2024-09-13T23:30:14.670568Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.673393Z", "completed_at": "2024-09-13T23:30:14.673397Z"}], "thread_id": "Thread-3", "execution_time": 0.007585048675537109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_date.37657c660a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.671157Z", "completed_at": "2024-09-13T23:30:14.676934Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.680119Z", "completed_at": "2024-09-13T23:30:14.680123Z"}], "thread_id": "Thread-2", "execution_time": 0.01052713394165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales.7a3076ff3b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.674520Z", "completed_at": "2024-09-13T23:30:14.682697Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.683312Z", "completed_at": "2024-09-13T23:30:14.683316Z"}], "thread_id": "Thread-1", "execution_time": 0.012400150299072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_120.db9f6c7bd9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_120 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.677108Z", "completed_at": "2024-09-13T23:30:14.683138Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.683839Z", "completed_at": "2024-09-13T23:30:14.683842Z"}], "thread_id": "Thread-4", "execution_time": 0.01018214225769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_14.374235e955", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_14 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.680469Z", "completed_at": "2024-09-13T23:30:14.684143Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.684931Z", "completed_at": "2024-09-13T23:30:14.684934Z"}], "thread_id": "Thread-3", "execution_time": 0.008236169815063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_250.331ff4411b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_250 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_250`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.685432Z", "completed_at": "2024-09-13T23:30:14.691429Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.736953Z", "completed_at": "2024-09-13T23:30:14.736958Z"}], "thread_id": "Thread-2", "execution_time": 0.053375959396362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_30.adbc238496", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_30 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.691604Z", "completed_at": "2024-09-13T23:30:14.740206Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.740790Z", "completed_at": "2024-09-13T23:30:14.740793Z"}], "thread_id": "Thread-4", "execution_time": 0.05315709114074707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_lower_120.efe9376cd5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_lower_120 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_lower_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.688718Z", "completed_at": "2024-09-13T23:30:14.740390Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.741110Z", "completed_at": "2024-09-13T23:30:14.741114Z"}], "thread_id": "Thread-1", "execution_time": 0.055919647216796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_60.4b8826df23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_60 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.737311Z", "completed_at": "2024-09-13T23:30:14.741596Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.744628Z", "completed_at": "2024-09-13T23:30:14.744632Z"}], "thread_id": "Thread-3", "execution_time": 0.05616283416748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_lower_14.ec877c63cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_lower_14 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_lower_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.742224Z", "completed_at": "2024-09-13T23:30:14.745962Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.751755Z", "completed_at": "2024-09-13T23:30:14.751758Z"}], "thread_id": "Thread-2", "execution_time": 0.011235237121582031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_lower_250.6bc0b85c8b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_lower_250 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_lower_250`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.749258Z", "completed_at": "2024-09-13T23:30:14.755150Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.755684Z", "completed_at": "2024-09-13T23:30:14.755688Z"}], "thread_id": "Thread-1", "execution_time": 0.010593891143798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_lower_60.e33970618f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_lower_60 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_lower_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.746335Z", "completed_at": "2024-09-13T23:30:14.755334Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.756010Z", "completed_at": "2024-09-13T23:30:14.756012Z"}], "thread_id": "Thread-4", "execution_time": 0.01111292839050293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_lower_30.ca28376bdb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_lower_30 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_lower_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.752472Z", "completed_at": "2024-09-13T23:30:14.758916Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.759534Z", "completed_at": "2024-09-13T23:30:14.759537Z"}], "thread_id": "Thread-3", "execution_time": 0.013445854187011719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_upper_120.96650466e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_upper_120 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_upper_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.756322Z", "completed_at": "2024-09-13T23:30:14.760027Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.760775Z", "completed_at": "2024-09-13T23:30:14.760778Z"}], "thread_id": "Thread-2", "execution_time": 0.0059261322021484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_upper_14.63f8b4a3fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_upper_14 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_upper_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.761067Z", "completed_at": "2024-09-13T23:30:14.770166Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.772958Z", "completed_at": "2024-09-13T23:30:14.772962Z"}], "thread_id": "Thread-1", "execution_time": 0.013682126998901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_upper_250.be8915d053", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_upper_250 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_upper_250`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.764402Z", "completed_at": "2024-09-13T23:30:14.770349Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.773274Z", "completed_at": "2024-09-13T23:30:14.773277Z"}], "thread_id": "Thread-4", "execution_time": 0.013475894927978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_upper_30.06ef189e4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_upper_30 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_upper_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.767500Z", "completed_at": "2024-09-13T23:30:14.773579Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.774234Z", "completed_at": "2024-09-13T23:30:14.774236Z"}], "thread_id": "Thread-3", "execution_time": 0.010063886642456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_sma_upper_60.22e8c9233c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_sma_upper_60 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_sma_upper_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.770527Z", "completed_at": "2024-09-13T23:30:14.774912Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.775664Z", "completed_at": "2024-09-13T23:30:14.775668Z"}], "thread_id": "Thread-2", "execution_time": 0.008415937423706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_stddev_120.a9c9b9f6e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_stddev_120 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_stddev_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.779215Z", "completed_at": "2024-09-13T23:30:14.784905Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.788193Z", "completed_at": "2024-09-13T23:30:14.788197Z"}], "thread_id": "Thread-4", "execution_time": 0.0135040283203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_stddev_250.3cae461508", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_stddev_250 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_stddev_250`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.776159Z", "completed_at": "2024-09-13T23:30:14.785081Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.788509Z", "completed_at": "2024-09-13T23:30:14.788512Z"}], "thread_id": "Thread-1", "execution_time": 0.014019012451171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_stddev_14.83ff08e036", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_stddev_14 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_stddev_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.782295Z", "completed_at": "2024-09-13T23:30:14.788810Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.789105Z", "completed_at": "2024-09-13T23:30:14.789108Z"}], "thread_id": "Thread-3", "execution_time": 0.013176918029785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_stddev_30.023a9ab431", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_stddev_30 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_stddev_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T23:30:14.785281Z", "completed_at": "2024-09-13T23:30:14.789409Z"}, {"name": "execute", "started_at": "2024-09-13T23:30:14.789614Z", "completed_at": "2024-09-13T23:30:14.789616Z"}], "thread_id": "Thread-2", "execution_time": 0.0075681209564208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sma_sales_stddev_60.816ab699e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dbt_analytics_engine_dev`.`fct_orders_timeseries_sma`\nwhere sales_stddev_60 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`dbt_analytics_engine_dev_failed_tests`.`not_null_fct_orders_timeseries_sma_sales_stddev_60`"}], "elapsed_time": 2.5645031929016113, "args": {"defer": false, "introspect": true, "populate_cache": true, "cache_selected_only": false, "select": [], "log_level_file": "debug", "strict_mode": false, "static_parser": true, "send_anonymous_usage_stats": true, "profiles_dir": "/Users/moeabbas/.dbt", "indirect_selection": "eager", "require_resource_names_without_spaces": false, "require_explicit_package_overrides_for_builtin_materializations": true, "favor_state": false, "source_freshness_run_project_hooks": false, "partial_parse": true, "macro_debugging": false, "log_format_file": "debug", "log_file_max_bytes": 10485760, "static": false, "use_colors_file": true, "printer_width": 80, "print": true, "vars": {}, "write_json": true, "compile": true, "version_check": true, "log_format": "default", "show_resource_report": false, "warn_error_options": {"include": [], "exclude": []}, "partial_parse_file_diff": true, "quiet": false, "which": "generate", "enable_legacy_logger": false, "exclude": [], "log_level": "info", "project_dir": "/Users/moeabbas/Documents/code/dbt_analytics_engine", "use_colors": true, "invocation_command": "dbt docs generate", "log_path": "/Users/moeabbas/Documents/code/dbt_analytics_engine/logs", "empty_catalog": false}}