{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.4", "generated_at": "2024-09-25T22:15:45.731810Z", "invocation_id": "5dad44a1-2f2f-4835-992b-6428b69096d5", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.652280Z", "completed_at": "2024-09-25T22:15:43.666078Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.666290Z", "completed_at": "2024-09-25T22:15:43.666297Z"}], "thread_id": "Thread-2", "execution_time": 0.023021936416625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_nps", "compiled": true, "compiled_code": "WITH\n  stg_nps AS (\n    SELECT order_id\n          ,customer_id\n          ,is_nps\n          ,nps_score\n          ,nps_date\n      FROM `moes-dbt-layer`.`dae_sources`.`nps`\n      WHERE nps_date <= CURRENT_DATETIME('America/Toronto')\n        )\n\n\n  SELECT *\n    FROM stg_nps", "relation_name": "`moes-dbt-layer`.`staging`.`stg_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.646555Z", "completed_at": "2024-09-25T22:15:43.666673Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.667163Z", "completed_at": "2024-09-25T22:15:43.667167Z"}], "thread_id": "Thread-1", "execution_time": 0.024922847747802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_customers", "compiled": true, "compiled_code": "WITH\n  stg_customers AS (\n    SELECT customer_id\n          ,first_name\n          ,last_name\n      FROM `moes-dbt-layer`.`dae_sources`.`customers`)\n\n\n  SELECT *\n    FROM stg_customers", "relation_name": "`moes-dbt-layer`.`staging`.`stg_customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.657788Z", "completed_at": "2024-09-25T22:15:43.667503Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.668358Z", "completed_at": "2024-09-25T22:15:43.668361Z"}], "thread_id": "Thread-4", "execution_time": 0.02336907386779785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_payments", "compiled": true, "compiled_code": "WITH\n  stg_payments AS (\n    SELECT order_id\n          ,payment_id\n          ,to_hex(md5(cast(coalesce(cast(order_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(payment_id as string), '_dbt_utils_surrogate_key_null_') as string))) AS order_payment_id\n          ,payment_method\n          ,payment_amount AS gross_revenue\n          ,payment_country_id AS country_id\n          ,payment_status\n          ,created_at\n      FROM `moes-dbt-layer`.`dae_sources`.`payments`\n      WHERE created_at <= CURRENT_DATETIME('America/Toronto')\n        )\n\n\n  SELECT *\n    FROM stg_payments", "relation_name": "`moes-dbt-layer`.`staging`.`stg_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.654936Z", "completed_at": "2024-09-25T22:15:43.667735Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.668681Z", "completed_at": "2024-09-25T22:15:43.668684Z"}], "thread_id": "Thread-3", "execution_time": 0.024827003479003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_orders", "compiled": true, "compiled_code": "WITH\n  stg_orders AS (\n    SELECT order_id\n          ,customer_id\n          ,order_status\n          ,order_date\n          ,product_category_id\n          ,product_id\n      FROM `moes-dbt-layer`.`dae_sources`.`orders`\n      WHERE order_date <= CURRENT_DATETIME('America/Toronto')\n        )\n\n\n  SELECT *\n    FROM stg_orders", "relation_name": "`moes-dbt-layer`.`staging`.`stg_orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.669886Z", "completed_at": "2024-09-25T22:15:43.714706Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.718094Z", "completed_at": "2024-09-25T22:15:43.718100Z"}], "thread_id": "Thread-2", "execution_time": 0.05026388168334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_returns", "compiled": true, "compiled_code": "WITH\n  stg_returns AS (\n    SELECT order_id\n          ,return_id\n          ,is_returned\n          ,return_date\n          ,return_reason\n      FROM `moes-dbt-layer`.`dae_sources`.`returns`\n      WHERE return_date < CURRENT_DATE\n        )\n\n\n  SELECT *\n    FROM stg_returns", "relation_name": "`moes-dbt-layer`.`staging`.`stg_returns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.714982Z", "completed_at": "2024-09-25T22:15:43.716362Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.718530Z", "completed_at": "2024-09-25T22:15:43.718532Z"}], "thread_id": "Thread-4", "execution_time": 0.04632878303527832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_analytics_engine.seed_payment_fees", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.716628Z", "completed_at": "2024-09-25T22:15:43.717840Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.718888Z", "completed_at": "2024-09-25T22:15:43.718891Z"}], "thread_id": "Thread-3", "execution_time": 0.04647397994995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_analytics_engine.seed_products", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.672713Z", "completed_at": "2024-09-25T22:15:43.724121Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.728946Z", "completed_at": "2024-09-25T22:15:43.728951Z"}], "thread_id": "Thread-1", "execution_time": 0.05983304977416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_shipping", "compiled": true, "compiled_code": "WITH\n  stg_shipping AS (\n    SELECT order_id\n          ,shipping_id\n          ,is_shipped\n          ,shipping_date\n          ,shipping_amount\n      FROM `moes-dbt-layer`.`dae_sources`.`shipping`\n      WHERE shipping_date < CURRENT_DATE\n        )\n\n\n  SELECT *\n    FROM stg_shipping", "relation_name": "`moes-dbt-layer`.`staging`.`stg_shipping`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.724505Z", "completed_at": "2024-09-25T22:15:43.726195Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.731670Z", "completed_at": "2024-09-25T22:15:43.731673Z"}], "thread_id": "Thread-2", "execution_time": 0.008831024169921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_analytics_engine.seed_taxes", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.726373Z", "completed_at": "2024-09-25T22:15:43.732708Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.733508Z", "completed_at": "2024-09-25T22:15:43.733511Z"}], "thread_id": "Thread-4", "execution_time": 0.010302305221557617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_customers_first_name.1aa711fefa", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct first_name) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`customers`\n\n  \n\nhaving count(distinct first_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_customers_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.729287Z", "completed_at": "2024-09-25T22:15:43.733325Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.734215Z", "completed_at": "2024-09-25T22:15:43.734218Z"}], "thread_id": "Thread-3", "execution_time": 0.010757923126220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_customers_last_name.6ffe283ff9", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct last_name) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`customers`\n\n  \n\nhaving count(distinct last_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_customers_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.734786Z", "completed_at": "2024-09-25T22:15:43.741499Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.746728Z", "completed_at": "2024-09-25T22:15:43.746731Z"}], "thread_id": "Thread-1", "execution_time": 0.013881921768188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_nps_customer_id.1d8ada62fb", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_id) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\n\n  \n\nhaving count(distinct customer_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_nps_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.737986Z", "completed_at": "2024-09-25T22:15:43.744159Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.747081Z", "completed_at": "2024-09-25T22:15:43.747084Z"}], "thread_id": "Thread-2", "execution_time": 0.014001131057739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_nps_is_nps.bcbc991b6e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct is_nps) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\n\n  \n\nhaving count(distinct is_nps) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_nps_is_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.741682Z", "completed_at": "2024-09-25T22:15:43.747641Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.748509Z", "completed_at": "2024-09-25T22:15:43.748512Z"}], "thread_id": "Thread-4", "execution_time": 0.007973909378051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_nps_nps_date.5268efe72d", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nps_date) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\n\n  \n\nhaving count(distinct nps_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_nps_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.744353Z", "completed_at": "2024-09-25T22:15:43.748086Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.749037Z", "completed_at": "2024-09-25T22:15:43.749040Z"}], "thread_id": "Thread-3", "execution_time": 0.008203983306884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_nps_nps_score.971c38316b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nps_score) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\n\n  \n\nhaving count(distinct nps_score) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_nps_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.750167Z", "completed_at": "2024-09-25T22:15:43.758891Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.762329Z", "completed_at": "2024-09-25T22:15:43.762333Z"}], "thread_id": "Thread-1", "execution_time": 0.014107942581176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_customer_id.5c0a7aeec1", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_id) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\n\n  \n\nhaving count(distinct customer_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.753368Z", "completed_at": "2024-09-25T22:15:43.762132Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.762750Z", "completed_at": "2024-09-25T22:15:43.762753Z"}], "thread_id": "Thread-2", "execution_time": 0.013978004455566406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_order_date.80ff9d08cd", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_date) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\n\n  \n\nhaving count(distinct order_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.756509Z", "completed_at": "2024-09-25T22:15:43.763063Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.763931Z", "completed_at": "2024-09-25T22:15:43.763934Z"}], "thread_id": "Thread-4", "execution_time": 0.010825157165527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_order_status.7efa1990d7", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_status) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\n\n  \n\nhaving count(distinct order_status) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.759116Z", "completed_at": "2024-09-25T22:15:43.763715Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.764681Z", "completed_at": "2024-09-25T22:15:43.764684Z"}], "thread_id": "Thread-3", "execution_time": 0.0088958740234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_product_category_id.a1bffe5382", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_category_id) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\n\n  \n\nhaving count(distinct product_category_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.768503Z", "completed_at": "2024-09-25T22:15:43.777005Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.777429Z", "completed_at": "2024-09-25T22:15:43.777432Z"}], "thread_id": "Thread-2", "execution_time": 0.013013124465942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_created_at.f13e871fc3", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct created_at) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\n\n  \n\nhaving count(distinct created_at) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_payments_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.766060Z", "completed_at": "2024-09-25T22:15:43.777218Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.777769Z", "completed_at": "2024-09-25T22:15:43.777773Z"}], "thread_id": "Thread-1", "execution_time": 0.013561725616455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_orders_product_id.c3e441e90b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_id) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\n\n  \n\nhaving count(distinct product_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.771520Z", "completed_at": "2024-09-25T22:15:43.778070Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.778929Z", "completed_at": "2024-09-25T22:15:43.778932Z"}], "thread_id": "Thread-4", "execution_time": 0.013126850128173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_order_id.f225e51aa8", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_id) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\n\n  \n\nhaving count(distinct order_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_payments_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.773978Z", "completed_at": "2024-09-25T22:15:43.778736Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.779679Z", "completed_at": "2024-09-25T22:15:43.779682Z"}], "thread_id": "Thread-3", "execution_time": 0.008881330490112305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_payment_country_id.11cb76a07e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_country_id) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\n\n  \n\nhaving count(distinct payment_country_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_payments_payment_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.781028Z", "completed_at": "2024-09-25T22:15:43.791913Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.792366Z", "completed_at": "2024-09-25T22:15:43.792370Z"}], "thread_id": "Thread-2", "execution_time": 0.013175010681152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_payment_id.757e26661f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_id) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\n\n  \n\nhaving count(distinct payment_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_payments_payment_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.783372Z", "completed_at": "2024-09-25T22:15:43.792105Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.792733Z", "completed_at": "2024-09-25T22:15:43.792736Z"}], "thread_id": "Thread-1", "execution_time": 0.01332402229309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_payment_method.5b7ec2ca0a", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_method) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\n\n  \n\nhaving count(distinct payment_method) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_payments_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.788759Z", "completed_at": "2024-09-25T22:15:43.793330Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.794137Z", "completed_at": "2024-09-25T22:15:43.794140Z"}], "thread_id": "Thread-3", "execution_time": 0.008524656295776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_returns_is_returned.cd1f0f7ac5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct is_returned) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`returns`\n\n  \n\nhaving count(distinct is_returned) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_returns_is_returned`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.786328Z", "completed_at": "2024-09-25T22:15:43.793516Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.794446Z", "completed_at": "2024-09-25T22:15:43.794449Z"}], "thread_id": "Thread-4", "execution_time": 0.013679027557373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_payments_payment_status.bf12f29150", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_status) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\n\n  \n\nhaving count(distinct payment_status) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_payments_payment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.795799Z", "completed_at": "2024-09-25T22:15:43.804048Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.807612Z", "completed_at": "2024-09-25T22:15:43.807617Z"}], "thread_id": "Thread-2", "execution_time": 0.013752937316894531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_returns_return_date.b667e51d4b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_date) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`returns`\n\n  \n\nhaving count(distinct return_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_returns_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.798765Z", "completed_at": "2024-09-25T22:15:43.807421Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.807995Z", "completed_at": "2024-09-25T22:15:43.807998Z"}], "thread_id": "Thread-1", "execution_time": 0.013280153274536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_returns_return_reason.8a55d4b196", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_reason) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`returns`\n\n  \n\nhaving count(distinct return_reason) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_returns_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.801649Z", "completed_at": "2024-09-25T22:15:43.808804Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.809635Z", "completed_at": "2024-09-25T22:15:43.809638Z"}], "thread_id": "Thread-3", "execution_time": 0.011345863342285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_shipping_is_shipped.a565383871", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct is_shipped) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`shipping`\n\n  \n\nhaving count(distinct is_shipped) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_shipping_is_shipped`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.804259Z", "completed_at": "2024-09-25T22:15:43.808994Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.809951Z", "completed_at": "2024-09-25T22:15:43.809955Z"}], "thread_id": "Thread-4", "execution_time": 0.011446952819824219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_shipping_shipping_amount.e4a06339ae", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_amount) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`shipping`\n\n  \n\nhaving count(distinct shipping_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_shipping_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.813518Z", "completed_at": "2024-09-25T22:15:43.823189Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.831357Z", "completed_at": "2024-09-25T22:15:43.831363Z"}], "thread_id": "Thread-1", "execution_time": 0.022006988525390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_shipping_shipping_id.71eae1e42f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_id) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`shipping`\n\n  \n\nhaving count(distinct shipping_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_shipping_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.811084Z", "completed_at": "2024-09-25T22:15:43.825364Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.831768Z", "completed_at": "2024-09-25T22:15:43.831772Z"}], "thread_id": "Thread-2", "execution_time": 0.02262401580810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_source_not_constant_raw_shipping_shipping_date.019f309d0c", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_date) as filler_column\n\nfrom `moes-dbt-layer`.`dae_sources`.`shipping`\n\n  \n\nhaving count(distinct shipping_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_source_not_constant_raw_shipping_shipping_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.816922Z", "completed_at": "2024-09-25T22:15:43.832391Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.833263Z", "completed_at": "2024-09-25T22:15:43.833266Z"}], "thread_id": "Thread-3", "execution_time": 0.01732611656188965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_customers_unexpected_customer_id_length.fafa7939c9", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        customer_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`customers`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_customers_unexpected_customer_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.825548Z", "completed_at": "2024-09-25T22:15:43.833070Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.833988Z", "completed_at": "2024-09-25T22:15:43.833990Z"}], "thread_id": "Thread-4", "execution_time": 0.017814159393310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_customers_unexpected_first_name_length.787dbb0899", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        first_name\n    ) >= 1 and length(\n        first_name\n    ) <= 16\n)\n as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`customers`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_customers_unexpected_first_name_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.834704Z", "completed_at": "2024-09-25T22:15:43.842977Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.848597Z", "completed_at": "2024-09-25T22:15:43.848602Z"}], "thread_id": "Thread-1", "execution_time": 0.015810012817382812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_customers_unexpected_last_name_length.01feba77f5", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        last_name\n    ) >= 1 and length(\n        last_name\n    ) <= 16\n)\n as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`customers`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_customers_unexpected_last_name_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.837962Z", "completed_at": "2024-09-25T22:15:43.848408Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.849003Z", "completed_at": "2024-09-25T22:15:43.849006Z"}], "thread_id": "Thread-2", "execution_time": 0.015468835830688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_customers_customer_id.e869432dbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`customers`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_customers_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.843169Z", "completed_at": "2024-09-25T22:15:43.849583Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.850367Z", "completed_at": "2024-09-25T22:15:43.850370Z"}], "thread_id": "Thread-3", "execution_time": 0.012671947479248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_customers_first_name.b1fe98db61", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`customers`\nwhere first_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_customers_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.846227Z", "completed_at": "2024-09-25T22:15:43.849962Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.850869Z", "completed_at": "2024-09-25T22:15:43.850872Z"}], "thread_id": "Thread-4", "execution_time": 0.00861215591430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_customers_last_name.ef2fe0f207", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`customers`\nwhere last_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_customers_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.851973Z", "completed_at": "2024-09-25T22:15:43.857426Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.862793Z", "completed_at": "2024-09-25T22:15:43.862797Z"}], "thread_id": "Thread-1", "execution_time": 0.012686967849731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_customer_id.5fda13b29c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_nps_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.854462Z", "completed_at": "2024-09-25T22:15:43.862615Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.863182Z", "completed_at": "2024-09-25T22:15:43.863184Z"}], "thread_id": "Thread-2", "execution_time": 0.0125579833984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_is_nps.a69d0af618", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\nwhere is_nps is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_nps_is_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.860424Z", "completed_at": "2024-09-25T22:15:43.863982Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.864753Z", "completed_at": "2024-09-25T22:15:43.864757Z"}], "thread_id": "Thread-4", "execution_time": 0.008026123046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_nps_score.7d4a90987a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\nwhere nps_score is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_nps_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.857608Z", "completed_at": "2024-09-25T22:15:43.864156Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.865064Z", "completed_at": "2024-09-25T22:15:43.865067Z"}], "thread_id": "Thread-3", "execution_time": 0.010850191116333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_nps_date.1abdb6c60a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\nwhere nps_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_nps_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.866151Z", "completed_at": "2024-09-25T22:15:43.874813Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.877618Z", "completed_at": "2024-09-25T22:15:43.877623Z"}], "thread_id": "Thread-1", "execution_time": 0.013341903686523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_nps_order_id.2eccdcf1e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`nps`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_nps_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.868538Z", "completed_at": "2024-09-25T22:15:43.877394Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.878001Z", "completed_at": "2024-09-25T22:15:43.878003Z"}], "thread_id": "Thread-2", "execution_time": 0.013501882553100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_customer_id.3962c6ab03", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.872389Z", "completed_at": "2024-09-25T22:15:43.878299Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.879132Z", "completed_at": "2024-09-25T22:15:43.879135Z"}], "thread_id": "Thread-4", "execution_time": 0.0076901912689208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_order_date.4c6c74964f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.875004Z", "completed_at": "2024-09-25T22:15:43.878962Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.879861Z", "completed_at": "2024-09-25T22:15:43.879864Z"}], "thread_id": "Thread-3", "execution_time": 0.008195877075195312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_order_id.03a065a98f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.883614Z", "completed_at": "2024-09-25T22:15:43.892298Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.892722Z", "completed_at": "2024-09-25T22:15:43.892726Z"}], "thread_id": "Thread-2", "execution_time": 0.013120889663696289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_product_category_id.5538cf78d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\nwhere product_category_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.881190Z", "completed_at": "2024-09-25T22:15:43.892498Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.893070Z", "completed_at": "2024-09-25T22:15:43.893073Z"}], "thread_id": "Thread-1", "execution_time": 0.013670921325683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_order_status.0e4e88bed2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\nwhere order_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.887311Z", "completed_at": "2024-09-25T22:15:43.893643Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.894438Z", "completed_at": "2024-09-25T22:15:43.894441Z"}], "thread_id": "Thread-4", "execution_time": 0.013506174087524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_orders_product_id.47f01cfc3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`orders`\nwhere product_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.889853Z", "completed_at": "2024-09-25T22:15:43.893819Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.894756Z", "completed_at": "2024-09-25T22:15:43.894759Z"}], "thread_id": "Thread-3", "execution_time": 0.008154869079589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_created_at.710d6129ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\nwhere created_at is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_payments_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.896102Z", "completed_at": "2024-09-25T22:15:43.902580Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.907569Z", "completed_at": "2024-09-25T22:15:43.907574Z"}], "thread_id": "Thread-2", "execution_time": 0.013417959213256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_order_id.def3cb6fc9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_payments_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.899039Z", "completed_at": "2024-09-25T22:15:43.907904Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.908472Z", "completed_at": "2024-09-25T22:15:43.908476Z"}], "thread_id": "Thread-1", "execution_time": 0.013454198837280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_amount.391c03161a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\nwhere payment_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_payments_payment_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.902761Z", "completed_at": "2024-09-25T22:15:43.908801Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.909614Z", "completed_at": "2024-09-25T22:15:43.909617Z"}], "thread_id": "Thread-4", "execution_time": 0.011049985885620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_country_id.672aaa798a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\nwhere payment_country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_payments_payment_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.905170Z", "completed_at": "2024-09-25T22:15:43.908978Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.909935Z", "completed_at": "2024-09-25T22:15:43.909938Z"}], "thread_id": "Thread-3", "execution_time": 0.01114964485168457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_id.a7f5b41ef5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\nwhere payment_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_payments_payment_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.911096Z", "completed_at": "2024-09-25T22:15:43.917533Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.922488Z", "completed_at": "2024-09-25T22:15:43.922493Z"}], "thread_id": "Thread-2", "execution_time": 0.013370990753173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_method.9aca47f72c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\nwhere payment_method is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_payments_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.914731Z", "completed_at": "2024-09-25T22:15:43.922815Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.923312Z", "completed_at": "2024-09-25T22:15:43.923315Z"}], "thread_id": "Thread-1", "execution_time": 0.012930154800415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_payments_payment_status.54558a6ea3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\nwhere payment_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_payments_payment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.917727Z", "completed_at": "2024-09-25T22:15:43.923635Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.924443Z", "completed_at": "2024-09-25T22:15:43.924447Z"}], "thread_id": "Thread-4", "execution_time": 0.01019906997680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_is_returned.148b12a528", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`returns`\nwhere is_returned is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_returns_is_returned`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.920079Z", "completed_at": "2024-09-25T22:15:43.924240Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.925200Z", "completed_at": "2024-09-25T22:15:43.925202Z"}], "thread_id": "Thread-3", "execution_time": 0.010751962661743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_order_id.6d0a5fcbbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`returns`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_returns_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.925734Z", "completed_at": "2024-09-25T22:15:43.932272Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.935042Z", "completed_at": "2024-09-25T22:15:43.935046Z"}], "thread_id": "Thread-2", "execution_time": 0.011258840560913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_return_date.d74bba5b49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`returns`\nwhere return_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_returns_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.929450Z", "completed_at": "2024-09-25T22:15:43.935355Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.938230Z", "completed_at": "2024-09-25T22:15:43.938233Z"}], "thread_id": "Thread-1", "execution_time": 0.013344049453735352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_return_id.18df885383", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`returns`\nwhere return_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_returns_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.932680Z", "completed_at": "2024-09-25T22:15:43.938814Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.939585Z", "completed_at": "2024-09-25T22:15:43.939587Z"}], "thread_id": "Thread-4", "execution_time": 0.010416030883789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_returns_return_reason.005573374b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`returns`\nwhere return_reason is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_returns_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.935540Z", "completed_at": "2024-09-25T22:15:43.939408Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.943245Z", "completed_at": "2024-09-25T22:15:43.943248Z"}], "thread_id": "Thread-3", "execution_time": 0.011421918869018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_shipping_is_shipped.3766118adb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`shipping`\nwhere is_shipped is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_shipping_is_shipped`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.940103Z", "completed_at": "2024-09-25T22:15:43.946967Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.947584Z", "completed_at": "2024-09-25T22:15:43.947587Z"}], "thread_id": "Thread-2", "execution_time": 0.00903010368347168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_not_null_raw_shipping_order_id.4459e0b7d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`dae_sources`.`shipping`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_not_null_raw_shipping_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.944463Z", "completed_at": "2024-09-25T22:15:43.950432Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.956018Z", "completed_at": "2024-09-25T22:15:43.956022Z"}], "thread_id": "Thread-1", "execution_time": 0.016180992126464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_nps_unexpected_customer_id_length.ee58215e3f", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        customer_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`nps`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_nps_unexpected_customer_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.948090Z", "completed_at": "2024-09-25T22:15:43.956803Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.957616Z", "completed_at": "2024-09-25T22:15:43.957619Z"}], "thread_id": "Thread-4", "execution_time": 0.013449907302856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_nps_unexpected_is_nps_bool.78259a7eb7", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_nps as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dae_sources`.`nps`\n    group by is_nps\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_nps_unexpected_is_nps_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.950850Z", "completed_at": "2024-09-25T22:15:43.957431Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.960653Z", "completed_at": "2024-09-25T22:15:43.960659Z"}], "thread_id": "Thread-3", "execution_time": 0.013558149337768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_nps_unexpected_nps_score.8a16a09fd2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dae_sources`.`nps`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_score >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_score <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_nps_unexpected_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.957931Z", "completed_at": "2024-09-25T22:15:43.964192Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.964795Z", "completed_at": "2024-09-25T22:15:43.964798Z"}], "thread_id": "Thread-2", "execution_time": 0.00848698616027832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_nps_unexpected_order_id_length.d9115f851b", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`nps`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_nps_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.961244Z", "completed_at": "2024-09-25T22:15:43.965101Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.968226Z", "completed_at": "2024-09-25T22:15:43.968229Z"}], "thread_id": "Thread-1", "execution_time": 0.011039018630981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_custoemr_id_length.4e34b069bd", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        customer_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`orders`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_orders_unexpected_custoemr_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.965455Z", "completed_at": "2024-09-25T22:15:43.972684Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.973286Z", "completed_at": "2024-09-25T22:15:43.973289Z"}], "thread_id": "Thread-4", "execution_time": 0.009359121322631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_order_id_length.717f86d8cf", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`orders`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_orders_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.968541Z", "completed_at": "2024-09-25T22:15:43.973596Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.976602Z", "completed_at": "2024-09-25T22:15:43.976606Z"}], "thread_id": "Thread-3", "execution_time": 0.012251138687133789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_order_status.6f35c0bf12", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        order_status as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dae_sources`.`orders`\n    group by order_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','failed'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_orders_unexpected_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.973766Z", "completed_at": "2024-09-25T22:15:43.979808Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.980417Z", "completed_at": "2024-09-25T22:15:43.980420Z"}], "thread_id": "Thread-2", "execution_time": 0.008272886276245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_product__id.6d1bf7a4a2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dae_sources`.`orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_orders_unexpected_product__id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.976953Z", "completed_at": "2024-09-25T22:15:43.980725Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.985566Z", "completed_at": "2024-09-25T22:15:43.985569Z"}], "thread_id": "Thread-1", "execution_time": 0.012537956237792969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_orders_unexpected_product_category_id.c5b406ac9f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dae_sources`.`orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_orders_unexpected_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.980894Z", "completed_at": "2024-09-25T22:15:43.989505Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.990133Z", "completed_at": "2024-09-25T22:15:43.990136Z"}], "thread_id": "Thread-4", "execution_time": 0.01081991195678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_assert_positive_payment_amount.d0159c6dbe", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`dae_sources`.`payments`\n\nwhere not(payment_amount > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_payments_assert_positive_payment_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.985911Z", "completed_at": "2024-09-25T22:15:43.990440Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.993507Z", "completed_at": "2024-09-25T22:15:43.993510Z"}], "thread_id": "Thread-3", "execution_time": 0.013353824615478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_unexpected_country_id.e6838f7725", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`dae_sources`.`payments`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not payment_country_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not payment_country_id <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_payments_unexpected_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.990627Z", "completed_at": "2024-09-25T22:15:43.997654Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:43.998282Z", "completed_at": "2024-09-25T22:15:43.998286Z"}], "thread_id": "Thread-2", "execution_time": 0.00925302505493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_unexpected_order_id_length.b7725a5e3e", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`payments`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_payments_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.993861Z", "completed_at": "2024-09-25T22:15:43.998590Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.002565Z", "completed_at": "2024-09-25T22:15:44.002568Z"}], "thread_id": "Thread-1", "execution_time": 0.012692928314208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_unexpected_payment_method.010f8676de", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dae_sources`.`payments`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'amazon_pay','stripe','apple_pay','bitcoin'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_payments_unexpected_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:43.998768Z", "completed_at": "2024-09-25T22:15:44.005977Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.006617Z", "completed_at": "2024-09-25T22:15:44.006621Z"}], "thread_id": "Thread-4", "execution_time": 0.009472846984863281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_payments_unexpected_payment_status.cdd31bef7c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_status as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dae_sources`.`payments`\n    group by payment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'successful','failed'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_payments_unexpected_payment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.002910Z", "completed_at": "2024-09-25T22:15:44.006940Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.010223Z", "completed_at": "2024-09-25T22:15:44.010227Z"}], "thread_id": "Thread-3", "execution_time": 0.012209892272949219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_returns_unexpected_is_returned_bool.c8835a46b6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_returned as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dae_sources`.`returns`\n    group by is_returned\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_returns_unexpected_is_returned_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.007113Z", "completed_at": "2024-09-25T22:15:44.013621Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.014255Z", "completed_at": "2024-09-25T22:15:44.014259Z"}], "thread_id": "Thread-2", "execution_time": 0.008840084075927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_returns_unexpected_order_id_length.66bc0666d6", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`returns`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_returns_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.010592Z", "completed_at": "2024-09-25T22:15:44.014564Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.019305Z", "completed_at": "2024-09-25T22:15:44.019309Z"}], "thread_id": "Thread-1", "execution_time": 0.012951850891113281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_returns_unexpected_return_id_length.3da49c526e", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        return_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`returns`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_returns_unexpected_return_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.014749Z", "completed_at": "2024-09-25T22:15:44.022701Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.023326Z", "completed_at": "2024-09-25T22:15:44.023329Z"}], "thread_id": "Thread-4", "execution_time": 0.010213136672973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_returns_unexpected_return_reason.bbd49bceac", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        return_reason as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dae_sources`.`returns`\n    group by return_reason\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Not as Described','Compatibility Issues','Quality Concerns','Technical Difficulties'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_returns_unexpected_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.019661Z", "completed_at": "2024-09-25T22:15:44.023641Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.026573Z", "completed_at": "2024-09-25T22:15:44.026576Z"}], "thread_id": "Thread-3", "execution_time": 0.012579679489135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_shipping_assert_positive_shipping_amount.8d0c1a37a8", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom (select * from `moes-dbt-layer`.`dae_sources`.`shipping` where shipping_amount IS NOT NULL) dbt_subquery\n\nwhere not(shipping_amount > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_shipping_assert_positive_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.023816Z", "completed_at": "2024-09-25T22:15:44.029827Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.030439Z", "completed_at": "2024-09-25T22:15:44.030442Z"}], "thread_id": "Thread-2", "execution_time": 0.008233070373535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_shipping_unexpected_is_shipped_bool.6a63595654", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_shipped as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`dae_sources`.`shipping`\n    group by is_shipped\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_shipping_unexpected_is_shipped_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.026908Z", "completed_at": "2024-09-25T22:15:44.030740Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.034507Z", "completed_at": "2024-09-25T22:15:44.034510Z"}], "thread_id": "Thread-1", "execution_time": 0.011450052261352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_shipping_unexpected_order_id_length.2ba4519514", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        order_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`shipping`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_shipping_unexpected_order_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.030919Z", "completed_at": "2024-09-25T22:15:44.038866Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.039437Z", "completed_at": "2024-09-25T22:15:44.039440Z"}], "thread_id": "Thread-4", "execution_time": 0.01009988784790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_shipping_unexpected_shipping_id_length.3c4d89d925", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n    length(\n        shipping_id\n    ) = 36 as expression\n\n\n    from `moes-dbt-layer`.`dae_sources`.`shipping`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_shipping_unexpected_shipping_id_length`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.034849Z", "completed_at": "2024-09-25T22:15:44.039744Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.042691Z", "completed_at": "2024-09-25T22:15:44.042694Z"}], "thread_id": "Thread-3", "execution_time": 0.012512922286987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_customers_customer_id.3579d23017", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select customer_id as unique_field\n  from `moes-dbt-layer`.`dae_sources`.`customers`\n  where customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_unique_raw_customers_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.039927Z", "completed_at": "2024-09-25T22:15:44.045847Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.046443Z", "completed_at": "2024-09-25T22:15:44.046446Z"}], "thread_id": "Thread-2", "execution_time": 0.008159875869750977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_nps_order_id.aae4faebb6", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dae_sources`.`nps`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_unique_raw_nps_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.043032Z", "completed_at": "2024-09-25T22:15:44.046738Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.050356Z", "completed_at": "2024-09-25T22:15:44.050360Z"}], "thread_id": "Thread-1", "execution_time": 0.01117086410522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_orders_order_id.2e0765462f", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dae_sources`.`orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_unique_raw_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.046921Z", "completed_at": "2024-09-25T22:15:44.053551Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.054140Z", "completed_at": "2024-09-25T22:15:44.054143Z"}], "thread_id": "Thread-4", "execution_time": 0.008770942687988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_returns_order_id.a8aef5caa0", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dae_sources`.`returns`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_unique_raw_returns_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.050698Z", "completed_at": "2024-09-25T22:15:44.054440Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.057393Z", "completed_at": "2024-09-25T22:15:44.057396Z"}], "thread_id": "Thread-3", "execution_time": 0.01120901107788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_returns_return_id.1d09b09e28", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select return_id as unique_field\n  from `moes-dbt-layer`.`dae_sources`.`returns`\n  where return_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_unique_raw_returns_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.054631Z", "completed_at": "2024-09-25T22:15:44.061054Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.061691Z", "completed_at": "2024-09-25T22:15:44.061694Z"}], "thread_id": "Thread-2", "execution_time": 0.008655786514282227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_shipping_order_id.d5a8aa62ce", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`dae_sources`.`shipping`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_unique_raw_shipping_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.057734Z", "completed_at": "2024-09-25T22:15:44.061989Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.064922Z", "completed_at": "2024-09-25T22:15:44.064926Z"}], "thread_id": "Thread-1", "execution_time": 0.01104116439819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.source_unique_raw_shipping_shipping_id.c6c0e38145", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select shipping_id as unique_field\n  from `moes-dbt-layer`.`dae_sources`.`shipping`\n  where shipping_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`source_unique_raw_shipping_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.062164Z", "completed_at": "2024-09-25T22:15:44.068317Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.068928Z", "completed_at": "2024-09-25T22:15:44.068931Z"}], "thread_id": "Thread-4", "execution_time": 0.008356094360351562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_stg_nps_nps_date.5ef5fca44b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`stg_nps`\nwhere nps_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_stg_nps_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.065271Z", "completed_at": "2024-09-25T22:15:44.069229Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.072212Z", "completed_at": "2024-09-25T22:15:44.072216Z"}], "thread_id": "Thread-3", "execution_time": 0.010782957077026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_nps_unexpected_nps_date.8918cb98fd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`staging`.`stg_nps`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`stg_nps_unexpected_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.069403Z", "completed_at": "2024-09-25T22:15:44.075998Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.076596Z", "completed_at": "2024-09-25T22:15:44.076600Z"}], "thread_id": "Thread-2", "execution_time": 0.008741140365600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_stg_payments_created_at.798e84ec1d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`stg_payments`\nwhere created_at is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_stg_payments_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.072559Z", "completed_at": "2024-09-25T22:15:44.076899Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.079807Z", "completed_at": "2024-09-25T22:15:44.079811Z"}], "thread_id": "Thread-1", "execution_time": 0.011137723922729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_payments_unexpected_created_at.c6758e1cb0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`staging`.`stg_payments`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not created_at <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`stg_payments_unexpected_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.077077Z", "completed_at": "2024-09-25T22:15:44.082722Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.083341Z", "completed_at": "2024-09-25T22:15:44.083344Z"}], "thread_id": "Thread-4", "execution_time": 0.007824897766113281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_stg_orders_order_date.2177a3e8bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`stg_orders`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_stg_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.080147Z", "completed_at": "2024-09-25T22:15:44.083849Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.086781Z", "completed_at": "2024-09-25T22:15:44.086784Z"}], "thread_id": "Thread-3", "execution_time": 0.010434150695800781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_orders_unexpected_order_date.e63e94672f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`staging`.`stg_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not order_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`stg_orders_unexpected_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.084029Z", "completed_at": "2024-09-25T22:15:44.090702Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.093009Z", "completed_at": "2024-09-25T22:15:44.093012Z"}], "thread_id": "Thread-2", "execution_time": 0.010532140731811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_stg_returns_return_date.9c4d6fbd8e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`stg_returns`\nwhere return_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_stg_returns_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.087331Z", "completed_at": "2024-09-25T22:15:44.093307Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.093921Z", "completed_at": "2024-09-25T22:15:44.093924Z"}], "thread_id": "Thread-1", "execution_time": 0.010311126708984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_returns_unexpected_return_date.12ec6a0b35", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`staging`.`stg_returns`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not return_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`stg_returns_unexpected_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.091123Z", "completed_at": "2024-09-25T22:15:44.096615Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.097257Z", "completed_at": "2024-09-25T22:15:44.097260Z"}], "thread_id": "Thread-4", "execution_time": 0.010178089141845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_payment_fees", "compiled": true, "compiled_code": "WITH\n  stg_payment_fees AS (\n    SELECT payment_method_id\n          ,payment_method\n          ,percentage_fee\n          ,fixed_fee\n      FROM `moes-dbt-layer`.`seeds`.`seed_payment_fees`)\n\n\n  SELECT *\n    FROM stg_payment_fees", "relation_name": "`moes-dbt-layer`.`staging`.`stg_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.094233Z", "completed_at": "2024-09-25T22:15:44.097947Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.100892Z", "completed_at": "2024-09-25T22:15:44.100896Z"}], "thread_id": "Thread-3", "execution_time": 0.010020971298217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_payment_fees_fixed_fee.2e54ee1bd7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_payment_fees`\nwhere fixed_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_payment_fees_fixed_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.098343Z", "completed_at": "2024-09-25T22:15:44.104757Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.107490Z", "completed_at": "2024-09-25T22:15:44.107494Z"}], "thread_id": "Thread-2", "execution_time": 0.010740041732788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_payment_fees_payment_method.c7d24bb82e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_payment_fees`\nwhere payment_method is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_payment_fees_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.101433Z", "completed_at": "2024-09-25T22:15:44.107806Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.108419Z", "completed_at": "2024-09-25T22:15:44.108422Z"}], "thread_id": "Thread-1", "execution_time": 0.010707855224609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_payment_fees_payment_method_id.ed89636986", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_payment_fees`\nwhere payment_method_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_payment_fees_payment_method_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.105156Z", "completed_at": "2024-09-25T22:15:44.111112Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.111758Z", "completed_at": "2024-09-25T22:15:44.111761Z"}], "thread_id": "Thread-4", "execution_time": 0.010598897933959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_payment_fees_percentage_fee.697d087974", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_payment_fees`\nwhere percentage_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_payment_fees_percentage_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.108737Z", "completed_at": "2024-09-25T22:15:44.112453Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.115864Z", "completed_at": "2024-09-25T22:15:44.115867Z"}], "thread_id": "Thread-3", "execution_time": 0.01096796989440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_payment_fees_unexpected_fixed_fee.ff8eab6f52", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`seeds`.`seed_payment_fees`\n\nwhere not(fixed_fee > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_payment_fees_unexpected_fixed_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.112849Z", "completed_at": "2024-09-25T22:15:44.165251Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.165960Z", "completed_at": "2024-09-25T22:15:44.165965Z"}], "thread_id": "Thread-2", "execution_time": 0.05471205711364746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_payment_fees_unexpected_payment_method.a712880c05", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`seeds`.`seed_payment_fees`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'amazon_pay','stripe','apple_pay','bitcoin'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_payment_fees_unexpected_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.116408Z", "completed_at": "2024-09-25T22:15:44.169261Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.172204Z", "completed_at": "2024-09-25T22:15:44.172208Z"}], "thread_id": "Thread-1", "execution_time": 0.06003427505493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_payment_fees_unexpected_payment_method_id.c1100364e1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`seeds`.`seed_payment_fees`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not payment_method_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not payment_method_id <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_payment_fees_unexpected_payment_method_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.166304Z", "completed_at": "2024-09-25T22:15:44.172571Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.173234Z", "completed_at": "2024-09-25T22:15:44.173238Z"}], "thread_id": "Thread-4", "execution_time": 0.057118892669677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_payment_fees_unexpected_percentage_fee.f4ed1ee461", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`seeds`.`seed_payment_fees`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not percentage_fee >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not percentage_fee <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_payment_fees_unexpected_percentage_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.169475Z", "completed_at": "2024-09-25T22:15:44.173567Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.177166Z", "completed_at": "2024-09-25T22:15:44.177169Z"}], "thread_id": "Thread-3", "execution_time": 0.011485815048217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_payment_fees_payment_method.d1803efcb4", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select payment_method as unique_field\n  from `moes-dbt-layer`.`seeds`.`seed_payment_fees`\n  where payment_method is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_seed_payment_fees_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.173773Z", "completed_at": "2024-09-25T22:15:44.178140Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.180645Z", "completed_at": "2024-09-25T22:15:44.180649Z"}], "thread_id": "Thread-2", "execution_time": 0.008754253387451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_payment_fees_payment_method_id.e75aa7b850", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select payment_method_id as unique_field\n  from `moes-dbt-layer`.`seeds`.`seed_payment_fees`\n  where payment_method_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_seed_payment_fees_payment_method_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.178346Z", "completed_at": "2024-09-25T22:15:44.183925Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.186876Z", "completed_at": "2024-09-25T22:15:44.186880Z"}], "thread_id": "Thread-1", "execution_time": 0.010211944580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_products", "compiled": true, "compiled_code": "WITH\n  stg_products AS (\n    SELECT product_category_id\n          ,product_category\n          ,product_id\n          ,product_name\n          ,inbound_shipping_cost\n          ,product_cost\n      FROM `moes-dbt-layer`.`seeds`.`seed_products`)\n\n\n  SELECT *\n    FROM stg_products", "relation_name": "`moes-dbt-layer`.`staging`.`stg_products`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.180992Z", "completed_at": "2024-09-25T22:15:44.187178Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.187827Z", "completed_at": "2024-09-25T22:15:44.187830Z"}], "thread_id": "Thread-4", "execution_time": 0.010181188583374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_inbound_shipping_cost.f798cf8f2f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_products`\nwhere inbound_shipping_cost is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_products_inbound_shipping_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.184152Z", "completed_at": "2024-09-25T22:15:44.188124Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.191933Z", "completed_at": "2024-09-25T22:15:44.191936Z"}], "thread_id": "Thread-3", "execution_time": 0.011549234390258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_category.f11e3a13e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_products`\nwhere product_category is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_products_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.188340Z", "completed_at": "2024-09-25T22:15:44.192909Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.195914Z", "completed_at": "2024-09-25T22:15:44.195918Z"}], "thread_id": "Thread-2", "execution_time": 0.009306907653808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_category_id.4022d64939", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_products`\nwhere product_category_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_products_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.193086Z", "completed_at": "2024-09-25T22:15:44.199050Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.201888Z", "completed_at": "2024-09-25T22:15:44.201891Z"}], "thread_id": "Thread-1", "execution_time": 0.010439157485961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_cost.d8f2f71464", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_products`\nwhere product_cost is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_products_product_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.196259Z", "completed_at": "2024-09-25T22:15:44.202184Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.202808Z", "completed_at": "2024-09-25T22:15:44.202811Z"}], "thread_id": "Thread-4", "execution_time": 0.01038217544555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_id.a4fccf3ddc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_products`\nwhere product_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_products_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.199260Z", "completed_at": "2024-09-25T22:15:44.203124Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.206932Z", "completed_at": "2024-09-25T22:15:44.206935Z"}], "thread_id": "Thread-3", "execution_time": 0.011270999908447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_products_product_name.0b363a2b14", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_products`\nwhere product_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_products_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.203312Z", "completed_at": "2024-09-25T22:15:44.207884Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.210848Z", "completed_at": "2024-09-25T22:15:44.210852Z"}], "thread_id": "Thread-2", "execution_time": 0.009224891662597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products__unexpected_product_category_id.65766e3428", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`seeds`.`seed_products`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_products__unexpected_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.208058Z", "completed_at": "2024-09-25T22:15:44.214109Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.218326Z", "completed_at": "2024-09-25T22:15:44.218330Z"}], "thread_id": "Thread-1", "execution_time": 0.011885881423950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products_assert_positive_inbound_shipping_cost.d4c0fd2082", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`seeds`.`seed_products`\n\nwhere not(inbound_shipping_cost > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_products_assert_positive_inbound_shipping_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.211201Z", "completed_at": "2024-09-25T22:15:44.218641Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.219259Z", "completed_at": "2024-09-25T22:15:44.219262Z"}], "thread_id": "Thread-4", "execution_time": 0.011845111846923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products_assert_positive_product_cost.b09ee25c64", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`seeds`.`seed_products`\n\nwhere not(product_cost > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_products_assert_positive_product_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.214341Z", "completed_at": "2024-09-25T22:15:44.219585Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.223394Z", "completed_at": "2024-09-25T22:15:44.223398Z"}], "thread_id": "Thread-3", "execution_time": 0.012798070907592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products_unexpected_product_category.fec78e49d1", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_category as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`seeds`.`seed_products`\n    group by product_category\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Design Templates','Fonts & Typography','Graphic Assets','Stock Photography','Video & Animation'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_products_unexpected_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.219755Z", "completed_at": "2024-09-25T22:15:44.224332Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.227288Z", "completed_at": "2024-09-25T22:15:44.227291Z"}], "thread_id": "Thread-2", "execution_time": 0.00922703742980957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_products_unexpected_product_id.741bb2630b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`seeds`.`seed_products`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_products_unexpected_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.224519Z", "completed_at": "2024-09-25T22:15:44.230590Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.233536Z", "completed_at": "2024-09-25T22:15:44.233540Z"}], "thread_id": "Thread-1", "execution_time": 0.010628938674926758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_products_product_name.c6936fa379", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select product_name as unique_field\n  from `moes-dbt-layer`.`seeds`.`seed_products`\n  where product_name is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_seed_products_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.227632Z", "completed_at": "2024-09-25T22:15:44.233896Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.234509Z", "completed_at": "2024-09-25T22:15:44.234512Z"}], "thread_id": "Thread-4", "execution_time": 0.010638236999511719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.stg_shipping_unexpected_shipping_date.8b549f2bc4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from (select * from `moes-dbt-layer`.`staging`.`stg_shipping` where shipping_date IS NOT NULL) dbt_subquery\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not shipping_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`stg_shipping_unexpected_shipping_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.230795Z", "completed_at": "2024-09-25T22:15:44.234812Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.237827Z", "completed_at": "2024-09-25T22:15:44.237831Z"}], "thread_id": "Thread-3", "execution_time": 0.010792970657348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.stg_taxes", "compiled": true, "compiled_code": "WITH\n  stg_taxes AS (\n    SELECT tax_id AS country_id\n          ,tax_country AS country\n          ,tax_rate\n      FROM `moes-dbt-layer`.`seeds`.`seed_taxes`)\n\n\n  SELECT *\n    FROM stg_taxes", "relation_name": "`moes-dbt-layer`.`staging`.`stg_taxes`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.234989Z", "completed_at": "2024-09-25T22:15:44.238771Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.241786Z", "completed_at": "2024-09-25T22:15:44.241789Z"}], "thread_id": "Thread-2", "execution_time": 0.008517026901245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_taxes_tax_country.0252c9f25c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_taxes`\nwhere tax_country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_taxes_tax_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.238966Z", "completed_at": "2024-09-25T22:15:44.244945Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.248474Z", "completed_at": "2024-09-25T22:15:44.248478Z"}], "thread_id": "Thread-1", "execution_time": 0.01112985610961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_taxes_tax_id.f55a6ff871", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_taxes`\nwhere tax_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_taxes_tax_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.242123Z", "completed_at": "2024-09-25T22:15:44.248785Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.249411Z", "completed_at": "2024-09-25T22:15:44.249414Z"}], "thread_id": "Thread-4", "execution_time": 0.01110696792602539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_seed_taxes_tax_rate.9483e90a15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`seeds`.`seed_taxes`\nwhere tax_rate is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_seed_taxes_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.245125Z", "completed_at": "2024-09-25T22:15:44.249711Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.252730Z", "completed_at": "2024-09-25T22:15:44.252734Z"}], "thread_id": "Thread-3", "execution_time": 0.011202096939086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_taxes_unexpected_tax_id.fad3776053", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`seeds`.`seed_taxes`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_id <= 22\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_taxes_unexpected_tax_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.249895Z", "completed_at": "2024-09-25T22:15:44.253682Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.256555Z", "completed_at": "2024-09-25T22:15:44.256559Z"}], "thread_id": "Thread-2", "execution_time": 0.008348941802978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.seed_taxes_unexpected_tax_rate.f785d7f3ab", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`seeds`.`seed_taxes`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`seed_taxes_unexpected_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.253868Z", "completed_at": "2024-09-25T22:15:44.263325Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.263970Z", "completed_at": "2024-09-25T22:15:44.263975Z"}], "thread_id": "Thread-1", "execution_time": 0.011723995208740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_taxes_tax_country.af4f5dce37", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select tax_country as unique_field\n  from `moes-dbt-layer`.`seeds`.`seed_taxes`\n  where tax_country is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_seed_taxes_tax_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.256897Z", "completed_at": "2024-09-25T22:15:44.263770Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.264489Z", "completed_at": "2024-09-25T22:15:44.264492Z"}], "thread_id": "Thread-4", "execution_time": 0.011259078979492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_seed_taxes_tax_id.f8c4c43c3b", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select tax_id as unique_field\n  from `moes-dbt-layer`.`seeds`.`seed_taxes`\n  where tax_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_seed_taxes_tax_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.259779Z", "completed_at": "2024-09-25T22:15:44.264795Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.267288Z", "completed_at": "2024-09-25T22:15:44.267291Z"}], "thread_id": "Thread-3", "execution_time": 0.010989189147949219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.int_orders", "compiled": true, "compiled_code": "WITH\n  stg_orders AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`stg_orders`)\n\n\n  ,stg_customers AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`stg_customers`)\n\n\n  ,stg_shipping AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`stg_shipping`)\n\n\n  ,stg_returns AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`stg_returns`)\n\n\n  ,stg_nps AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`stg_nps`)\n\n\n  ,stg_products AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`stg_products`)\n\n\n  ,final AS (\n    SELECT product_category_id\n          ,product_id\n          ,order_id\n          ,customer_id\n          ,order_status\n          ,order_date\n          ,first_name\n          ,last_name\n          ,shipping_id\n          ,COALESCE(is_shipped, FALSE) AS is_shipped\n          ,shipping_date\n          ,shipping_amount\n          ,return_id\n          ,COALESCE(is_returned, FALSE) AS is_returned\n          ,return_date\n          ,return_reason\n          ,COALESCE(is_nps, FALSE) AS is_nps\n          ,nps_score\n          ,nps_date\n          ,product_category\n          ,product_name\n          ,inbound_shipping_cost\n          ,product_cost\n      FROM stg_orders\n      LEFT JOIN stg_customers USING (customer_id)\n      LEFT JOIN stg_shipping USING (order_id)\n      LEFT JOIN stg_returns USING (order_id)\n      LEFT JOIN stg_nps USING (order_id, customer_id)\n      LEFT JOIN stg_products USING (product_category_id, product_id))\n\n\n  SELECT *\n    FROM final\n  #Adding comment for slim cd test", "relation_name": "`moes-dbt-layer`.`staging`.`int_orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.265023Z", "completed_at": "2024-09-25T22:15:44.268782Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.269548Z", "completed_at": "2024-09-25T22:15:44.269551Z"}], "thread_id": "Thread-2", "execution_time": 0.00604701042175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.int_payments", "compiled": true, "compiled_code": "WITH\n  stg_payments AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`stg_payments`)\n\n\n  ,stg_taxes AS (\n    SELECT * \n      FROM `moes-dbt-layer`.`staging`.`stg_taxes`)\n\n\n  ,stg_payment_fees AS (\n    SELECT * \n      FROM `moes-dbt-layer`.`staging`.`stg_payment_fees`)\n\n\n  ,final AS (\n    SELECT order_id\n          ,payment_id\n          ,order_payment_id\n          ,payment_method\n          ,payment_status\n          ,country_id\n          ,country\n          ,created_at\n          ,gross_revenue\n          ,tax_rate\n          ,percentage_fee\n          ,fixed_fee\n          ,ROUND((gross_revenue * (percentage_fee / 100)) + fixed_fee, 2) AS payment_fee\n      FROM stg_payments\n      LEFT JOIN stg_taxes USING (country_id)\n      LEFT JOIN stg_payment_fees USING (payment_method))\n\n\n  SELECT *\n    FROM final\n  #Adding comment for slim cd test", "relation_name": "`moes-dbt-layer`.`staging`.`int_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.270218Z", "completed_at": "2024-09-25T22:15:44.283086Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.283511Z", "completed_at": "2024-09-25T22:15:44.283516Z"}], "thread_id": "Thread-1", "execution_time": 0.015035867691040039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_equal_rowcount_int_orders_ref_stg_orders_.5dc9604002", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from `moes-dbt-layer`.`staging`.`int_orders`\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from `moes-dbt-layer`.`staging`.`stg_orders`\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_equal_rowcount_int_orders_ref_stg_orders_`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.273459Z", "completed_at": "2024-09-25T22:15:44.283333Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.284044Z", "completed_at": "2024-09-25T22:15:44.284048Z"}], "thread_id": "Thread-4", "execution_time": 0.015132904052734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_orders_unequal_agg_shipping_amount.8085e0b065", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(shipping_amount) as expression\n    from\n        `moes-dbt-layer`.`staging`.`int_orders`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(shipping_amount) as expression\n    from\n        `moes-dbt-layer`.`staging`.`stg_shipping`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`int_orders_unequal_agg_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.277649Z", "completed_at": "2024-09-25T22:15:44.283863Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.284816Z", "completed_at": "2024-09-25T22:15:44.284819Z"}], "thread_id": "Thread-3", "execution_time": 0.015699148178100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_orders_unexpected_is_nps_bool.89b6608341", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_nps as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`staging`.`int_orders`\n    group by is_nps\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`int_orders_unexpected_is_nps_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.280620Z", "completed_at": "2024-09-25T22:15:44.284574Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.285549Z", "completed_at": "2024-09-25T22:15:44.285552Z"}], "thread_id": "Thread-2", "execution_time": 0.005519866943359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_orders_unexpected_is_returned_bool.a3cea4213e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_returned as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`staging`.`int_orders`\n    group by is_returned\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`int_orders_unexpected_is_returned_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.287053Z", "completed_at": "2024-09-25T22:15:44.298314Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.298771Z", "completed_at": "2024-09-25T22:15:44.298776Z"}], "thread_id": "Thread-1", "execution_time": 0.013490915298461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_orders_unexpected_is_shipped_bool.c2b5343dec", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_shipped as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`staging`.`int_orders`\n    group by is_shipped\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`int_orders_unexpected_is_shipped_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.289901Z", "completed_at": "2024-09-25T22:15:44.298581Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.299316Z", "completed_at": "2024-09-25T22:15:44.299319Z"}], "thread_id": "Thread-4", "execution_time": 0.013292074203491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_customer_id.e78a71eed3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.293326Z", "completed_at": "2024-09-25T22:15:44.299140Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.300045Z", "completed_at": "2024-09-25T22:15:44.300048Z"}], "thread_id": "Thread-3", "execution_time": 0.013409852981567383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_first_name.41e8be1f95", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere first_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.295955Z", "completed_at": "2024-09-25T22:15:44.299623Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.300576Z", "completed_at": "2024-09-25T22:15:44.300579Z"}], "thread_id": "Thread-2", "execution_time": 0.011136054992675781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_inbound_shipping_cost.06ccde673e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere inbound_shipping_cost is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_inbound_shipping_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.302488Z", "completed_at": "2024-09-25T22:15:44.313395Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.313665Z", "completed_at": "2024-09-25T22:15:44.313671Z"}], "thread_id": "Thread-1", "execution_time": 0.012855052947998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_is_nps.e463bb19a8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere is_nps is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_is_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.305060Z", "completed_at": "2024-09-25T22:15:44.314268Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.315050Z", "completed_at": "2024-09-25T22:15:44.315054Z"}], "thread_id": "Thread-4", "execution_time": 0.013797760009765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_is_returned.5428c59e02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere is_returned is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_is_returned`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.308485Z", "completed_at": "2024-09-25T22:15:44.314690Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.315549Z", "completed_at": "2024-09-25T22:15:44.315552Z"}], "thread_id": "Thread-3", "execution_time": 0.013688087463378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_is_shipped.ac59b50b97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere is_shipped is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_is_shipped`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.310891Z", "completed_at": "2024-09-25T22:15:44.314874Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.315855Z", "completed_at": "2024-09-25T22:15:44.315857Z"}], "thread_id": "Thread-2", "execution_time": 0.01360321044921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_last_name.729e6f5a4c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere last_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.316379Z", "completed_at": "2024-09-25T22:15:44.320123Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.323761Z", "completed_at": "2024-09-25T22:15:44.323767Z"}], "thread_id": "Thread-1", "execution_time": 0.009356975555419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_order_date.c8d13500bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.320649Z", "completed_at": "2024-09-25T22:15:44.329153Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.329885Z", "completed_at": "2024-09-25T22:15:44.329889Z"}], "thread_id": "Thread-4", "execution_time": 0.010657072067260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_order_id.383134cc66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.324095Z", "completed_at": "2024-09-25T22:15:44.329344Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.330207Z", "completed_at": "2024-09-25T22:15:44.330210Z"}], "thread_id": "Thread-3", "execution_time": 0.010730981826782227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_order_status.c9525f7b76", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere order_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.326278Z", "completed_at": "2024-09-25T22:15:44.329691Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.333509Z", "completed_at": "2024-09-25T22:15:44.333512Z"}], "thread_id": "Thread-2", "execution_time": 0.01381826400756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_category.81718e6804", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere product_category is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.330524Z", "completed_at": "2024-09-25T22:15:44.334945Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.335699Z", "completed_at": "2024-09-25T22:15:44.335702Z"}], "thread_id": "Thread-1", "execution_time": 0.006836891174316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_category_id.9633448692", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere product_category_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.336190Z", "completed_at": "2024-09-25T22:15:44.344131Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.348227Z", "completed_at": "2024-09-25T22:15:44.348232Z"}], "thread_id": "Thread-4", "execution_time": 0.0137481689453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_cost.b326ad5229", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere product_cost is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_product_cost`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.338589Z", "completed_at": "2024-09-25T22:15:44.344322Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.348554Z", "completed_at": "2024-09-25T22:15:44.348557Z"}], "thread_id": "Thread-3", "execution_time": 0.013910770416259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_id.d2b92956f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere product_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.341217Z", "completed_at": "2024-09-25T22:15:44.348044Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.348956Z", "completed_at": "2024-09-25T22:15:44.348960Z"}], "thread_id": "Thread-2", "execution_time": 0.013895034790039062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_orders_product_name.3b4cb7f6ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_orders`\nwhere product_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_orders_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.344505Z", "completed_at": "2024-09-25T22:15:44.349756Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.350607Z", "completed_at": "2024-09-25T22:15:44.350610Z"}], "thread_id": "Thread-1", "execution_time": 0.0070116519927978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_orders_customer_id__customer_id__ref_stg_customers_.9d7e39b587", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from `moes-dbt-layer`.`staging`.`int_orders`\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from `moes-dbt-layer`.`staging`.`stg_customers`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`relationships_int_orders_d5a17333e13549d0305a0cb7ecf4ce04`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.354620Z", "completed_at": "2024-09-25T22:15:44.363715Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.364129Z", "completed_at": "2024-09-25T22:15:44.364135Z"}], "thread_id": "Thread-3", "execution_time": 0.013796091079711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_orders_shipping_id__shipping_id__ref_stg_shipping_.598a58922f", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select shipping_id as from_field\n    from `moes-dbt-layer`.`staging`.`int_orders`\n    where shipping_id is not null\n),\n\nparent as (\n    select shipping_id as to_field\n    from `moes-dbt-layer`.`staging`.`stg_shipping`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`relationships_int_orders_2301cfe9d58aeb2a84c543d4f33dee4f`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.351871Z", "completed_at": "2024-09-25T22:15:44.363906Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.364500Z", "completed_at": "2024-09-25T22:15:44.364503Z"}], "thread_id": "Thread-4", "execution_time": 0.014367103576660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_orders_order_id__order_id__ref_stg_orders_.ff87b11be6", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from `moes-dbt-layer`.`staging`.`int_orders`\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from `moes-dbt-layer`.`staging`.`stg_orders`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`relationships_int_orders_order_id__order_id__ref_stg_orders_`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.357848Z", "completed_at": "2024-09-25T22:15:44.364813Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.365635Z", "completed_at": "2024-09-25T22:15:44.365637Z"}], "thread_id": "Thread-2", "execution_time": 0.014766693115234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_int_orders_order_id.63cc4f3a7a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`staging`.`int_orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_int_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.360554Z", "completed_at": "2024-09-25T22:15:44.365218Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.366165Z", "completed_at": "2024-09-25T22:15:44.366169Z"}], "thread_id": "Thread-1", "execution_time": 0.008590936660766602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_int_orders_return_id.402c65096c", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select return_id as unique_field\n  from `moes-dbt-layer`.`staging`.`int_orders`\n  where return_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_int_orders_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.367683Z", "completed_at": "2024-09-25T22:15:44.378792Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.382886Z", "completed_at": "2024-09-25T22:15:44.382892Z"}], "thread_id": "Thread-3", "execution_time": 0.01700592041015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_int_orders_shipping_id.071fd1d880", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select shipping_id as unique_field\n  from `moes-dbt-layer`.`staging`.`int_orders`\n  where shipping_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_int_orders_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.370328Z", "completed_at": "2024-09-25T22:15:44.382678Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.383291Z", "completed_at": "2024-09-25T22:15:44.383294Z"}], "thread_id": "Thread-4", "execution_time": 0.016860008239746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.fct_orders", "compiled": true, "compiled_code": "\n\n\nWITH\n  int_orders AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`int_orders`\n      WHERE order_date >= (SELECT DATE_SUB(MAX(order_date), INTERVAL 3 DAY) FROM `moes-dbt-layer`.`sales`.`fct_orders`))\n\n\n  ,int_payments AS (\n    SELECT order_id\n          ,COUNT(payment_id) AS nb_payments\n          ,MAX(payment_method) AS payment_method\n          ,MAX(country_id) AS country_id\n          ,MAX(country) AS country\n          ,SUM(gross_revenue) AS gross_revenue\n          ,MAX(tax_rate) AS tax_rate\n          ,SUM(payment_fee) AS payment_fee\n      FROM `moes-dbt-layer`.`staging`.`int_payments`\n      GROUP BY order_id)\n\n\n  ,joins AS (\n      SELECT country_id\n            ,country\n            ,order_id\n            ,order_status\n            ,customer_id\n            ,nb_payments\n            ,first_name\n            ,last_name\n            ,shipping_id\n            ,is_shipped\n            ,shipping_amount\n            ,payment_method\n            ,gross_revenue\n            ,tax_rate\n            ,SAFE_MULTIPLY(SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), SAFE_DIVIDE(tax_rate, 100)) AS tax_amount\n            ,SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)) AS net_revenue_before_tax\n            ,SAFE_DIVIDE(SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), (1 + SAFE_DIVIDE(tax_rate, 100))) AS net_revenue_after_tax\n            ,order_date\n            ,shipping_date\n            ,DATE_DIFF(shipping_date, order_date, DAY) AS fulfillment_days\n            ,IF(is_nps IS NULL, FALSE, TRUE) AS is_nps\n            ,nps_score\n            ,nps_date\n            ,product_category_id\n            ,product_category\n            ,product_id\n            ,product_name\n            ,SAFE_ADD(inbound_shipping_cost, product_cost) AS cogs\n            ,return_id\n            ,IF(is_returned IS NULL, FALSE, TRUE) AS is_returned\n            ,return_date\n            ,return_reason\n            ,IF(is_returned IS TRUE, SAFE_ADD(inbound_shipping_cost, product_cost), 0) AS returned_cogs\n            ,IF(is_returned IS TRUE, SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), 0) AS refund_amount\n            ,payment_fee\n        FROM int_orders\n        LEFT JOIN int_payments USING (order_id))\n\n\n    ,contribution_margin AS (\n      SELECT *\n            ,COALESCE(net_revenue_after_tax, 0)\n              - COALESCE(cogs, 0)\n                - COALESCE(refund_amount, 0)\n                  - COALESCE(payment_fee, 0)\n                    + COALESCE(returned_cogs, 0) AS cm\n        FROM joins)\n\n\n    ,customers AS (\n      SELECT customer_id\n            ,order_id\n            ,order_date AS customer_order_date\n            ,ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date) AS customer_order_nb\n        FROM contribution_margin\n        GROUP BY ALL)\n\n\n    ,final AS (\n      SELECT * EXCEPT(customer_order_date)\n            ,IF(customer_order_nb > 1, 'Returning', 'New') AS customer_type\n        FROM contribution_margin\n        LEFT JOIN customers USING (customer_id, order_id))\n\n\n  SELECT *\n    FROM final", "relation_name": "`moes-dbt-layer`.`sales`.`fct_orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.375216Z", "completed_at": "2024-09-25T22:15:44.383603Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.385446Z", "completed_at": "2024-09-25T22:15:44.385449Z"}], "thread_id": "Thread-2", "execution_time": 0.018013715744018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.fct_payment_methods", "compiled": true, "compiled_code": "\n\n\n\nWITH\n  int_payments AS (\n    SELECT *\n      FROM `moes-dbt-layer`.`staging`.`int_payments`)\n\n\n  ,fct_payment_methods AS (\n    SELECT country_id\n           ,country\n           ,order_id\n           ,COUNT(order_payment_id) AS nb_payments\n           ,IF(COUNT(DISTINCT payment_method) > 1, 'multiple', 'single') AS payment_methods\n           ,MAX(created_at) AS order_date\n           ,CASE \n            WHEN SUM(IF(payment_status = 'successful', 1, 0)) <> COUNT(order_payment_id) THEN 'failed'\n            ELSE 'successful' END AS order_status\n           ,SUM(gross_revenue) AS total_gross_revenue\n           ,SUM(payment_fee) AS total_payment_fees\n           ,SUM(CASE WHEN payment_method = 'amazon_pay' THEN payment_fee ELSE 0 END) AS amazon_pay_payment_fees\n           ,SUM(CASE WHEN payment_method = 'apple_pay' THEN payment_fee ELSE 0 END) AS apple_pay_payment_fees\n           ,SUM(CASE WHEN payment_method = 'bitcoin' THEN payment_fee ELSE 0 END) AS bitcoin_payment_fees\n           ,SUM(CASE WHEN payment_method = 'stripe' THEN payment_fee ELSE 0 END) AS stripe_payment_fees\n           ,SUM(CASE WHEN payment_method = 'amazon_pay' THEN gross_revenue ELSE 0 END) AS amazon_pay_amount\n           ,SUM(CASE WHEN payment_method = 'apple_pay' THEN gross_revenue ELSE 0 END) AS apple_pay_amount\n           ,SUM(CASE WHEN payment_method = 'bitcoin' THEN gross_revenue ELSE 0 END) AS bitcoin_amount\n           ,SUM(CASE WHEN payment_method = 'stripe' THEN gross_revenue ELSE 0 END) AS stripe_amount\n           FROM int_payments\n      GROUP BY country_id\n              ,country\n              ,order_id)\n\n\n  ,final AS (\n  SELECT *\n    FROM fct_payment_methods\n      WHERE order_date >= (SELECT DATE_SUB(MAX(order_date), INTERVAL 3 DAY) FROM `moes-dbt-layer`.`finance`.`fct_payment_methods`))\n\n\n  SELECT *\n    FROM final", "relation_name": "`moes-dbt-layer`.`finance`.`fct_payment_methods`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.378992Z", "completed_at": "2024-09-25T22:15:44.384436Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.386239Z", "completed_at": "2024-09-25T22:15:44.386242Z"}], "thread_id": "Thread-1", "execution_time": 0.016169071197509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_equal_rowcount_int_payments_ref_stg_payments_.70f412c4b6", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from `moes-dbt-layer`.`staging`.`int_payments`\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from `moes-dbt-layer`.`staging`.`stg_payments`\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_equal_rowcount_int_payments_ref_stg_payments_`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.388087Z", "completed_at": "2024-09-25T22:15:44.398832Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.399265Z", "completed_at": "2024-09-25T22:15:44.399269Z"}], "thread_id": "Thread-3", "execution_time": 0.013520002365112305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_payments_unequal_agg_gross_revenue.28f31da523", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`staging`.`int_payments`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`staging`.`stg_payments`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`int_payments_unequal_agg_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.390966Z", "completed_at": "2024-09-25T22:15:44.399063Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.399605Z", "completed_at": "2024-09-25T22:15:44.399608Z"}], "thread_id": "Thread-4", "execution_time": 0.013619184494018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.int_payments_unexpected_payment_fee.3dbfa94602", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\n\nwhere not(payment_fee = ROUND((gross_revenue * (percentage_fee / 100)) + fixed_fee, 2))\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`int_payments_unexpected_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.394378Z", "completed_at": "2024-09-25T22:15:44.399922Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.400725Z", "completed_at": "2024-09-25T22:15:44.400728Z"}], "thread_id": "Thread-2", "execution_time": 0.012897968292236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_country.18d4938d90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.396567Z", "completed_at": "2024-09-25T22:15:44.400290Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.401247Z", "completed_at": "2024-09-25T22:15:44.401249Z"}], "thread_id": "Thread-1", "execution_time": 0.007593870162963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_country_id.d477883ad0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.402745Z", "completed_at": "2024-09-25T22:15:44.417310Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.418018Z", "completed_at": "2024-09-25T22:15:44.418023Z"}], "thread_id": "Thread-3", "execution_time": 0.017050981521606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_created_at.da6f256d05", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere created_at is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_created_at`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.405413Z", "completed_at": "2024-09-25T22:15:44.417494Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.418368Z", "completed_at": "2024-09-25T22:15:44.418371Z"}], "thread_id": "Thread-4", "execution_time": 0.016880035400390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_fixed_fee.e735f0304a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere fixed_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_fixed_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.414621Z", "completed_at": "2024-09-25T22:15:44.417666Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.418678Z", "completed_at": "2024-09-25T22:15:44.418681Z"}], "thread_id": "Thread-1", "execution_time": 0.013524055480957031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_order_id.557bf2eea0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.412227Z", "completed_at": "2024-09-25T22:15:44.417851Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.418986Z", "completed_at": "2024-09-25T22:15:44.418989Z"}], "thread_id": "Thread-2", "execution_time": 0.01648712158203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_gross_revenue.3fab8f131f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere gross_revenue is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.421775Z", "completed_at": "2024-09-25T22:15:44.432404Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.432644Z", "completed_at": "2024-09-25T22:15:44.432650Z"}], "thread_id": "Thread-3", "execution_time": 0.012482881546020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_payment_fee.e6ecdd7240", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere payment_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.429860Z", "completed_at": "2024-09-25T22:15:44.432994Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.433775Z", "completed_at": "2024-09-25T22:15:44.433779Z"}], "thread_id": "Thread-2", "execution_time": 0.012969970703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_payment_status.e9f85fff44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere payment_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_payment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.427441Z", "completed_at": "2024-09-25T22:15:44.433167Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.434095Z", "completed_at": "2024-09-25T22:15:44.434098Z"}], "thread_id": "Thread-1", "execution_time": 0.013490915298461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_payment_method.a8fd5df74d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere payment_method is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.424312Z", "completed_at": "2024-09-25T22:15:44.433355Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.434421Z", "completed_at": "2024-09-25T22:15:44.434425Z"}], "thread_id": "Thread-4", "execution_time": 0.01402902603149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_payment_id.02e0f4bd25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere payment_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_payment_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.436496Z", "completed_at": "2024-09-25T22:15:44.450684Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.451206Z", "completed_at": "2024-09-25T22:15:44.451215Z"}], "thread_id": "Thread-3", "execution_time": 0.01654195785522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_percentage_fee.cb94ecc835", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere percentage_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_percentage_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.439786Z", "completed_at": "2024-09-25T22:15:44.450978Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.451606Z", "completed_at": "2024-09-25T22:15:44.451609Z"}], "thread_id": "Thread-2", "execution_time": 0.015785932540893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_int_payments_tax_rate.da4366e257", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`staging`.`int_payments`\nwhere tax_rate is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_int_payments_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.443239Z", "completed_at": "2024-09-25T22:15:44.451906Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.452825Z", "completed_at": "2024-09-25T22:15:44.452829Z"}], "thread_id": "Thread-1", "execution_time": 0.01680588722229004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_payments_country_id__country_id__ref_stg_taxes_.df4c4ee979", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select country_id as from_field\n    from `moes-dbt-layer`.`staging`.`int_payments`\n    where country_id is not null\n),\n\nparent as (\n    select country_id as to_field\n    from `moes-dbt-layer`.`staging`.`stg_taxes`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`relationships_int_payments_a119759a6fc2755834df1eefbb54b2e7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.446850Z", "completed_at": "2024-09-25T22:15:44.452121Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.453179Z", "completed_at": "2024-09-25T22:15:44.453181Z"}], "thread_id": "Thread-4", "execution_time": 0.01693892478942871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_int_payments_payment_method__payment_method__ref_stg_payment_fees_.1e68484b11", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select payment_method as from_field\n    from `moes-dbt-layer`.`staging`.`int_payments`\n    where payment_method is not null\n),\n\nparent as (\n    select payment_method as to_field\n    from `moes-dbt-layer`.`staging`.`stg_payment_fees`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`relationships_int_payments_4000ff034d1fca11ad4fdbeaa6b1b3fb`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.460034Z", "completed_at": "2024-09-25T22:15:44.470807Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.471276Z", "completed_at": "2024-09-25T22:15:44.471283Z"}], "thread_id": "Thread-2", "execution_time": 0.017625808715820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.fct_orders_timeseries", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH\n  fct_orders_timeseries AS (\n    SELECT DATE(order_date) AS date\n          ,SUM(net_revenue_after_tax) AS sales\n      FROM `moes-dbt-layer`.`sales`.`fct_orders`\n      WHERE order_date < CURRENT_DATE\n        AND order_date >= (SELECT DATE_SUB(MAX(date), INTERVAL 3 DAY) \n                              FROM `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n                              WHERE sales IS NOT NULL)\n      GROUP BY date)\n\n\n  ,date_series AS (\n    SELECT date\n      FROM UNNEST(\n        GENERATE_DATE_ARRAY(\n          (SELECT MIN(date) FROM fct_orders_timeseries),\n          DATE_ADD(CURRENT_DATE(), INTERVAL 14 DAY),\n          INTERVAL 1 DAY)) AS date)\n\n  \n  ,sales_with_future_dates AS (\n    SELECT date\n          ,sales\n      FROM date_series\n      LEFT JOIN fct_orders_timeseries USING (date))\n\n\n  ,sales_with_indices AS (\n    SELECT *\n          ,DATE_DIFF(date, (SELECT MIN(date) FROM fct_orders_timeseries), DAY) AS date_index\n      FROM sales_with_future_dates)\n\n\n  ,sales_forecast AS (\n    SELECT date\n          ,sales\n          ,COALESCE(sales, LAST_VALUE(sales IGNORE NULLS) OVER (ORDER BY date)) AS sales_forecasted\n          ,date_index\n      FROM sales_with_indices)\n\n\n  ,linear_regression AS (\n    SELECT SUM(CASE WHEN date <= CURRENT_DATE() THEN date_index * sales_forecasted ELSE 0 END) AS sum_xy\n          ,SUM(CASE WHEN date <= CURRENT_DATE() THEN date_index ELSE 0 END) AS sum_x\n          ,SUM(CASE WHEN date <= CURRENT_DATE() THEN sales_forecasted ELSE 0 END) AS sum_y\n          ,SUM(CASE WHEN date <= CURRENT_DATE() THEN date_index * date_index ELSE 0 END) AS sum_xx\n          ,COUNT(CASE WHEN date <= CURRENT_DATE() THEN 1 END) AS n\n      FROM sales_forecast)\n\n\n  ,coefficients AS (\n    SELECT (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x) AS slope\n          ,(sum_y - ((n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x)) * sum_x) / n AS intercept\n      FROM linear_regression)\n\n  \n  ,sales_forecast_with_trend AS (\n    SELECT sf.date\n          ,sf.sales\n          ,CASE\n            WHEN sf.date <= CURRENT_DATE() THEN sf.sales_forecasted\n            ELSE c.slope * sf.date_index + c.intercept END AS sales_forecasted_trend\n      FROM sales_forecast sf\n          ,coefficients c)\n\n\n  ,weighted_moving_average AS (\n    SELECT *\n           ,COALESCE(\n            (0.4 * LAG(sales_forecasted_trend, 0) OVER (ORDER BY date)\n                 + 0.2 * LAG(sales_forecasted_trend, 1) OVER (ORDER BY date)\n                 + 0.15 * LAG(sales_forecasted_trend, 2) OVER (ORDER BY date)\n                 + 0.1 * LAG(sales_forecasted_trend, 3) OVER (ORDER BY date)\n                 + 0.075 * LAG(sales_forecasted_trend, 4) OVER (ORDER BY date)\n                 + 0.05 * LAG(sales_forecasted_trend, 5) OVER (ORDER BY date)\n                 + 0.025 * LAG(sales_forecasted_trend, 6) OVER (ORDER BY date)\n                ), sales_forecasted_trend) AS sales_wma_7\n      FROM sales_forecast_with_trend)\n\n\n  ,simple_moving_averages AS (\n    SELECT *\n          ,AVG(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 7 PRECEDING AND CURRENT ROW) AS sales_sma_7\n          ,AVG(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 14 PRECEDING AND CURRENT ROW) AS sales_sma_14\n          ,AVG(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 30 PRECEDING AND CURRENT ROW) AS sales_sma_30\n          ,AVG(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 60 PRECEDING AND CURRENT ROW) AS sales_sma_60\n          ,AVG(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 120 PRECEDING AND CURRENT ROW) AS sales_sma_120\n      FROM weighted_moving_average)\n\n  \n  ,standard_deviations AS (\n    SELECT *\n          ,STDDEV(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 7 PRECEDING AND CURRENT ROW) AS sales_stddev_7\n          ,STDDEV(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 14 PRECEDING AND CURRENT ROW) AS sales_stddev_14\n          ,STDDEV(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 30 PRECEDING AND CURRENT ROW) AS sales_stddev_30\n          ,STDDEV(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 60 PRECEDING AND CURRENT ROW) AS sales_stddev_60\n          ,STDDEV(sales_forecasted_trend) OVER (ORDER BY date ROWS BETWEEN 120 PRECEDING AND CURRENT ROW) AS sales_stddev_120\n      FROM simple_moving_averages)\n\n\n  ,bollinger_bands AS (\n    SELECT date\n          ,sales\n          ,sales_wma_7\n          ,sales_sma_7\n          ,sales_sma_7 + (2 * sales_stddev_7) AS sales_sma_upper_7\n          ,sales_sma_7 - (2 * sales_stddev_7) AS sales_sma_lower_7\n          ,sales_sma_14\n          ,sales_sma_14 + (2 * sales_stddev_14) AS sales_sma_upper_14\n          ,sales_sma_14 - (2 * sales_stddev_14) AS sales_sma_lower_14\n          ,sales_sma_30\n          ,sales_sma_30 + (2 * sales_stddev_30) AS sales_sma_upper_30\n          ,sales_sma_30 - (2 * sales_stddev_30) AS sales_sma_lower_30\n          ,sales_sma_60\n          ,sales_sma_60 + (2 * sales_stddev_60) AS sales_sma_upper_60\n          ,sales_sma_60 - (2 * sales_stddev_60) AS sales_sma_lower_60\n          ,sales_sma_120\n          ,sales_sma_120 + (2 * sales_stddev_120) AS sales_sma_upper_120\n          ,sales_sma_120 - (2 * sales_stddev_120) AS sales_sma_lower_120\n      FROM standard_deviations)\n\n\n  SELECT *\n  FROM bollinger_bands", "relation_name": "`moes-dbt-layer`.`sales`.`fct_orders_timeseries`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.455300Z", "completed_at": "2024-09-25T22:15:44.471042Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.471672Z", "completed_at": "2024-09-25T22:15:44.471675Z"}], "thread_id": "Thread-3", "execution_time": 0.018224000930786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_analytics_engine.dim_products", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH\n  dim_products AS (\n    SELECT DATE(order_date) AS date\n          ,country_id\n          ,country\n          ,product_category\n          ,product_name\n          ,COUNT(order_id) AS nb_order_id\n          ,COUNT(shipping_id) AS nb_shipping_id\n          ,COUNT(return_id) AS nb_return_id\n          ,ROUND(AVG(fulfillment_days), 2) AS avg_fulfillment_days\n          ,ROUND(AVG(nps_score), 2) AS avg_nps_score\n          ,ROUND(SUM(gross_revenue), 2) AS total_gross_revenue\n          ,ROUND(SUM(tax_amount), 2) AS total_tax_amount\n          ,ROUND(SUM(net_revenue_before_tax), 2) AS total_net_revenue_before_tax\n          ,ROUND(SUM(net_revenue_after_tax), 2) AS total_net_revenue_after_tax\n          ,ROUND(SUM(cogs), 2) AS total_cogs\n          ,ROUND(SUM(returned_cogs), 2) AS total_returned_cogs\n          ,ROUND(SUM(refund_amount), 2) AS total_refund_amount\n          ,ROUND(SUM(payment_fee), 2) AS total_payment_fee\n          ,ROUND(SUM(cm), 2) AS total_cm\n          FROM `moes-dbt-layer`.`sales`.`fct_orders`\n      GROUP BY date\n              ,country_id\n              ,country\n              ,product_category\n              ,product_name)\n\n  SELECT *\n    FROM dim_products", "relation_name": "`moes-dbt-layer`.`product`.`dim_products`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.465603Z", "completed_at": "2024-09-25T22:15:44.472967Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.475084Z", "completed_at": "2024-09-25T22:15:44.475089Z"}], "thread_id": "Thread-1", "execution_time": 0.020292043685913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_accepted_range_fct_orders_nps_score__10__0.7918938823", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_score >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_score <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_accepted_range_fct_orders_nps_score__10__0`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.468279Z", "completed_at": "2024-09-25T22:15:44.473146Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.475432Z", "completed_at": "2024-09-25T22:15:44.475435Z"}], "thread_id": "Thread-4", "execution_time": 0.020394086837768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_cm.8fc3956ee5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct cm) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct cm) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.476588Z", "completed_at": "2024-09-25T22:15:44.488495Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.488941Z", "completed_at": "2024-09-25T22:15:44.488947Z"}], "thread_id": "Thread-2", "execution_time": 0.015535116195678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_cogs.68c7e7b990", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct cogs) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct cogs) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.479248Z", "completed_at": "2024-09-25T22:15:44.488738Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.489305Z", "completed_at": "2024-09-25T22:15:44.489308Z"}], "thread_id": "Thread-3", "execution_time": 0.014489173889160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_country.0a27dd05bc", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct country) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.485376Z", "completed_at": "2024-09-25T22:15:44.489878Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.490663Z", "completed_at": "2024-09-25T22:15:44.490667Z"}], "thread_id": "Thread-4", "execution_time": 0.008609771728515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_customer_id.1e994fbbd6", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_id) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct customer_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.482800Z", "completed_at": "2024-09-25T22:15:44.490054Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.490983Z", "completed_at": "2024-09-25T22:15:44.490986Z"}], "thread_id": "Thread-1", "execution_time": 0.009227991104125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_country_id.7ac8b5f6b7", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country_id) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct country_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.498300Z", "completed_at": "2024-09-25T22:15:44.508763Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.509506Z", "completed_at": "2024-09-25T22:15:44.509512Z"}], "thread_id": "Thread-4", "execution_time": 0.014662742614746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_first_name.0e5bb2183e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct first_name) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct first_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.495345Z", "completed_at": "2024-09-25T22:15:44.508967Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.509862Z", "completed_at": "2024-09-25T22:15:44.509865Z"}], "thread_id": "Thread-3", "execution_time": 0.018555164337158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_customer_type.5b997d97e0", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_type) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct customer_type) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_customer_type`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.492401Z", "completed_at": "2024-09-25T22:15:44.509147Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.510194Z", "completed_at": "2024-09-25T22:15:44.510198Z"}], "thread_id": "Thread-2", "execution_time": 0.019795894622802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_customer_order_nb.b5fec9bc97", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct customer_order_nb) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct customer_order_nb) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_customer_order_nb`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.500730Z", "completed_at": "2024-09-25T22:15:44.509332Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.510524Z", "completed_at": "2024-09-25T22:15:44.510527Z"}], "thread_id": "Thread-1", "execution_time": 0.015434980392456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_fulfillment_days.6ba87ed360", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct fulfillment_days) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct fulfillment_days) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_fulfillment_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.513323Z", "completed_at": "2024-09-25T22:15:44.532351Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.532974Z", "completed_at": "2024-09-25T22:15:44.532980Z"}], "thread_id": "Thread-4", "execution_time": 0.02127981185913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_gross_revenue.be21114f63", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct gross_revenue) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct gross_revenue) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.515966Z", "completed_at": "2024-09-25T22:15:44.532563Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.533500Z", "completed_at": "2024-09-25T22:15:44.533502Z"}], "thread_id": "Thread-3", "execution_time": 0.02155900001525879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_is_nps.ec1b06649e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct is_nps) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct is_nps) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_is_nps`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.520890Z", "completed_at": "2024-09-25T22:15:44.532775Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.533804Z", "completed_at": "2024-09-25T22:15:44.533807Z"}], "thread_id": "Thread-1", "execution_time": 0.021453142166137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_nb_payments.bcd85f6c8a", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nb_payments) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct nb_payments) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.518446Z", "completed_at": "2024-09-25T22:15:44.533329Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.534371Z", "completed_at": "2024-09-25T22:15:44.534374Z"}], "thread_id": "Thread-2", "execution_time": 0.022227048873901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_last_name.1db1f3d23b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct last_name) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct last_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.536702Z", "completed_at": "2024-09-25T22:15:44.551120Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.551945Z", "completed_at": "2024-09-25T22:15:44.551953Z"}], "thread_id": "Thread-4", "execution_time": 0.016899824142456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_net_revenue_after_tax.d5134dd3ec", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct net_revenue_after_tax) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct net_revenue_after_tax) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.545361Z", "completed_at": "2024-09-25T22:15:44.551356Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.552326Z", "completed_at": "2024-09-25T22:15:44.552328Z"}], "thread_id": "Thread-2", "execution_time": 0.016220808029174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_nps_score.4801b7fe57", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nps_score) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct nps_score) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.542236Z", "completed_at": "2024-09-25T22:15:44.551555Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.552642Z", "completed_at": "2024-09-25T22:15:44.552646Z"}], "thread_id": "Thread-1", "execution_time": 0.016933679580688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_nps_date.d14f37bd0e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nps_date) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct nps_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.539644Z", "completed_at": "2024-09-25T22:15:44.551760Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.552985Z", "completed_at": "2024-09-25T22:15:44.552988Z"}], "thread_id": "Thread-3", "execution_time": 0.017472028732299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_net_revenue_before_tax.1c691828cc", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct net_revenue_before_tax) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct net_revenue_before_tax) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.561049Z", "completed_at": "2024-09-25T22:15:44.622421Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.623271Z", "completed_at": "2024-09-25T22:15:44.623278Z"}], "thread_id": "Thread-1", "execution_time": 0.06866788864135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_payment_fee.51eecf2763", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_fee) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct payment_fee) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.558594Z", "completed_at": "2024-09-25T22:15:44.622651Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.623649Z", "completed_at": "2024-09-25T22:15:44.623652Z"}], "thread_id": "Thread-2", "execution_time": 0.06922411918640137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_order_status.0b6286ed95", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_status) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct order_status) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.555850Z", "completed_at": "2024-09-25T22:15:44.622873Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.623970Z", "completed_at": "2024-09-25T22:15:44.623973Z"}], "thread_id": "Thread-4", "execution_time": 0.06978416442871094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_order_date.369ca05d4f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_date) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct order_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.564094Z", "completed_at": "2024-09-25T22:15:44.623088Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.624309Z", "completed_at": "2024-09-25T22:15:44.624311Z"}], "thread_id": "Thread-3", "execution_time": 0.06946420669555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_payment_method.e6ed76876e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct payment_method) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct payment_method) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.627214Z", "completed_at": "2024-09-25T22:15:44.636936Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.637337Z", "completed_at": "2024-09-25T22:15:44.637342Z"}], "thread_id": "Thread-1", "execution_time": 0.011797904968261719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_product_category.112df2d465", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_category) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct product_category) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.629695Z", "completed_at": "2024-09-25T22:15:44.637137Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.637812Z", "completed_at": "2024-09-25T22:15:44.637815Z"}], "thread_id": "Thread-2", "execution_time": 0.012037992477416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_product_category_id.92b52ba0ee", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_category_id) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct product_category_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.631929Z", "completed_at": "2024-09-25T22:15:44.637632Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.639232Z", "completed_at": "2024-09-25T22:15:44.639236Z"}], "thread_id": "Thread-4", "execution_time": 0.013242006301879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_product_id.f591e3ef76", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_id) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct product_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.634586Z", "completed_at": "2024-09-25T22:15:44.638098Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.639793Z", "completed_at": "2024-09-25T22:15:44.639797Z"}], "thread_id": "Thread-3", "execution_time": 0.013581037521362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_product_name.04af613d46", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_name) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct product_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.641760Z", "completed_at": "2024-09-25T22:15:44.651995Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.652240Z", "completed_at": "2024-09-25T22:15:44.652244Z"}], "thread_id": "Thread-1", "execution_time": 0.012185811996459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_refund_amount.3a865afd77", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct refund_amount) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct refund_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.644387Z", "completed_at": "2024-09-25T22:15:44.652830Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.653230Z", "completed_at": "2024-09-25T22:15:44.653234Z"}], "thread_id": "Thread-2", "execution_time": 0.01270604133605957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_return_date.c4a12821ab", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_date) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct return_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.646854Z", "completed_at": "2024-09-25T22:15:44.653542Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.654300Z", "completed_at": "2024-09-25T22:15:44.654304Z"}], "thread_id": "Thread-4", "execution_time": 0.013170003890991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_return_id.f0a57fcf42", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_id) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct return_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.649804Z", "completed_at": "2024-09-25T22:15:44.653719Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.654620Z", "completed_at": "2024-09-25T22:15:44.654623Z"}], "thread_id": "Thread-3", "execution_time": 0.013107061386108398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_return_reason.10f36c5ab1", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct return_reason) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct return_reason) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.655006Z", "completed_at": "2024-09-25T22:15:44.658672Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.661744Z", "completed_at": "2024-09-25T22:15:44.661748Z"}], "thread_id": "Thread-1", "execution_time": 0.00879216194152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_returned_cogs.ce6d78c725", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct returned_cogs) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct returned_cogs) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.658846Z", "completed_at": "2024-09-25T22:15:44.667633Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.668138Z", "completed_at": "2024-09-25T22:15:44.668141Z"}], "thread_id": "Thread-2", "execution_time": 0.010843992233276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_shipping_date.e1289987ed", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_date) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct shipping_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_shipping_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.665130Z", "completed_at": "2024-09-25T22:15:44.668704Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.671615Z", "completed_at": "2024-09-25T22:15:44.671618Z"}], "thread_id": "Thread-3", "execution_time": 0.013192415237426758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_tax_amount.9d065212d2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct tax_amount) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct tax_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.662095Z", "completed_at": "2024-09-25T22:15:44.668876Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.671928Z", "completed_at": "2024-09-25T22:15:44.671930Z"}], "thread_id": "Thread-4", "execution_time": 0.013753652572631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_shipping_id.1f5b4e61fa", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct shipping_id) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct shipping_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.669261Z", "completed_at": "2024-09-25T22:15:44.673160Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.677341Z", "completed_at": "2024-09-25T22:15:44.677344Z"}], "thread_id": "Thread-1", "execution_time": 0.00948190689086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_tax_rate.c8727ca0c5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct tax_rate) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\n  \n\nhaving count(distinct tax_rate) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.674442Z", "completed_at": "2024-09-25T22:15:44.682964Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.684513Z", "completed_at": "2024-09-25T22:15:44.684517Z"}], "thread_id": "Thread-2", "execution_time": 0.012281656265258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_assert_positive_gross_revenue.d0522b6f57", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(gross_revenue > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_assert_positive_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.678262Z", "completed_at": "2024-09-25T22:15:44.685278Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.688167Z", "completed_at": "2024-09-25T22:15:44.688170Z"}], "thread_id": "Thread-3", "execution_time": 0.014863252639770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_assert_positive_payment_fee.3fc91c0b12", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(payment_fee > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_assert_positive_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.680630Z", "completed_at": "2024-09-25T22:15:44.687765Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.688504Z", "completed_at": "2024-09-25T22:15:44.688507Z"}], "thread_id": "Thread-4", "execution_time": 0.014333963394165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_assert_positive_shipping_amount.97b89a1e69", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(shipping_amount > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_assert_positive_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.685449Z", "completed_at": "2024-09-25T22:15:44.693778Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.694458Z", "completed_at": "2024-09-25T22:15:44.694463Z"}], "thread_id": "Thread-1", "execution_time": 0.010288238525390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_assert_positive_tax_rate.3bb0614ec6", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(tax_rate > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_assert_positive_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.689461Z", "completed_at": "2024-09-25T22:15:44.695251Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.702066Z", "completed_at": "2024-09-25T22:15:44.702072Z"}], "thread_id": "Thread-2", "execution_time": 0.014169931411743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unequal_agg_cogs.39983bc63a", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(cogs) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(inbound_shipping_cost) + sum(product_cost) as expression\n    from\n        `moes-dbt-layer`.`staging`.`int_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unequal_agg_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.696002Z", "completed_at": "2024-09-25T22:15:44.706040Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.706629Z", "completed_at": "2024-09-25T22:15:44.706633Z"}], "thread_id": "Thread-3", "execution_time": 0.012713909149169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unequal_agg_gross_revenue.91ab358fda", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`staging`.`int_payments`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unequal_agg_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.699063Z", "completed_at": "2024-09-25T22:15:44.706409Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.710085Z", "completed_at": "2024-09-25T22:15:44.710088Z"}], "thread_id": "Thread-4", "execution_time": 0.015921831130981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unequal_agg_shipping_amount.f398ff09f4", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(shipping_amount) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(shipping_amount) as expression\n    from\n        `moes-dbt-layer`.`staging`.`int_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unequal_agg_shipping_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.703398Z", "completed_at": "2024-09-25T22:15:44.710398Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.711049Z", "completed_at": "2024-09-25T22:15:44.711052Z"}], "thread_id": "Thread-1", "execution_time": 0.008673906326293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_cm.8fd4691b5f", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(cm < gross_revenue)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.706973Z", "completed_at": "2024-09-25T22:15:44.711781Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.712538Z", "completed_at": "2024-09-25T22:15:44.712540Z"}], "thread_id": "Thread-2", "execution_time": 0.009418010711669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_cogs.001142e58f", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(cogs > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.713040Z", "completed_at": "2024-09-25T22:15:44.722199Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.724806Z", "completed_at": "2024-09-25T22:15:44.724810Z"}], "thread_id": "Thread-3", "execution_time": 0.013489723205566406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_country_id.f51b3be77c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id <= 22\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.715318Z", "completed_at": "2024-09-25T22:15:44.722384Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.725137Z", "completed_at": "2024-09-25T22:15:44.725140Z"}], "thread_id": "Thread-4", "execution_time": 0.013601064682006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_customer_type.69983a7d22", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        customer_type as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    group by customer_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Returning','New'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_customer_type`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.718847Z", "completed_at": "2024-09-25T22:15:44.725443Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.726120Z", "completed_at": "2024-09-25T22:15:44.726123Z"}], "thread_id": "Thread-1", "execution_time": 0.013326168060302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_fulfillment_days.224a79c537", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(fulfillment_days = DATE_DIFF(shipping_date, order_date, DAY))\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_fulfillment_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.722558Z", "completed_at": "2024-09-25T22:15:44.726431Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.727246Z", "completed_at": "2024-09-25T22:15:44.727249Z"}], "thread_id": "Thread-2", "execution_time": 0.008671045303344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_is_nps_bool.e8cc54079b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_nps as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    group by is_nps\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_is_nps_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.728322Z", "completed_at": "2024-09-25T22:15:44.736433Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.739335Z", "completed_at": "2024-09-25T22:15:44.739339Z"}], "thread_id": "Thread-3", "execution_time": 0.012773752212524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_is_returned_bool.3e7d7bb86e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_returned as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    group by is_returned\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_is_returned_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.730557Z", "completed_at": "2024-09-25T22:15:44.736608Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.739676Z", "completed_at": "2024-09-25T22:15:44.739679Z"}], "thread_id": "Thread-4", "execution_time": 0.012903928756713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_is_shipped_bool.281259375c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_shipped as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    group by is_shipped\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_is_shipped_bool`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.733232Z", "completed_at": "2024-09-25T22:15:44.739974Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.740795Z", "completed_at": "2024-09-25T22:15:44.740798Z"}], "thread_id": "Thread-1", "execution_time": 0.012930154800415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_nb_payments.fb52011391", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(nb_payments > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.736792Z", "completed_at": "2024-09-25T22:15:44.740629Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.741511Z", "completed_at": "2024-09-25T22:15:44.741514Z"}], "thread_id": "Thread-2", "execution_time": 0.00859689712524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_net_revenue_after_tax.cf4c030292", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(net_revenue_after_tax = SAFE_DIVIDE(SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), (1 + SAFE_DIVIDE(tax_rate, 100))))\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.745525Z", "completed_at": "2024-09-25T22:15:44.756267Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.756657Z", "completed_at": "2024-09-25T22:15:44.756662Z"}], "thread_id": "Thread-4", "execution_time": 0.015403985977172852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_nps_date.18b8cb456d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not nps_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_nps_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.742823Z", "completed_at": "2024-09-25T22:15:44.756458Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.757162Z", "completed_at": "2024-09-25T22:15:44.757165Z"}], "thread_id": "Thread-3", "execution_time": 0.01610398292541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_net_revenue_before_tax.35c5c243a5", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(net_revenue_before_tax = SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)))\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.748498Z", "completed_at": "2024-09-25T22:15:44.756977Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.757882Z", "completed_at": "2024-09-25T22:15:44.757885Z"}], "thread_id": "Thread-1", "execution_time": 0.01531219482421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_order_date.4a7d73acb5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not order_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.751471Z", "completed_at": "2024-09-25T22:15:44.757474Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.758420Z", "completed_at": "2024-09-25T22:15:44.758423Z"}], "thread_id": "Thread-2", "execution_time": 0.010669946670532227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_order_status.a694a31b07", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        order_status as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    group by order_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','failed'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.760479Z", "completed_at": "2024-09-25T22:15:44.772115Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.772559Z", "completed_at": "2024-09-25T22:15:44.772564Z"}], "thread_id": "Thread-4", "execution_time": 0.01388096809387207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_payment_method.143499598b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'amazon_pay','stripe','apple_pay','bitcoin'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.764425Z", "completed_at": "2024-09-25T22:15:44.772361Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.772894Z", "completed_at": "2024-09-25T22:15:44.772898Z"}], "thread_id": "Thread-3", "execution_time": 0.013767004013061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_product_category.796f7162be", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_category as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    group by product_category\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Design Templates','Fonts & Typography','Graphic Assets','Stock Photography','Video & Animation'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.766875Z", "completed_at": "2024-09-25T22:15:44.773426Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.774215Z", "completed_at": "2024-09-25T22:15:44.774218Z"}], "thread_id": "Thread-1", "execution_time": 0.014445781707763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_product_category_id.0e1442b69c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_category_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.769867Z", "completed_at": "2024-09-25T22:15:44.773600Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.774513Z", "completed_at": "2024-09-25T22:15:44.774515Z"}], "thread_id": "Thread-2", "execution_time": 0.01434183120727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_product_id.03e8fa5b21", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_id <= 5\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.775795Z", "completed_at": "2024-09-25T22:15:44.782240Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.787193Z", "completed_at": "2024-09-25T22:15:44.787197Z"}], "thread_id": "Thread-4", "execution_time": 0.013235092163085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_refund_amount.79c3344f36", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom (select * from `moes-dbt-layer`.`sales`.`fct_orders` where refund_amount > 0) dbt_subquery\n\nwhere not(refund_amount = (gross_revenue - shipping_amount))\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.778898Z", "completed_at": "2024-09-25T22:15:44.787498Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.787993Z", "completed_at": "2024-09-25T22:15:44.787996Z"}], "thread_id": "Thread-3", "execution_time": 0.013232946395874023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_return_date.faa60b5a52", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not return_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_return_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.784628Z", "completed_at": "2024-09-25T22:15:44.788534Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.789295Z", "completed_at": "2024-09-25T22:15:44.789297Z"}], "thread_id": "Thread-2", "execution_time": 0.010653972625732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_returned_cogs.72a465536d", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom (select * from `moes-dbt-layer`.`sales`.`fct_orders` where returned_cogs > 0) dbt_subquery\n\nwhere not(returned_cogs = cogs)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.782429Z", "completed_at": "2024-09-25T22:15:44.788706Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.789607Z", "completed_at": "2024-09-25T22:15:44.789609Z"}], "thread_id": "Thread-1", "execution_time": 0.011171102523803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_return_reason.bf2d1cade2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        return_reason as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    group by return_reason\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Not as Described','Compatibility Issues','Quality Concerns','Technical Difficulties'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_return_reason`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.790217Z", "completed_at": "2024-09-25T22:15:44.796717Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.797285Z", "completed_at": "2024-09-25T22:15:44.797288Z"}], "thread_id": "Thread-4", "execution_time": 0.00900888442993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_shipping_date.2e6bb5ce4f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not shipping_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_shipping_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.793542Z", "completed_at": "2024-09-25T22:15:44.802087Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.802541Z", "completed_at": "2024-09-25T22:15:44.802546Z"}], "thread_id": "Thread-3", "execution_time": 0.012575864791870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_tax_amount.8d62b11a90", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\n\nwhere not(tax_amount = SAFE_MULTIPLY(SAFE_SUBTRACT(gross_revenue, COALESCE(shipping_amount, 0)), SAFE_DIVIDE(tax_rate, 100)))\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.797605Z", "completed_at": "2024-09-25T22:15:44.803305Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.804047Z", "completed_at": "2024-09-25T22:15:44.804050Z"}], "thread_id": "Thread-2", "execution_time": 0.010959863662719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_unexpected_tax_rate.888f839f9c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_unexpected_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.799916Z", "completed_at": "2024-09-25T22:15:44.803480Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.804349Z", "completed_at": "2024-09-25T22:15:44.804351Z"}], "thread_id": "Thread-1", "execution_time": 0.01104283332824707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_cm.e44709b283", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere cm is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.804641Z", "completed_at": "2024-09-25T22:15:44.810783Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.811357Z", "completed_at": "2024-09-25T22:15:44.811360Z"}], "thread_id": "Thread-4", "execution_time": 0.008508920669555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_cogs.0b19f968ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere cogs is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.807484Z", "completed_at": "2024-09-25T22:15:44.811655Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.816449Z", "completed_at": "2024-09-25T22:15:44.816452Z"}], "thread_id": "Thread-3", "execution_time": 0.012651681900024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_country.0edcc91e35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.814047Z", "completed_at": "2024-09-25T22:15:44.817478Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.820252Z", "completed_at": "2024-09-25T22:15:44.820255Z"}], "thread_id": "Thread-1", "execution_time": 0.009710073471069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_customer_id.16fe324f7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere customer_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_customer_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.811831Z", "completed_at": "2024-09-25T22:15:44.817646Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.820560Z", "completed_at": "2024-09-25T22:15:44.820562Z"}], "thread_id": "Thread-2", "execution_time": 0.01022481918334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_country_id.dd87008526", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.818026Z", "completed_at": "2024-09-25T22:15:44.824393Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.825032Z", "completed_at": "2024-09-25T22:15:44.825035Z"}], "thread_id": "Thread-4", "execution_time": 0.00825810432434082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_customer_order_nb.79c7350630", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere customer_order_nb is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_customer_order_nb`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.821509Z", "completed_at": "2024-09-25T22:15:44.828182Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.830848Z", "completed_at": "2024-09-25T22:15:44.830852Z"}], "thread_id": "Thread-3", "execution_time": 0.01307225227355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_customer_type.5d273b0b2b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere customer_type is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_customer_type`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.825936Z", "completed_at": "2024-09-25T22:15:44.834446Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.835053Z", "completed_at": "2024-09-25T22:15:44.835056Z"}], "thread_id": "Thread-1", "execution_time": 0.010523796081542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_first_name.a89a0764e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere first_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_first_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.828356Z", "completed_at": "2024-09-25T22:15:44.834625Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.835374Z", "completed_at": "2024-09-25T22:15:44.835376Z"}], "thread_id": "Thread-2", "execution_time": 0.010632991790771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_gross_revenue.e9774c74d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere gross_revenue is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.831649Z", "completed_at": "2024-09-25T22:15:44.835858Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.838715Z", "completed_at": "2024-09-25T22:15:44.838717Z"}], "thread_id": "Thread-4", "execution_time": 0.008153200149536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_last_name.1e39458222", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere last_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_last_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.836487Z", "completed_at": "2024-09-25T22:15:44.840035Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.844848Z", "completed_at": "2024-09-25T22:15:44.844851Z"}], "thread_id": "Thread-3", "execution_time": 0.010089874267578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_nb_payments.3cd88a1cae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere nb_payments is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.842605Z", "completed_at": "2024-09-25T22:15:44.848561Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.849167Z", "completed_at": "2024-09-25T22:15:44.849170Z"}], "thread_id": "Thread-2", "execution_time": 0.009990930557250977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_net_revenue_before_tax.bb8578a9c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere net_revenue_before_tax is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.840419Z", "completed_at": "2024-09-25T22:15:44.848955Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.849652Z", "completed_at": "2024-09-25T22:15:44.849655Z"}], "thread_id": "Thread-1", "execution_time": 0.010683059692382812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_net_revenue_after_tax.e01b375b4e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere net_revenue_after_tax is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.845636Z", "completed_at": "2024-09-25T22:15:44.852432Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.853071Z", "completed_at": "2024-09-25T22:15:44.853075Z"}], "thread_id": "Thread-4", "execution_time": 0.012901782989501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_order_date.84f0a76362", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.850196Z", "completed_at": "2024-09-25T22:15:44.853771Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.856601Z", "completed_at": "2024-09-25T22:15:44.856604Z"}], "thread_id": "Thread-3", "execution_time": 0.007892847061157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_order_id.4e687af8d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.854352Z", "completed_at": "2024-09-25T22:15:44.859824Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.863244Z", "completed_at": "2024-09-25T22:15:44.863248Z"}], "thread_id": "Thread-2", "execution_time": 0.010462045669555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_order_status.b83f07f66b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere order_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.857127Z", "completed_at": "2024-09-25T22:15:44.863569Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.864213Z", "completed_at": "2024-09-25T22:15:44.864216Z"}], "thread_id": "Thread-1", "execution_time": 0.01086115837097168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_payment_fee.cb62252086", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere payment_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.860229Z", "completed_at": "2024-09-25T22:15:44.866793Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.867423Z", "completed_at": "2024-09-25T22:15:44.867426Z"}], "thread_id": "Thread-4", "execution_time": 0.010555028915405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_payment_method.552e8460b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere payment_method is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.864526Z", "completed_at": "2024-09-25T22:15:44.889136Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.889354Z", "completed_at": "2024-09-25T22:15:44.889358Z"}], "thread_id": "Thread-3", "execution_time": 0.02939581871032715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_product_category.1766c71bb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere product_category is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.873323Z", "completed_at": "2024-09-25T22:15:44.889893Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.890309Z", "completed_at": "2024-09-25T22:15:44.890311Z"}], "thread_id": "Thread-4", "execution_time": 0.019639015197753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_product_name.a9a0af8e44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere product_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.870937Z", "completed_at": "2024-09-25T22:15:44.890604Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.891354Z", "completed_at": "2024-09-25T22:15:44.891358Z"}], "thread_id": "Thread-1", "execution_time": 0.02348804473876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_product_id.8e73ef4e24", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere product_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_product_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.868329Z", "completed_at": "2024-09-25T22:15:44.890786Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.891664Z", "completed_at": "2024-09-25T22:15:44.891666Z"}], "thread_id": "Thread-2", "execution_time": 0.024738788604736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_product_category_id.da74e704f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere product_category_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_product_category_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.891967Z", "completed_at": "2024-09-25T22:15:44.895609Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.898436Z", "completed_at": "2024-09-25T22:15:44.898440Z"}], "thread_id": "Thread-3", "execution_time": 0.008405923843383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_refund_amount.f6e3861bf0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere refund_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.895785Z", "completed_at": "2024-09-25T22:15:44.903996Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.904511Z", "completed_at": "2024-09-25T22:15:44.904514Z"}], "thread_id": "Thread-4", "execution_time": 0.010244131088256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_returned_cogs.5259a715e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere returned_cogs is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.901582Z", "completed_at": "2024-09-25T22:15:44.905005Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.908255Z", "completed_at": "2024-09-25T22:15:44.908258Z"}], "thread_id": "Thread-2", "execution_time": 0.012896060943603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_tax_rate.83abb81011", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere tax_rate is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_tax_rate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.898778Z", "completed_at": "2024-09-25T22:15:44.905186Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.908564Z", "completed_at": "2024-09-25T22:15:44.908566Z"}], "thread_id": "Thread-1", "execution_time": 0.013410091400146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_tax_amount.405019f249", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders`\nwhere tax_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.905582Z", "completed_at": "2024-09-25T22:15:44.909741Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.912670Z", "completed_at": "2024-09-25T22:15:44.912673Z"}], "thread_id": "Thread-3", "execution_time": 0.008455276489257812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_fct_orders_order_id__order_id__ref_int_orders_.5a03fd2117", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from `moes-dbt-layer`.`sales`.`fct_orders`\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from `moes-dbt-layer`.`staging`.`int_orders`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`relationships_fct_orders_order_id__order_id__ref_int_orders_`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.910331Z", "completed_at": "2024-09-25T22:15:44.918714Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.919155Z", "completed_at": "2024-09-25T22:15:44.919159Z"}], "thread_id": "Thread-4", "execution_time": 0.010338068008422852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_fct_orders_order_id.523ddb6ce5", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_fct_orders_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.916552Z", "completed_at": "2024-09-25T22:15:44.919902Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.922731Z", "completed_at": "2024-09-25T22:15:44.922735Z"}], "thread_id": "Thread-1", "execution_time": 0.012645244598388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_fct_orders_shipping_id.b0be835405", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select shipping_id as unique_field\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n  where shipping_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_fct_orders_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.913621Z", "completed_at": "2024-09-25T22:15:44.920104Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.923039Z", "completed_at": "2024-09-25T22:15:44.923041Z"}], "thread_id": "Thread-2", "execution_time": 0.013157129287719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_fct_orders_return_id.87582f9770", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select return_id as unique_field\n  from `moes-dbt-layer`.`sales`.`fct_orders`\n  where return_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_fct_orders_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.920272Z", "completed_at": "2024-09-25T22:15:44.924026Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.927005Z", "completed_at": "2024-09-25T22:15:44.927008Z"}], "thread_id": "Thread-3", "execution_time": 0.008165121078491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_amazon_pay_amount.7d9e9abbfd", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct amazon_pay_amount) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct amazon_pay_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_amazon_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.924198Z", "completed_at": "2024-09-25T22:15:44.927945Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.933600Z", "completed_at": "2024-09-25T22:15:44.933604Z"}], "thread_id": "Thread-4", "execution_time": 0.011120796203613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_amazon_pay_payment_fees.5ca4935050", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct amazon_pay_payment_fees) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct amazon_pay_payment_fees) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_pay_e8311164492a85011b25a15a86e84a09`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.928131Z", "completed_at": "2024-09-25T22:15:44.936703Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.937318Z", "completed_at": "2024-09-25T22:15:44.937321Z"}], "thread_id": "Thread-1", "execution_time": 0.010771989822387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_apple_pay_amount.269ff4d35e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct apple_pay_amount) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct apple_pay_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_apple_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.931038Z", "completed_at": "2024-09-25T22:15:44.936889Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.937643Z", "completed_at": "2024-09-25T22:15:44.937646Z"}], "thread_id": "Thread-2", "execution_time": 0.010894775390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_apple_pay_payment_fees.e0ab54115b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct apple_pay_payment_fees) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct apple_pay_payment_fees) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_pay_813a2b537ee01f456263166ec9a97dbf`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.934455Z", "completed_at": "2024-09-25T22:15:44.938141Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.941176Z", "completed_at": "2024-09-25T22:15:44.941179Z"}], "thread_id": "Thread-3", "execution_time": 0.007842063903808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_bitcoin_amount.15818a9c60", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct bitcoin_amount) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct bitcoin_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_bitcoin_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.938766Z", "completed_at": "2024-09-25T22:15:44.942558Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.948138Z", "completed_at": "2024-09-25T22:15:44.948142Z"}], "thread_id": "Thread-4", "execution_time": 0.011120080947875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_bitcoin_payment_fees.4cfe95cb5e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct bitcoin_payment_fees) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct bitcoin_payment_fees) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_bitcoin_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.942950Z", "completed_at": "2024-09-25T22:15:44.951641Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.952230Z", "completed_at": "2024-09-25T22:15:44.952234Z"}], "thread_id": "Thread-1", "execution_time": 0.010772228240966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_country.f361beadad", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct country) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.945859Z", "completed_at": "2024-09-25T22:15:44.951816Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.952559Z", "completed_at": "2024-09-25T22:15:44.952563Z"}], "thread_id": "Thread-2", "execution_time": 0.01088404655456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_country_id.b42ed05717", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country_id) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct country_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.948967Z", "completed_at": "2024-09-25T22:15:44.955700Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.956351Z", "completed_at": "2024-09-25T22:15:44.956354Z"}], "thread_id": "Thread-3", "execution_time": 0.013650178909301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_order_date.c02b07ac0e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_date) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct order_date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.952873Z", "completed_at": "2024-09-25T22:15:44.957093Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.957872Z", "completed_at": "2024-09-25T22:15:44.957875Z"}], "thread_id": "Thread-4", "execution_time": 0.006500244140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_order_id.00cc07e79d", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct order_id) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct order_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.958385Z", "completed_at": "2024-09-25T22:15:44.985686Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.986062Z", "completed_at": "2024-09-25T22:15:44.986066Z"}], "thread_id": "Thread-1", "execution_time": 0.0294492244720459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_stripe_amount.9456b323b5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct stripe_amount) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct stripe_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_stripe_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.966147Z", "completed_at": "2024-09-25T22:15:44.985876Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.986804Z", "completed_at": "2024-09-25T22:15:44.986806Z"}], "thread_id": "Thread-4", "execution_time": 0.02336716651916504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_assert_positive_total_gross_revenue.c0d9bfabd1", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(total_gross_revenue > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_assert_positive_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.963697Z", "completed_at": "2024-09-25T22:15:44.986388Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.987358Z", "completed_at": "2024-09-25T22:15:44.987361Z"}], "thread_id": "Thread-3", "execution_time": 0.029221057891845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_assert_positive_nb_payments.bcb7a7d8c9", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(nb_payments > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_assert_positive_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.960731Z", "completed_at": "2024-09-25T22:15:44.986565Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:44.987667Z", "completed_at": "2024-09-25T22:15:44.987669Z"}], "thread_id": "Thread-2", "execution_time": 0.03083205223083496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_payment_methods_stripe_payment_fees.df8b964557", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct stripe_payment_fees) as filler_column\n\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\n  \n\nhaving count(distinct stripe_payment_fees) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_payment_methods_stripe_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.989811Z", "completed_at": "2024-09-25T22:15:45.002517Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.003048Z", "completed_at": "2024-09-25T22:15:45.003054Z"}], "thread_id": "Thread-1", "execution_time": 0.014918088912963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_assert_positive_total_payment_fees.e8836651e3", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(total_payment_fees > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_assert_positive_total_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.992588Z", "completed_at": "2024-09-25T22:15:45.002836Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.003595Z", "completed_at": "2024-09-25T22:15:45.003599Z"}], "thread_id": "Thread-4", "execution_time": 0.01479792594909668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unequal_agg_gross_revenue.61f110d7e7", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`finance`.`fct_payment_methods`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`staging`.`int_payments`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unequal_agg_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.995632Z", "completed_at": "2024-09-25T22:15:45.003421Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.004383Z", "completed_at": "2024-09-25T22:15:45.004386Z"}], "thread_id": "Thread-3", "execution_time": 0.015189170837402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unequal_agg_payment_fees.41bf364193", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_payment_fees) as expression\n    from\n        `moes-dbt-layer`.`finance`.`fct_payment_methods`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(payment_fee) as expression\n    from\n        `moes-dbt-layer`.`staging`.`int_payments`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unequal_agg_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:44.998959Z", "completed_at": "2024-09-25T22:15:45.004178Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.005167Z", "completed_at": "2024-09-25T22:15:45.005170Z"}], "thread_id": "Thread-2", "execution_time": 0.01577305793762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_amazon_pay_amount.d41fa1103d", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(amazon_pay_amount >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_amazon_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.006780Z", "completed_at": "2024-09-25T22:15:45.016237Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.018961Z", "completed_at": "2024-09-25T22:15:45.018966Z"}], "thread_id": "Thread-1", "execution_time": 0.014094114303588867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_amazon_pay_payment_fees.ee2028ca88", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(amazon_pay_payment_fees >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_amazon_pay_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.012630Z", "completed_at": "2024-09-25T22:15:45.019634Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.020084Z", "completed_at": "2024-09-25T22:15:45.020087Z"}], "thread_id": "Thread-3", "execution_time": 0.013763904571533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_apple_pay_payment_fees.8d0aed3e47", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(apple_pay_payment_fees >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_apple_pay_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.009891Z", "completed_at": "2024-09-25T22:15:45.020390Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.021185Z", "completed_at": "2024-09-25T22:15:45.021188Z"}], "thread_id": "Thread-4", "execution_time": 0.015517950057983398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_apple_pay_amount.d0161e7049", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(apple_pay_amount >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_apple_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.016425Z", "completed_at": "2024-09-25T22:15:45.020563Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.021507Z", "completed_at": "2024-09-25T22:15:45.021509Z"}], "thread_id": "Thread-2", "execution_time": 0.01207423210144043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_bitcoin_amount.00b3640521", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(bitcoin_amount >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_bitcoin_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.021812Z", "completed_at": "2024-09-25T22:15:45.028281Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.028867Z", "completed_at": "2024-09-25T22:15:45.028872Z"}], "thread_id": "Thread-1", "execution_time": 0.009098052978515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_bitcoin_payment_fees.2680568c3c", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(bitcoin_payment_fees >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_bitcoin_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.025810Z", "completed_at": "2024-09-25T22:15:45.078531Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.081589Z", "completed_at": "2024-09-25T22:15:45.081594Z"}], "thread_id": "Thread-3", "execution_time": 0.05723118782043457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_country_id.63b418f2a9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`finance`.`fct_payment_methods`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id <= 22\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.032533Z", "completed_at": "2024-09-25T22:15:45.085391Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.085967Z", "completed_at": "2024-09-25T22:15:45.085972Z"}], "thread_id": "Thread-2", "execution_time": 0.0604250431060791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_order_status.35a4bb0b99", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        order_status as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`finance`.`fct_payment_methods`\n    group by order_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','failed'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.029217Z", "completed_at": "2024-09-25T22:15:45.085570Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.086306Z", "completed_at": "2024-09-25T22:15:45.086309Z"}], "thread_id": "Thread-4", "execution_time": 0.06097006797790527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_order_date.01981f60c8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`finance`.`fct_payment_methods`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not order_date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.082904Z", "completed_at": "2024-09-25T22:15:45.088947Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.089657Z", "completed_at": "2024-09-25T22:15:45.089661Z"}], "thread_id": "Thread-1", "execution_time": 0.007714033126831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_stripe_amount.d0d4124728", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(stripe_amount >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_stripe_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.086614Z", "completed_at": "2024-09-25T22:15:45.090386Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.091157Z", "completed_at": "2024-09-25T22:15:45.091160Z"}], "thread_id": "Thread-3", "execution_time": 0.008505105972290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_payment_methods_unexpected_stripe_payment_fees.09c5a52271", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\n\nwhere not(stripe_payment_fees >= 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_payment_methods_unexpected_stripe_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.091690Z", "completed_at": "2024-09-25T22:15:45.100208Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.102899Z", "completed_at": "2024-09-25T22:15:45.102904Z"}], "thread_id": "Thread-2", "execution_time": 0.012965917587280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_amazon_pay_amount.470294cec0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere amazon_pay_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_amazon_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.094702Z", "completed_at": "2024-09-25T22:15:45.102699Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.103455Z", "completed_at": "2024-09-25T22:15:45.103458Z"}], "thread_id": "Thread-4", "execution_time": 0.01330113410949707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_amazon_pay_payment_fees.8ccf82be46", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere amazon_pay_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_amazon_pay_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.097672Z", "completed_at": "2024-09-25T22:15:45.103253Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.104010Z", "completed_at": "2024-09-25T22:15:45.104013Z"}], "thread_id": "Thread-1", "execution_time": 0.012583255767822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_apple_pay_amount.35570bd1df", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere apple_pay_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_apple_pay_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.100389Z", "completed_at": "2024-09-25T22:15:45.104311Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.105160Z", "completed_at": "2024-09-25T22:15:45.105164Z"}], "thread_id": "Thread-3", "execution_time": 0.0077648162841796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_apple_pay_payment_fees.ca555fc60d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere apple_pay_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_apple_pay_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.106559Z", "completed_at": "2024-09-25T22:15:45.120621Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.121321Z", "completed_at": "2024-09-25T22:15:45.121325Z"}], "thread_id": "Thread-2", "execution_time": 0.016646862030029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_bitcoin_amount.d7592abe44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere bitcoin_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_bitcoin_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.109947Z", "completed_at": "2024-09-25T22:15:45.120802Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.121643Z", "completed_at": "2024-09-25T22:15:45.121646Z"}], "thread_id": "Thread-4", "execution_time": 0.01620197296142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_bitcoin_payment_fees.cf4eee780e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere bitcoin_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_bitcoin_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.112322Z", "completed_at": "2024-09-25T22:15:45.120976Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.121943Z", "completed_at": "2024-09-25T22:15:45.121945Z"}], "thread_id": "Thread-1", "execution_time": 0.01611018180847168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_country.eb06966f71", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.114802Z", "completed_at": "2024-09-25T22:15:45.121156Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.122240Z", "completed_at": "2024-09-25T22:15:45.122243Z"}], "thread_id": "Thread-3", "execution_time": 0.012546062469482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_country_id.b66edb05ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.125728Z", "completed_at": "2024-09-25T22:15:45.135465Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.135847Z", "completed_at": "2024-09-25T22:15:45.135851Z"}], "thread_id": "Thread-2", "execution_time": 0.012463808059692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_nb_payments.7a94409e31", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere nb_payments is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_nb_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.127966Z", "completed_at": "2024-09-25T22:15:45.135648Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.136197Z", "completed_at": "2024-09-25T22:15:45.136201Z"}], "thread_id": "Thread-4", "execution_time": 0.012595176696777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_order_date.21aeb8313c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere order_date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_order_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.132401Z", "completed_at": "2024-09-25T22:15:45.136513Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.137306Z", "completed_at": "2024-09-25T22:15:45.137309Z"}], "thread_id": "Thread-3", "execution_time": 0.013294219970703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_order_status.c48b155ca0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere order_status is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_order_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.130172Z", "completed_at": "2024-09-25T22:15:45.136690Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.137616Z", "completed_at": "2024-09-25T22:15:45.137619Z"}], "thread_id": "Thread-1", "execution_time": 0.01380777359008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_order_id.ddee004099", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.139528Z", "completed_at": "2024-09-25T22:15:45.149720Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.150118Z", "completed_at": "2024-09-25T22:15:45.150122Z"}], "thread_id": "Thread-2", "execution_time": 0.012254953384399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_payment_methods.b1f93b15ca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere payment_methods is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_payment_methods`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.141867Z", "completed_at": "2024-09-25T22:15:45.149912Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.150464Z", "completed_at": "2024-09-25T22:15:45.150467Z"}], "thread_id": "Thread-4", "execution_time": 0.01239013671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_stripe_amount.3e4367e046", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere stripe_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_stripe_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.144469Z", "completed_at": "2024-09-25T22:15:45.150766Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.151579Z", "completed_at": "2024-09-25T22:15:45.151582Z"}], "thread_id": "Thread-3", "execution_time": 0.012508153915405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_stripe_payment_fees.78f2cdbed9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere stripe_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_stripe_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.146784Z", "completed_at": "2024-09-25T22:15:45.150944Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.151901Z", "completed_at": "2024-09-25T22:15:45.151904Z"}], "thread_id": "Thread-1", "execution_time": 0.012624979019165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_total_gross_revenue.afe445581b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere total_gross_revenue is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.156026Z", "completed_at": "2024-09-25T22:15:45.164487Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.164878Z", "completed_at": "2024-09-25T22:15:45.164882Z"}], "thread_id": "Thread-4", "execution_time": 0.012522220611572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.relationships_fct_payment_methods_order_id__order_id__ref_int_payments_.05d9a1bed3", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from `moes-dbt-layer`.`finance`.`fct_payment_methods`\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from `moes-dbt-layer`.`staging`.`int_payments`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`relationships_fct_payment_meth_0683abd124324eb777cc740e1f6a852b`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.153821Z", "completed_at": "2024-09-25T22:15:45.164699Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.165219Z", "completed_at": "2024-09-25T22:15:45.165222Z"}], "thread_id": "Thread-2", "execution_time": 0.013058185577392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_payment_methods_total_payment_fees.7bda1ae723", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`finance`.`fct_payment_methods`\nwhere total_payment_fees is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_payment_methods_total_payment_fees`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.159193Z", "completed_at": "2024-09-25T22:15:45.165524Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.166307Z", "completed_at": "2024-09-25T22:15:45.166310Z"}], "thread_id": "Thread-3", "execution_time": 0.012933969497680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.unique_fct_payment_methods_order_id.acc4722fd2", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `moes-dbt-layer`.`finance`.`fct_payment_methods`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`unique_fct_payment_methods_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.161379Z", "completed_at": "2024-09-25T22:15:45.165902Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.166821Z", "completed_at": "2024-09-25T22:15:45.166824Z"}], "thread_id": "Thread-1", "execution_time": 0.013242006301879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_date.ab2e95fd88", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct date) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.168347Z", "completed_at": "2024-09-25T22:15:45.179174Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.179604Z", "completed_at": "2024-09-25T22:15:45.179609Z"}], "thread_id": "Thread-4", "execution_time": 0.01304769515991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales.6d9c0d928c", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.170818Z", "completed_at": "2024-09-25T22:15:45.179378Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.179963Z", "completed_at": "2024-09-25T22:15:45.179965Z"}], "thread_id": "Thread-2", "execution_time": 0.012875080108642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_120.31b039b72d", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_120) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_120) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.173655Z", "completed_at": "2024-09-25T22:15:45.180530Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.181347Z", "completed_at": "2024-09-25T22:15:45.181350Z"}], "thread_id": "Thread-3", "execution_time": 0.013247966766357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_14.7f1f00cf63", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_14) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_14) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.176922Z", "completed_at": "2024-09-25T22:15:45.180931Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.181868Z", "completed_at": "2024-09-25T22:15:45.181872Z"}], "thread_id": "Thread-1", "execution_time": 0.011304855346679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_30.616bcd1a4e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_30) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_30) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.183026Z", "completed_at": "2024-09-25T22:15:45.192980Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.195584Z", "completed_at": "2024-09-25T22:15:45.195589Z"}], "thread_id": "Thread-4", "execution_time": 0.014516115188598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_60.9811859a6e", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_60) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_60) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.185538Z", "completed_at": "2024-09-25T22:15:45.195357Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.195960Z", "completed_at": "2024-09-25T22:15:45.195962Z"}], "thread_id": "Thread-2", "execution_time": 0.014338970184326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_7.461d74deaa", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_7) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_7) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.193163Z", "completed_at": "2024-09-25T22:15:45.197218Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.197950Z", "completed_at": "2024-09-25T22:15:45.197954Z"}], "thread_id": "Thread-1", "execution_time": 0.008751153945922852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_14.7801e53ac5", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_14) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_lower_14) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.189913Z", "completed_at": "2024-09-25T22:15:45.197404Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.198266Z", "completed_at": "2024-09-25T22:15:45.198269Z"}], "thread_id": "Thread-3", "execution_time": 0.012975931167602539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_120.56b24be5ef", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_120) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_lower_120) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_ord_772868056ed4cb0f8ca6027c8f07f35d`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.198574Z", "completed_at": "2024-09-25T22:15:45.204156Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.207651Z", "completed_at": "2024-09-25T22:15:45.207656Z"}], "thread_id": "Thread-4", "execution_time": 0.010950088500976562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_30.a8a0f672c9", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_30) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_lower_30) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.200794Z", "completed_at": "2024-09-25T22:15:45.204329Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.207969Z", "completed_at": "2024-09-25T22:15:45.207971Z"}], "thread_id": "Thread-2", "execution_time": 0.011054039001464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_60.953ba45a42", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_60) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_lower_60) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.204688Z", "completed_at": "2024-09-25T22:15:45.211133Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.211936Z", "completed_at": "2024-09-25T22:15:45.211940Z"}], "thread_id": "Thread-1", "execution_time": 0.008495807647705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_7.63af794aca", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_lower_7) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_lower_7) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_lower_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.208271Z", "completed_at": "2024-09-25T22:15:45.211761Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.212699Z", "completed_at": "2024-09-25T22:15:45.212702Z"}], "thread_id": "Thread-3", "execution_time": 0.009016752243041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_120.d7519087cd", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_120) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_upper_120) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_ord_44b881d0fd3f9e899e8a63d7e4545654`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.215968Z", "completed_at": "2024-09-25T22:15:45.219588Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.225497Z", "completed_at": "2024-09-25T22:15:45.225503Z"}], "thread_id": "Thread-2", "execution_time": 0.014004945755004883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_30.c923b2d42f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_30) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_upper_30) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.213256Z", "completed_at": "2024-09-25T22:15:45.219779Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.225855Z", "completed_at": "2024-09-25T22:15:45.225858Z"}], "thread_id": "Thread-4", "execution_time": 0.014590024948120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_14.1b34601694", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_14) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_upper_14) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.223233Z", "completed_at": "2024-09-25T22:15:45.226743Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.229597Z", "completed_at": "2024-09-25T22:15:45.229601Z"}], "thread_id": "Thread-3", "execution_time": 0.010717153549194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_7.be6c4cd879", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_7) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_upper_7) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.219948Z", "completed_at": "2024-09-25T22:15:45.229184Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.230107Z", "completed_at": "2024-09-25T22:15:45.230112Z"}], "thread_id": "Thread-1", "execution_time": 0.011528968811035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_60.216317462d", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_sma_upper_60) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_sma_upper_60) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_sma_upper_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.233462Z", "completed_at": "2024-09-25T22:15:45.239958Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.242456Z", "completed_at": "2024-09-25T22:15:45.242461Z"}], "thread_id": "Thread-4", "execution_time": 0.013132810592651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_assert_positive_sales.47ba5c045f", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\nwhere not(sales > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_timeseries_assert_positive_sales`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.230861Z", "completed_at": "2024-09-25T22:15:45.243308Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.243985Z", "completed_at": "2024-09-25T22:15:45.243988Z"}], "thread_id": "Thread-2", "execution_time": 0.017086029052734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_fct_orders_timeseries_sales_wma_7.b5c2496ec2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct sales_wma_7) as filler_column\n\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\n  \n\nhaving count(distinct sales_wma_7) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_fct_orders_timeseries_sales_wma_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.240140Z", "completed_at": "2024-09-25T22:15:45.243475Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.244288Z", "completed_at": "2024-09-25T22:15:45.244291Z"}], "thread_id": "Thread-1", "execution_time": 0.008255958557128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_assert_positive_sales_sma_14.2e08057e27", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\nwhere not(sales_sma_14 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_timeseries_assert_positive_sales_sma_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.237632Z", "completed_at": "2024-09-25T22:15:45.243637Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.244576Z", "completed_at": "2024-09-25T22:15:45.244579Z"}], "thread_id": "Thread-3", "execution_time": 0.008807182312011719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_assert_positive_sales_sma_120.fd13c5b0e3", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\nwhere not(sales_sma_120 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_timeseries_assert_positive_sales_sma_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.244883Z", "completed_at": "2024-09-25T22:15:45.248788Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.252275Z", "completed_at": "2024-09-25T22:15:45.252278Z"}], "thread_id": "Thread-4", "execution_time": 0.009220123291015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_assert_positive_sales_sma_30.da31c747a0", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\nwhere not(sales_sma_30 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_timeseries_assert_positive_sales_sma_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.249323Z", "completed_at": "2024-09-25T22:15:45.257986Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.258782Z", "completed_at": "2024-09-25T22:15:45.258788Z"}], "thread_id": "Thread-2", "execution_time": 0.010864019393920898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_assert_positive_sales_sma_60.82bcfa676e", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\nwhere not(sales_sma_60 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_timeseries_assert_positive_sales_sma_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.254950Z", "completed_at": "2024-09-25T22:15:45.258420Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.263032Z", "completed_at": "2024-09-25T22:15:45.263039Z"}], "thread_id": "Thread-3", "execution_time": 0.014698028564453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_assert_positive_sales_wma_7.acb367b4f7", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\nwhere not(sales_wma_7 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_timeseries_assert_positive_sales_wma_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.252566Z", "completed_at": "2024-09-25T22:15:45.258599Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.263408Z", "completed_at": "2024-09-25T22:15:45.263411Z"}], "thread_id": "Thread-1", "execution_time": 0.015264034271240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_assert_positive_sales_sma_7.1acf12621d", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n\nwhere not(sales_sma_7 > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_timeseries_assert_positive_sales_sma_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.259130Z", "completed_at": "2024-09-25T22:15:45.264912Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.265642Z", "completed_at": "2024-09-25T22:15:45.265645Z"}], "thread_id": "Thread-4", "execution_time": 0.007919788360595703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.fct_orders_timeseries_unequal_agg_sales.30a2a49b0f", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(sales) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(net_revenue_after_tax) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`fct_orders_timeseries_unequal_agg_sales`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.266134Z", "completed_at": "2024-09-25T22:15:45.275667Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.278473Z", "completed_at": "2024-09-25T22:15:45.278481Z"}], "thread_id": "Thread-2", "execution_time": 0.01407170295715332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_date.b381c02cd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.269661Z", "completed_at": "2024-09-25T22:15:45.278288Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.279091Z", "completed_at": "2024-09-25T22:15:45.279094Z"}], "thread_id": "Thread-3", "execution_time": 0.014441967010498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_120.8f5aafa3dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_120 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.272691Z", "completed_at": "2024-09-25T22:15:45.278846Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.279668Z", "completed_at": "2024-09-25T22:15:45.279672Z"}], "thread_id": "Thread-1", "execution_time": 0.014638185501098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_14.40150155a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_14 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.275867Z", "completed_at": "2024-09-25T22:15:45.280005Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.280883Z", "completed_at": "2024-09-25T22:15:45.280887Z"}], "thread_id": "Thread-4", "execution_time": 0.005754947662353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_30.c838e098f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_30 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.282257Z", "completed_at": "2024-09-25T22:15:45.291470Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.294928Z", "completed_at": "2024-09-25T22:15:45.294933Z"}], "thread_id": "Thread-2", "execution_time": 0.01455998420715332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_60.18ec45007c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_60 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.286003Z", "completed_at": "2024-09-25T22:15:45.295604Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.296217Z", "completed_at": "2024-09-25T22:15:45.296220Z"}], "thread_id": "Thread-3", "execution_time": 0.015060901641845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_7.ea19e08f40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_7 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.288671Z", "completed_at": "2024-09-25T22:15:45.295794Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.296703Z", "completed_at": "2024-09-25T22:15:45.296706Z"}], "thread_id": "Thread-1", "execution_time": 0.015132904052734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_lower_120.71189f05ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_lower_120 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_lower_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.291685Z", "completed_at": "2024-09-25T22:15:45.296528Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.297420Z", "completed_at": "2024-09-25T22:15:45.297423Z"}], "thread_id": "Thread-4", "execution_time": 0.011690139770507812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_lower_14.424a449162", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_lower_14 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_lower_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.297977Z", "completed_at": "2024-09-25T22:15:45.302101Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.308065Z", "completed_at": "2024-09-25T22:15:45.308071Z"}], "thread_id": "Thread-2", "execution_time": 0.012127161026000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_lower_30.5d650a340f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_lower_30 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_lower_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.302283Z", "completed_at": "2024-09-25T22:15:45.312496Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.313207Z", "completed_at": "2024-09-25T22:15:45.313212Z"}], "thread_id": "Thread-3", "execution_time": 0.012508153915405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_lower_60.512868070d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_lower_60 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_lower_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.305370Z", "completed_at": "2024-09-25T22:15:45.312745Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.313545Z", "completed_at": "2024-09-25T22:15:45.313549Z"}], "thread_id": "Thread-1", "execution_time": 0.012368202209472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_lower_7.cc98f14324", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_lower_7 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_lower_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.308458Z", "completed_at": "2024-09-25T22:15:45.313843Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.314688Z", "completed_at": "2024-09-25T22:15:45.314691Z"}], "thread_id": "Thread-4", "execution_time": 0.01306009292602539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_upper_120.17c2c7427c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_upper_120 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_upper_120`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.315010Z", "completed_at": "2024-09-25T22:15:45.324486Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.324937Z", "completed_at": "2024-09-25T22:15:45.324943Z"}], "thread_id": "Thread-2", "execution_time": 0.01204681396484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_upper_14.f0599f63a8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_upper_14 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_upper_14`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.319033Z", "completed_at": "2024-09-25T22:15:45.342312Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.343165Z", "completed_at": "2024-09-25T22:15:45.343172Z"}], "thread_id": "Thread-3", "execution_time": 0.02554488182067871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_upper_30.bf14be3b40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_upper_30 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_upper_30`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.321867Z", "completed_at": "2024-09-25T22:15:45.342610Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.343554Z", "completed_at": "2024-09-25T22:15:45.343557Z"}], "thread_id": "Thread-1", "execution_time": 0.025678634643554688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_upper_60.d59716fbd8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_upper_60 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_upper_60`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.325288Z", "completed_at": "2024-09-25T22:15:45.342802Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.343872Z", "completed_at": "2024-09-25T22:15:45.343875Z"}], "thread_id": "Thread-4", "execution_time": 0.025112152099609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_sma_upper_7.a20865167f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_sma_upper_7 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_sma_upper_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.329644Z", "completed_at": "2024-09-25T22:15:45.342987Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.344179Z", "completed_at": "2024-09-25T22:15:45.344182Z"}], "thread_id": "Thread-2", "execution_time": 0.014986038208007812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_fct_orders_timeseries_sales_wma_7.e9828142f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`sales`.`fct_orders_timeseries`\nwhere sales_wma_7 is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_fct_orders_timeseries_sales_wma_7`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.368487Z", "completed_at": "2024-09-25T22:15:45.387091Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.388081Z", "completed_at": "2024-09-25T22:15:45.388088Z"}], "thread_id": "Thread-2", "execution_time": 0.0419769287109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_country_id.ed74d915c2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country_id) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct country_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.364988Z", "completed_at": "2024-09-25T22:15:45.387463Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.388484Z", "completed_at": "2024-09-25T22:15:45.388487Z"}], "thread_id": "Thread-4", "execution_time": 0.0425562858581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_country.3c8ed213c7", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct country) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct country) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.347187Z", "completed_at": "2024-09-25T22:15:45.387677Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.388812Z", "completed_at": "2024-09-25T22:15:45.388815Z"}], "thread_id": "Thread-3", "execution_time": 0.04333686828613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_avg_fulfillment_days.feb31904d2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct avg_fulfillment_days) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct avg_fulfillment_days) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_avg_fulfillment_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.362181Z", "completed_at": "2024-09-25T22:15:45.387885Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.389132Z", "completed_at": "2024-09-25T22:15:45.389134Z"}], "thread_id": "Thread-1", "execution_time": 0.04341006278991699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_avg_nps_score.58fba2347f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct avg_nps_score) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct avg_nps_score) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_avg_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.392182Z", "completed_at": "2024-09-25T22:15:45.420520Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.421418Z", "completed_at": "2024-09-25T22:15:45.421425Z"}], "thread_id": "Thread-2", "execution_time": 0.031003713607788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_date.f4fc713dc9", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct date) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct date) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.398357Z", "completed_at": "2024-09-25T22:15:45.420819Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.421785Z", "completed_at": "2024-09-25T22:15:45.421787Z"}], "thread_id": "Thread-3", "execution_time": 0.030879974365234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_nb_return_id.6fc6712643", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nb_return_id) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct nb_return_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_nb_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.400903Z", "completed_at": "2024-09-25T22:15:45.421018Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.422089Z", "completed_at": "2024-09-25T22:15:45.422091Z"}], "thread_id": "Thread-1", "execution_time": 0.030946969985961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_nb_shipping_id.de0c73bde0", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nb_shipping_id) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct nb_shipping_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_nb_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.394964Z", "completed_at": "2024-09-25T22:15:45.421226Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.422394Z", "completed_at": "2024-09-25T22:15:45.422396Z"}], "thread_id": "Thread-4", "execution_time": 0.03171277046203613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_nb_order_id.72ef84204a", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct nb_order_id) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct nb_order_id) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_nb_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.451701Z", "completed_at": "2024-09-25T22:15:45.467280Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.468101Z", "completed_at": "2024-09-25T22:15:45.468108Z"}], "thread_id": "Thread-1", "execution_time": 0.023624897003173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_cm.30608c74a2", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_cm) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_cm) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_total_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.445772Z", "completed_at": "2024-09-25T22:15:45.467533Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.468479Z", "completed_at": "2024-09-25T22:15:45.468482Z"}], "thread_id": "Thread-2", "execution_time": 0.02444005012512207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_product_category.4a89a363ad", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_category) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct product_category) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.454150Z", "completed_at": "2024-09-25T22:15:45.467727Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.468790Z", "completed_at": "2024-09-25T22:15:45.468792Z"}], "thread_id": "Thread-4", "execution_time": 0.024051904678344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_cogs.ec17a924f7", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_cogs) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_cogs) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_total_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.448478Z", "completed_at": "2024-09-25T22:15:45.467916Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.469089Z", "completed_at": "2024-09-25T22:15:45.469092Z"}], "thread_id": "Thread-3", "execution_time": 0.024787187576293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_product_name.76f63d55df", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct product_name) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct product_name) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.472042Z", "completed_at": "2024-09-25T22:15:45.484654Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.485081Z", "completed_at": "2024-09-25T22:15:45.485087Z"}], "thread_id": "Thread-1", "execution_time": 0.014763832092285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_gross_revenue.372735f062", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_gross_revenue) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_gross_revenue) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.478522Z", "completed_at": "2024-09-25T22:15:45.484880Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.485472Z", "completed_at": "2024-09-25T22:15:45.485475Z"}], "thread_id": "Thread-4", "execution_time": 0.014667034149169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_net_revenue_before_tax.d40cce386b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_net_revenue_before_tax) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_net_revenue_before_tax) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_pro_41f89cc05d67c2834c5b1e3abe254e09`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.474973Z", "completed_at": "2024-09-25T22:15:45.486032Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.487181Z", "completed_at": "2024-09-25T22:15:45.487185Z"}], "thread_id": "Thread-2", "execution_time": 0.016614198684692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_net_revenue_after_tax.efb6a5d29f", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_net_revenue_after_tax) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_net_revenue_after_tax) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_total_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.481429Z", "completed_at": "2024-09-25T22:15:45.486255Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.487520Z", "completed_at": "2024-09-25T22:15:45.487523Z"}], "thread_id": "Thread-3", "execution_time": 0.016499996185302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_payment_fee.b6c559fc4a", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_payment_fee) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_payment_fee) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_total_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.499771Z", "completed_at": "2024-09-25T22:15:45.507807Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.508671Z", "completed_at": "2024-09-25T22:15:45.508677Z"}], "thread_id": "Thread-3", "execution_time": 0.016474008560180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_avg_fulfillment_days.089c583b64", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\nwhere not(avg_fulfillment_days > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_assert_positive_avg_fulfillment_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.497045Z", "completed_at": "2024-09-25T22:15:45.508084Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.511154Z", "completed_at": "2024-09-25T22:15:45.511159Z"}], "thread_id": "Thread-2", "execution_time": 0.019173145294189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_tax_amount.4428565fd6", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_tax_amount) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_tax_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_total_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.492516Z", "completed_at": "2024-09-25T22:15:45.508298Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.511514Z", "completed_at": "2024-09-25T22:15:45.511517Z"}], "thread_id": "Thread-4", "execution_time": 0.02372598648071289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_returned_cogs.f6c63eb1d6", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_returned_cogs) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_returned_cogs) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_total_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.488889Z", "completed_at": "2024-09-25T22:15:45.508481Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.511841Z", "completed_at": "2024-09-25T22:15:45.511845Z"}], "thread_id": "Thread-1", "execution_time": 0.025055885314941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dbt_utils_not_constant_dim_products_total_refund_amount.438fc2fc1b", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n    \n    \n    \n    count(distinct total_refund_amount) as filler_column\n\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\n  \n\nhaving count(distinct total_refund_amount) = 1\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dbt_utils_not_constant_dim_products_total_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.523592Z", "completed_at": "2024-09-25T22:15:45.533182Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.534026Z", "completed_at": "2024-09-25T22:15:45.534032Z"}], "thread_id": "Thread-1", "execution_time": 0.020177364349365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_net_revenue_after_tax.ba2c6febe9", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\nwhere not(total_net_revenue_after_tax > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_assert_positive_total_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.514934Z", "completed_at": "2024-09-25T22:15:45.533440Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.534419Z", "completed_at": "2024-09-25T22:15:45.534422Z"}], "thread_id": "Thread-3", "execution_time": 0.02123880386352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_avg_nps_score.e3d03c7b27", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\nwhere not(avg_nps_score > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_assert_positive_avg_nps_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.521119Z", "completed_at": "2024-09-25T22:15:45.533644Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.534740Z", "completed_at": "2024-09-25T22:15:45.534743Z"}], "thread_id": "Thread-4", "execution_time": 0.02106499671936035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_gross_revenue.c2247b3969", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\nwhere not(total_gross_revenue > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_assert_positive_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.518568Z", "completed_at": "2024-09-25T22:15:45.533821Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.535041Z", "completed_at": "2024-09-25T22:15:45.535044Z"}], "thread_id": "Thread-2", "execution_time": 0.02159714698791504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_cogs.4fcaffbba3", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\nwhere not(total_cogs > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_assert_positive_total_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.541591Z", "completed_at": "2024-09-25T22:15:45.550910Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.551652Z", "completed_at": "2024-09-25T22:15:45.551659Z"}], "thread_id": "Thread-3", "execution_time": 0.015233993530273438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_payment_fee.b1975067f6", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\nwhere not(total_payment_fee > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_assert_positive_total_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.547151Z", "completed_at": "2024-09-25T22:15:45.551117Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.552013Z", "completed_at": "2024-09-25T22:15:45.552015Z"}], "thread_id": "Thread-2", "execution_time": 0.01513671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_cm.5e6ccd2b8c", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_cm) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(cm) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.537920Z", "completed_at": "2024-09-25T22:15:45.551303Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.552322Z", "completed_at": "2024-09-25T22:15:45.552326Z"}], "thread_id": "Thread-1", "execution_time": 0.01611804962158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_net_revenue_before_tax.c43767ddeb", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\nwhere not(total_net_revenue_before_tax > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_assert_positive_total_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.544481Z", "completed_at": "2024-09-25T22:15:45.551485Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.552696Z", "completed_at": "2024-09-25T22:15:45.552699Z"}], "thread_id": "Thread-4", "execution_time": 0.01603388786315918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_assert_positive_total_tax_amount.c699116ec6", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom `moes-dbt-layer`.`product`.`dim_products`\n\nwhere not(total_tax_amount > 0)\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_assert_positive_total_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.555677Z", "completed_at": "2024-09-25T22:15:45.571706Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.571939Z", "completed_at": "2024-09-25T22:15:45.571945Z"}], "thread_id": "Thread-3", "execution_time": 0.017948389053344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_cogs.1d3a202822", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_cogs) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(cogs) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.563375Z", "completed_at": "2024-09-25T22:15:45.573004Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.576796Z", "completed_at": "2024-09-25T22:15:45.576802Z"}], "thread_id": "Thread-1", "execution_time": 0.022342920303344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_net_revenue_after_tax.f97dfdf7da", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_net_revenue_after_tax) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(net_revenue_after_tax) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.560156Z", "completed_at": "2024-09-25T22:15:45.576553Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.577359Z", "completed_at": "2024-09-25T22:15:45.577361Z"}], "thread_id": "Thread-2", "execution_time": 0.023097991943359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_gross_revenue.c37f597c7f", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(gross_revenue) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.566830Z", "completed_at": "2024-09-25T22:15:45.577139Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.577967Z", "completed_at": "2024-09-25T22:15:45.577972Z"}], "thread_id": "Thread-4", "execution_time": 0.023294925689697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_net_revenue_before_tax.cf29af6db1", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_net_revenue_before_tax) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(net_revenue_before_tax) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.573203Z", "completed_at": "2024-09-25T22:15:45.578571Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.579525Z", "completed_at": "2024-09-25T22:15:45.579529Z"}], "thread_id": "Thread-3", "execution_time": 0.00704503059387207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_payment_fee.83ef9782e7", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_payment_fee) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(payment_fee) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.584837Z", "completed_at": "2024-09-25T22:15:45.594275Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.597465Z", "completed_at": "2024-09-25T22:15:45.597473Z"}], "thread_id": "Thread-2", "execution_time": 0.01823115348815918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_returned_cogs.7fe2b08a8f", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_returned_cogs) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(returned_cogs) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.580687Z", "completed_at": "2024-09-25T22:15:45.594482Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.597841Z", "completed_at": "2024-09-25T22:15:45.597844Z"}], "thread_id": "Thread-1", "execution_time": 0.019088029861450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_refund_amount.9e245aca75", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_refund_amount) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(refund_amount) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.589051Z", "completed_at": "2024-09-25T22:15:45.598152Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.598934Z", "completed_at": "2024-09-25T22:15:45.598938Z"}], "thread_id": "Thread-4", "execution_time": 0.01894378662109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unequal_agg_total_tax_amount.639980c235", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        sum(total_tax_amount) as expression\n    from\n        `moes-dbt-layer`.`product`.`dim_products`\n    \n\n    ),\n    b as (\n        \n    select\n        \n        sum(tax_amount) as expression\n    from\n        `moes-dbt-layer`.`sales`.`fct_orders`\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unequal_agg_total_tax_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.594672Z", "completed_at": "2024-09-25T22:15:45.599490Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.601427Z", "completed_at": "2024-09-25T22:15:45.601433Z"}], "thread_id": "Thread-3", "execution_time": 0.012733936309814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unexpected_country_id.87d133469b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`product`.`dim_products`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not country_id <= 10\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unexpected_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.602229Z", "completed_at": "2024-09-25T22:15:45.612386Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.615372Z", "completed_at": "2024-09-25T22:15:45.615378Z"}], "thread_id": "Thread-2", "execution_time": 0.016165971755981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unexpected_date.8ba6ea57ff", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from `moes-dbt-layer`.`product`.`dim_products`\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not date <= current_datetime()\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unexpected_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.605441Z", "completed_at": "2024-09-25T22:15:45.615148Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.615961Z", "completed_at": "2024-09-25T22:15:45.615964Z"}], "thread_id": "Thread-1", "execution_time": 0.016326904296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.dim_products_unexpected_product_category.c192a37430", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_category as value_field,\n        count(*) as n_records\n\n    from `moes-dbt-layer`.`product`.`dim_products`\n    group by product_category\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Design Templates','Fonts & Typography','Graphic Assets','Stock Photography','Video & Animation'\n)\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`dim_products_unexpected_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.609534Z", "completed_at": "2024-09-25T22:15:45.615773Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.616726Z", "completed_at": "2024-09-25T22:15:45.616730Z"}], "thread_id": "Thread-4", "execution_time": 0.014789342880249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_country.5bb34d1877", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere country is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_country`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.612577Z", "completed_at": "2024-09-25T22:15:45.616545Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.617520Z", "completed_at": "2024-09-25T22:15:45.617523Z"}], "thread_id": "Thread-3", "execution_time": 0.008389711380004883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_country_id.ebbcb8b76e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere country_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_country_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.619138Z", "completed_at": "2024-09-25T22:15:45.678749Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.682368Z", "completed_at": "2024-09-25T22:15:45.682375Z"}], "thread_id": "Thread-2", "execution_time": 0.06515312194824219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_date.574048cf21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere date is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.622216Z", "completed_at": "2024-09-25T22:15:45.682760Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.683290Z", "completed_at": "2024-09-25T22:15:45.683294Z"}], "thread_id": "Thread-1", "execution_time": 0.06521129608154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_nb_order_id.3bd5159215", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere nb_order_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_nb_order_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.679007Z", "completed_at": "2024-09-25T22:15:45.683922Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.684720Z", "completed_at": "2024-09-25T22:15:45.684724Z"}], "thread_id": "Thread-3", "execution_time": 0.06296300888061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_nb_shipping_id.6210429e27", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere nb_shipping_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_nb_shipping_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.675887Z", "completed_at": "2024-09-25T22:15:45.684118Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.685043Z", "completed_at": "2024-09-25T22:15:45.685047Z"}], "thread_id": "Thread-4", "execution_time": 0.0663299560546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_nb_return_id.496158f2a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere nb_return_id is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_nb_return_id`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.685570Z", "completed_at": "2024-09-25T22:15:45.693117Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.696106Z", "completed_at": "2024-09-25T22:15:45.696113Z"}], "thread_id": "Thread-2", "execution_time": 0.012496232986450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_product_category.069796c541", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere product_category is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_product_category`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.689483Z", "completed_at": "2024-09-25T22:15:45.698942Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.699477Z", "completed_at": "2024-09-25T22:15:45.699482Z"}], "thread_id": "Thread-1", "execution_time": 0.01416778564453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_product_name.991aec73f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere product_name is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_product_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.693527Z", "completed_at": "2024-09-25T22:15:45.699810Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.700705Z", "completed_at": "2024-09-25T22:15:45.700709Z"}], "thread_id": "Thread-3", "execution_time": 0.011731863021850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_cm.1e2bfa8ee1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_cm is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_cm`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.696468Z", "completed_at": "2024-09-25T22:15:45.700496Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.701504Z", "completed_at": "2024-09-25T22:15:45.701506Z"}], "thread_id": "Thread-4", "execution_time": 0.012286901473999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_cogs.4764d28c01", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_cogs is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.702059Z", "completed_at": "2024-09-25T22:15:45.709376Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.712932Z", "completed_at": "2024-09-25T22:15:45.712939Z"}], "thread_id": "Thread-2", "execution_time": 0.01297307014465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_gross_revenue.de39c2a3eb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_gross_revenue is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_gross_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.705425Z", "completed_at": "2024-09-25T22:15:45.713297Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.716477Z", "completed_at": "2024-09-25T22:15:45.716481Z"}], "thread_id": "Thread-1", "execution_time": 0.015323162078857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_net_revenue_after_tax.f2faaacfd9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_net_revenue_after_tax is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_net_revenue_after_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.709855Z", "completed_at": "2024-09-25T22:15:45.717184Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.718091Z", "completed_at": "2024-09-25T22:15:45.718094Z"}], "thread_id": "Thread-3", "execution_time": 0.012981891632080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_net_revenue_before_tax.47c7127675", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_net_revenue_before_tax is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_net_revenue_before_tax`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.713492Z", "completed_at": "2024-09-25T22:15:45.717679Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.718635Z", "completed_at": "2024-09-25T22:15:45.718638Z"}], "thread_id": "Thread-4", "execution_time": 0.009839057922363281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_payment_fee.31a176c2f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_payment_fee is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_payment_fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.719026Z", "completed_at": "2024-09-25T22:15:45.726378Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.729137Z", "completed_at": "2024-09-25T22:15:45.729143Z"}], "thread_id": "Thread-2", "execution_time": 0.012256145477294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_refund_amount.8811aa6bc7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_refund_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_refund_amount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.723541Z", "completed_at": "2024-09-25T22:15:45.729661Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.729861Z", "completed_at": "2024-09-25T22:15:45.729864Z"}], "thread_id": "Thread-1", "execution_time": 0.011488914489746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_returned_cogs.a5ad2fc4e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_returned_cogs is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_returned_cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-25T22:15:45.726566Z", "completed_at": "2024-09-25T22:15:45.730272Z"}, {"name": "execute", "started_at": "2024-09-25T22:15:45.730467Z", "completed_at": "2024-09-25T22:15:45.730470Z"}], "thread_id": "Thread-3", "execution_time": 0.007213115692138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_analytics_engine.not_null_dim_products_total_tax_amount.54c3118144", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom `moes-dbt-layer`.`product`.`dim_products`\nwhere total_tax_amount is null\n\n\n", "relation_name": "`moes-dbt-layer`.`failed_tests`.`not_null_dim_products_total_tax_amount`"}], "elapsed_time": 3.4605472087860107, "args": {"require_explicit_package_overrides_for_builtin_materializations": true, "use_colors": true, "log_level": "info", "partial_parse": true, "target": "prod", "which": "generate", "quiet": false, "log_file_max_bytes": 10485760, "static": false, "project_dir": "/Users/moeabbas/Documents/code/git/moeabbas6/dbt_analytics_engine", "log_format": "default", "exclude": [], "partial_parse_file_diff": true, "show_resource_report": false, "write_json": true, "cache_selected_only": false, "log_path": "/Users/moeabbas/Documents/code/git/moeabbas6/dbt_analytics_engine/logs", "require_resource_names_without_spaces": false, "indirect_selection": "cautious", "introspect": true, "invocation_command": "dbt docs generate --target prod", "vars": {}, "send_anonymous_usage_stats": false, "strict_mode": false, "use_colors_file": true, "defer": false, "source_freshness_run_project_hooks": false, "enable_legacy_logger": false, "print": true, "profiles_dir": "/Users/moeabbas/.dbt", "warn_error_options": {"include": [], "exclude": []}, "log_format_file": "debug", "log_level_file": "debug", "macro_debugging": false, "favor_state": false, "empty_catalog": false, "populate_cache": true, "version_check": true, "static_parser": true, "printer_width": 100, "compile": true, "select": []}}